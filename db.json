{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/upload/2015/06/201506171434474172281858.png","path":"upload/2015/06/201506171434474172281858.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475688960684.png","path":"upload/2015/06/201506171434475688960684.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475730629382.png","path":"upload/2015/06/201506171434475730629382.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475732113440.png","path":"upload/2015/06/201506171434475732113440.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713650204443.png","path":"upload/2015/07/201507121436713650204443.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713815504633.jpg","path":"upload/2015/07/201507121436713815504633.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713815115295.png","path":"upload/2015/07/201507121436713815115295.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713816112799.jpg","path":"upload/2015/07/201507121436713816112799.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713816427305.jpg","path":"upload/2015/07/201507121436713816427305.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713816856762.jpg","path":"upload/2015/07/201507121436713816856762.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713816968516.jpg","path":"upload/2015/07/201507121436713816968516.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507121436713817137826.jpg","path":"upload/2015/07/201507121436713817137826.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788453805554.jpg","path":"upload/2015/07/201507131436788453805554.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788417101357.png","path":"upload/2015/07/201507131436788417101357.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788496442797.jpg","path":"upload/2015/07/201507131436788496442797.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788506598227.jpg","path":"upload/2015/07/201507131436788506598227.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788519124077.jpg","path":"upload/2015/07/201507131436788519124077.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788541745525.jpg","path":"upload/2015/07/201507131436788541745525.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788571117265.jpg","path":"upload/2015/07/201507131436788571117265.jpg","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507131436788593429629.jpg","path":"upload/2015/07/201507131436788593429629.jpg","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602291456728783308021.png","path":"upload/2016/02/201602291456728783308021.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602291456728851354710.png","path":"upload/2016/02/201602291456728851354710.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602291456729113103878.png","path":"upload/2016/02/201602291456729113103878.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602291456738265125261.png","path":"upload/2016/02/201602291456738265125261.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/upload/2015/06/201506121434101916134723.png","path":"upload/2015/06/201506121434101916134723.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475089494521.png","path":"upload/2015/06/201506171434475089494521.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475727892479.png","path":"upload/2015/06/201506171434475727892479.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475776133777.png","path":"upload/2015/06/201506171434475776133777.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602291456728901300663.png","path":"upload/2016/02/201602291456728901300663.png","modified":0,"renderable":0},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"source/upload/2015/06/201506121434101916133811.png","path":"upload/2015/06/201506121434101916133811.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475097188909.png","path":"upload/2015/06/201506171434475097188909.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475329103685.png","path":"upload/2015/06/201506171434475329103685.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475391341801.png","path":"upload/2015/06/201506171434475391341801.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434475726111383.png","path":"upload/2015/06/201506171434475726111383.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434477083764846.png","path":"upload/2015/06/201506171434477083764846.png","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434477084135584.png","path":"upload/2015/06/201506171434477084135584.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507141436844080181981.png","path":"upload/2015/07/201507141436844080181981.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507141436844080465044.png","path":"upload/2015/07/201507141436844080465044.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507141436844080960125.png","path":"upload/2015/07/201507141436844080960125.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507231437642625119761.png","path":"upload/2015/07/201507231437642625119761.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602221456106031866272.png","path":"upload/2016/02/201602221456106031866272.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602221456106032909863.png","path":"upload/2016/02/201602221456106032909863.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/upload/2015/06/201506171434475712440731.png","path":"upload/2015/06/201506171434475712440731.png","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507141436844080112252.png","path":"upload/2015/07/201507141436844080112252.png","modified":0,"renderable":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/upload/2015/06/201506171434475305133437.png","path":"upload/2015/06/201506171434475305133437.png","modified":0,"renderable":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/upload/2016/02/201602221456106033799573.png","path":"upload/2016/02/201602221456106033799573.png","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602221456106035136892.png","path":"upload/2016/02/201602221456106035136892.png","modified":0,"renderable":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/upload/2015/09/201509021441179219153924.gif","path":"upload/2015/09/201509021441179219153924.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507311438274262700084.gif","path":"upload/2015/07/201507311438274262700084.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507281438048301122567.gif","path":"upload/2015/07/201507281438048301122567.gif","modified":0,"renderable":0},{"_id":"source/upload/2016/02/201602281456654040118978.gif","path":"upload/2016/02/201602281456654040118978.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/09/201509021441179396414955.gif","path":"upload/2015/09/201509021441179396414955.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/07/201507231437642603106757.gif","path":"upload/2015/07/201507231437642603106757.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/12/201512161450234594832794.gif","path":"upload/2015/12/201512161450234594832794.gif","modified":0,"renderable":0},{"_id":"source/upload/2015/06/201506171434476041565265.gif","path":"upload/2015/06/201506171434476041565265.gif","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1458209673287},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1458209673290},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1458209673304},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1458209673306},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1458209673310},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1458209673314},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1458209673319},{"_id":"themes/next/bower.json","hash":"93adc30dab22314f3757c3b6d3c13771de994b08","modified":1458209673325},{"_id":"themes/next/_config.yml","hash":"45e0898f47722717d3c24ae5da09ddd632913f6f","modified":1458285972359},{"_id":"themes/next/gulpfile.coffee","hash":"0494704f9e1ac8f63b9bd2791c443ffbf6091df3","modified":1458209673327},{"_id":"themes/next/package.json","hash":"afc2cbda2fe4643808c151135d5528267ee634c4","modified":1458209673472},{"_id":"source/_posts/27种设计模式例子配详细注释源代码完整版.md","hash":"828388e5ffe316befbd727746b9b88e38d0019e1","modified":1458273538340},{"_id":"source/_posts/AWS上搭建shadowsocks-免费翻墙.md","hash":"6b8b5fda8c96582038478fd5681c2ac786f51b77","modified":1458273824389},{"_id":"source/_posts/Adroid-zxing-二维码3-1集成（源码无删减）.md","hash":"5fd78b7f709cb74d7dfca29d8469c84d6f9e7f83","modified":1458285901982},{"_id":"source/_posts/Android-快速开发框架-ThinkAndroid.md","hash":"dfc0d920493a63ce94d32432acfd9ace50408786","modified":1458273771866},{"_id":"source/_posts/Android-Adapter优化-二-之Adapter对不同布局的支持.md","hash":"1413c93c5e236b29b222473f20ff925e15359647","modified":1458273638467},{"_id":"source/_posts/Android-打造高效的图片加载框架.md","hash":"b19ac49f86f9197caddad951f88a932b30ffcc35","modified":1458273685058},{"_id":"source/_posts/Android-的-ORM-数据库框架-DBExecutor.md","hash":"94f027c543dbdfccb6cc53347511226f84cd0b28","modified":1458273727933},{"_id":"source/_posts/Android-自动换行流式布局的多行多列RadioGroup.md","hash":"b463385b95a92d1a744268fcc3231b1c7f39dd5e","modified":1458273804299},{"_id":"source/_posts/Android涉及到的设计模式.md","hash":"587af2f2f38acaa82eedfcc2f747022bbc8352d8","modified":1458273779782},{"_id":"source/_posts/Android高性能开发框架《KJFrameForAndroid》.md","hash":"95e6419a74ebb9c4b31d17b57d7dc6d21c0de1e5","modified":1458273745942},{"_id":"source/_posts/EditSpinner-一款结合EditText和Spinner的开源控件.md","hash":"f72b7f26a8976f8b1c85d37d6b4b524cbf9e725d","modified":1458273895305},{"_id":"source/_posts/ListItemFold-ListView折叠效果.md","hash":"e4b30457637b775c8c0108bb7933398e22958520","modified":1458273886189},{"_id":"source/_posts/RadioButton自定义样式底部导航.md","hash":"5402f5048b941497496cd6763ad9525d63d85dc7","modified":1458273883591},{"_id":"source/_posts/StickyListHeaders-仿QQ好友列表-ExpandableListView父列表滑动到顶端固定不动.md","hash":"670f4f830e4dc61d8caaaf3a33fe3e97fd592aa7","modified":1458273880482},{"_id":"source/_posts/ViewHolder的简洁写法.md","hash":"3197a252586b86aa76a74f6f064ceba44c213e1e","modified":1458273870224},{"_id":"source/_posts/android-Adapter优化之终极版.md","hash":"1c87027aa8ab87c58aa24ca3ecc81146313a3212","modified":1458273661858},{"_id":"source/_posts/android-XML布局参数大全.md","hash":"a50ac9d52b2d9695a20dea873c18ba9ae413040a","modified":1458273672308},{"_id":"source/_posts/android万能适配器的BaseAdapter的使用.md","hash":"92455dcc15f7e5b60631a0db8becf9a060296e86","modified":1458273798672},{"_id":"source/_posts/android开发中几种隐藏标题栏的方法.md","hash":"6a2a4c473e19bc1a77a94fb2f7b21df0414c9e88","modified":1458273762801},{"_id":"source/_posts/android退出所有的activity.md","hash":"7a77c4286f477e44fad661023bf612e1a279bcfa","modified":1458273793285},{"_id":"source/_posts/eclipse-4-3-android开发集成sdk-adt-无须再次配置android环境.md","hash":"5c3f111052d226c1c14905b0020053f9b331f7a1","modified":1458273927931},{"_id":"source/_posts/java的接口解耦.md","hash":"963117a20821bce570eaf44fbf96437f913471be","modified":1458273892240},{"_id":"source/_posts/jni-通过c-c-返回HashMap等复杂参数给java.md","hash":"b8b1db3bf740af0345a018309dcf668053833e78","modified":1458273889584},{"_id":"source/_posts/一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）.md","hash":"3ad6d99849b701cf0d8167884e4634c7bc25e208","modified":1458273845117},{"_id":"source/_posts/两款Android菜单的开源ui框架.md","hash":"2f7f4f02ebdd752e6d2a81cfeca258c396b3e8a9","modified":1458273133052},{"_id":"source/_posts/你最美android源码.md","hash":"990d3b82906e5035c785aad99667b01dfccb3e7e","modified":1458273851214},{"_id":"source/_posts/利用ViewStub实现ListView的收放.md","hash":"443e3e92f92c44054184a075c33e7c61cf689789","modified":1458273861524},{"_id":"source/_posts/微信红包随机算法初探.md","hash":"4141aebb9888be011c0fdbe341609d154335064a","modified":1458273847935},{"_id":"source/_posts/模仿QQ上线下线ImageView头像变灰.md","hash":"0d3af577766a19952f96a356896d7c1bf88f812d","modified":1458273854771},{"_id":"source/_posts/获取百度网盘真实下载链接.md","hash":"3a67d49af1b511dd675ee319ce6b029fd21a82b1","modified":1458273864250},{"_id":"source/_posts/音乐播放器（功能完善，歌词同步，）新手学习必备.md","hash":"49de896fa5e2641f2390a5b07cb2928b64c91220","modified":1458273270118},{"_id":"source/_posts/高仿哔哩哔哩Android客户端.md","hash":"1c5f89b13fb6284362d5627e8e0fae498c89266a","modified":1458273866377},{"_id":"source/archives/index.md","hash":"92710f4c3b6678f6c20e142e582afcd6a7cdd91d","modified":1458269384448},{"_id":"source/upload/index1.md","hash":"d6e4a13c4abab0164584c51ade8da303b07b0864","modified":1458267329448},{"_id":"source/categories/index.md","hash":"39526a273d13f088a419214b5d215df8ef2fb422","modified":1458269220508},{"_id":"source/search/index.md","hash":"4b3e59aba720fd16ae0b3590cbef68f98bea3733","modified":1458285731633},{"_id":"source/tags/index.md","hash":"5f0b23e4a659c35068d5662ec0a142aa4f16b105","modified":1458269182292},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1458209673294},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a09da7ff6504131e928b9c99dcec98a411331812","modified":1458209673297},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1458209673329},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1458209673331},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1458209673333},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1458209673339},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1458209673335},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1458209673342},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1458209673344},{"_id":"themes/next/languages/zh-Hans.yml","hash":"23b45e77c1846c9457b98c745a60a9461678c389","modified":1458209673346},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1458209673348},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1458209673350},{"_id":"themes/next/layout/_layout.swig","hash":"1b157843c811ffd0e865093586f0b6f172b73018","modified":1458209673352},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1458209673462},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1458209673464},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1458209673467},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1458209673465},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1458209673468},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1458209673470},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1458209673475},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1458209673866},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1458209673870},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1458209673875},{"_id":"source/_posts/android根据银行卡卡号判断银行.md","hash":"ad8395b1541b78ede5078fcf6627f1a79d382cd8","modified":1458273756084},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673628},{"_id":"themes/next/layout/_macro/post.swig","hash":"a61cf39c2d79f790fbb4a8e07ac2bbb06b95390d","modified":1458209673360},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1458209673355},{"_id":"themes/next/layout/_macro/reward.swig","hash":"89f3d2e978d4062b470e774eda21c2ed3a086ab9","modified":1458209673362},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6de4ea6db39fe8e04b058bcefc5b23f954726e77","modified":1458209673365},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1458209673367},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1458209673369},{"_id":"themes/next/layout/_partials/footer.swig","hash":"cba20577cea89196d714ddfe6b3ea00f7c906ba7","modified":1458209673371},{"_id":"themes/next/layout/_partials/head.swig","hash":"9d6501b54b959d28a6e0b5fde87d25fc38b97660","modified":1458209673375},{"_id":"themes/next/layout/_partials/header.swig","hash":"b3f4f07f03bedd615039934b44d552b91e2a4a1d","modified":1458209673377},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1458209673379},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1458209673381},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1458209673402},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1458209673403},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"1a51b8caa5130ff55948ae59dddb87ee0550c1e9","modified":1458209673460},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1458209673477},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1458209673479},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1458209673486},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1458209673628},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1458209673631},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1458209673633},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1458209673637},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1458209673635},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1458209673639},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1458209673641},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1458209673643},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458209673643},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458209673643},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1458209673646},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1458209673645},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1458209673647},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673411},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673411},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673579},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673579},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673582},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673617},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458209673623},{"_id":"source/upload/2015/06/201506171434474172281858.png","hash":"1f7bf628c91c364e3dcb9903f68ae98a19c64a3c","modified":1434474172804},{"_id":"source/upload/2015/06/201506171434475688960684.png","hash":"39ea81c087312d9a063d8883b5442cfcdac0a182","modified":1434475688280},{"_id":"source/upload/2015/06/201506171434475730629382.png","hash":"8b56fac2287f4e6958f62610e76d17a6d0db9980","modified":1434475730735},{"_id":"source/upload/2015/06/201506171434475732113440.png","hash":"f381a691dd6377958dd1b0fc8b52e26165908b1a","modified":1434475732110},{"_id":"source/upload/2015/07/201507121436713650204443.png","hash":"24289a8c07771b034feac7d3e3011a2bfdcbdc29","modified":1436713650449},{"_id":"source/upload/2015/07/201507121436713815504633.jpg","hash":"8f25bdb996bb647fe438f14e067996cfcf3830d3","modified":1436713815827},{"_id":"source/upload/2015/07/201507121436713815115295.png","hash":"7fd76e88102d15e87a2d13996f6006ea86ed80b2","modified":1436713815593},{"_id":"source/upload/2015/07/201507121436713816112799.jpg","hash":"d5ec37266b08bddbc27303caa06ebb487108a7b3","modified":1436713816077},{"_id":"source/upload/2015/07/201507121436713816427305.jpg","hash":"7b4fb46b339b309d35498a7a6f80515e1389f229","modified":1436713816577},{"_id":"source/upload/2015/07/201507121436713816856762.jpg","hash":"9955252597ba11337809ed3704a4f9ae86589c66","modified":1436713816827},{"_id":"source/upload/2015/07/201507121436713816968516.jpg","hash":"2a68738050210ebca052af6027422852036b1875","modified":1436713816343},{"_id":"source/upload/2015/07/201507121436713817137826.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1436713817139},{"_id":"source/upload/2015/07/201507131436788453805554.jpg","hash":"8f25bdb996bb647fe438f14e067996cfcf3830d3","modified":1436788453576},{"_id":"source/upload/2015/07/201507131436788417101357.png","hash":"7fd76e88102d15e87a2d13996f6006ea86ed80b2","modified":1436788417310},{"_id":"source/upload/2015/07/201507131436788496442797.jpg","hash":"d5ec37266b08bddbc27303caa06ebb487108a7b3","modified":1436788495968},{"_id":"source/upload/2015/07/201507131436788506598227.jpg","hash":"2a68738050210ebca052af6027422852036b1875","modified":1436788506780},{"_id":"source/upload/2015/07/201507131436788519124077.jpg","hash":"7b4fb46b339b309d35498a7a6f80515e1389f229","modified":1436788519437},{"_id":"source/upload/2015/07/201507131436788541745525.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1436788541281},{"_id":"source/upload/2015/07/201507131436788571117265.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1436788571812},{"_id":"source/upload/2015/07/201507131436788593429629.jpg","hash":"9955252597ba11337809ed3704a4f9ae86589c66","modified":1436788593797},{"_id":"source/upload/2016/02/201602291456728783308021.png","hash":"f0ad7ed1b0288734de464ea8ae93c1f42146cb81","modified":1456728783706},{"_id":"source/upload/2016/02/201602291456728851354710.png","hash":"a90afd098215241dfd1143136e0808df958252a5","modified":1456728851195},{"_id":"source/upload/2016/02/201602291456729113103878.png","hash":"5300b9a2b90bef56d2971cbcb114128d19b4b7e2","modified":1456729113080},{"_id":"source/upload/2016/02/201602291456738265125261.png","hash":"47118bfa67f8ee13cfdbeb96f8d3cf7e02bb0d80","modified":1456738264971},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1458209673383},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1458209673386},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1458209673388},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1458209673389},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1458209673395},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1458209673397},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1458209673400},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"09821c5735c97c0e1c3c8a6be2b82f4d70614d8a","modified":1458209673411},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1458209673413},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1458209673415},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1458209673430},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1458209673443},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1458209673449},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"8eecd19c756df615afb3f5ec6a527cd7bd06d20c","modified":1458209673454},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1458209673457},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1458209673579},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1458209673580},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1458209673582},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1458209673616},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"9f87ded9cde425048e8ae063cbb481e78a0e469c","modified":1458209673619},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f171c71d42f8798608235206dd41b37193faed88","modified":1458209673623},{"_id":"themes/next/source/css/_variables/default.styl","hash":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1458209673625},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1458209673652},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1458209673663},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1458209673654},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1458209673658},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1458209673670},{"_id":"themes/next/source/js/src/utils.js","hash":"1bea7614af19c2a2db7d10d3fb88d1fa81519e35","modified":1458209673675},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1458209673677},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1458209673679},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1458209673714},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1458209673716},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1458209673719},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1458209673720},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1458209673735},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1458209673737},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1458209673739},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1458209673740},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1458209673742},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1458209673783},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1458209673804},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1458209673806},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1458209673808},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1458209673810},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1458209673815},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1458209673819},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1458209673831},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1458209673833},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1458209673853},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1458209673858},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1458209673864},{"_id":"source/upload/2015/06/201506121434101916134723.png","hash":"46c23b85f9b58a30fe454d0b97cfc17ecc795e34","modified":1434101915985},{"_id":"source/upload/2015/06/201506171434475089494521.png","hash":"1e39290e05bfb4d6e78db30499b48a82501eec22","modified":1434475089921},{"_id":"source/upload/2015/06/201506171434475727892479.png","hash":"f1198d83f18c482c97f904a701c0c8a8a8b708bb","modified":1434475727234},{"_id":"source/upload/2015/06/201506171434475776133777.png","hash":"50b544b768bf8c32ea67cff9123d5506b50d2ba1","modified":1434475776329},{"_id":"source/upload/2016/02/201602291456728901300663.png","hash":"39a81fbb1c67a71ad80bcf0279057168a7f5e720","modified":1456728901082},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1458209673802},{"_id":"source/upload/2015/06/201506121434101916133811.png","hash":"2f952af8852d53aa2389b26c64896599f0169088","modified":1434101916001},{"_id":"source/upload/2015/06/201506171434475097188909.png","hash":"c4b4e52e8731430991316b418b2ef71e000ddf85","modified":1434475097406},{"_id":"source/upload/2015/06/201506171434475329103685.png","hash":"b03e0c4f614ddfd6537b6d1a79767e30d6644717","modified":1434475329224},{"_id":"source/upload/2015/06/201506171434475391341801.png","hash":"d5419e0093e906dd935ddee93a832e3518c6bf6e","modified":1434475391882},{"_id":"source/upload/2015/06/201506171434475726111383.png","hash":"e9a8ce074ad5a552890c8b68b7df43e97659997e","modified":1434475726641},{"_id":"source/upload/2015/06/201506171434477083764846.png","hash":"cf84ddb1fbddf18058b93823885ee8f73df9f220","modified":1434477083832},{"_id":"source/upload/2015/06/201506171434477084135584.png","hash":"4388af48a255f4e4447e712328987ad91fb79b4c","modified":1434477083925},{"_id":"source/upload/2015/07/201507141436844080181981.png","hash":"ae94825615514a01fd5500b1ad2d49b2c40b0d54","modified":1436844080050},{"_id":"source/upload/2015/07/201507141436844080465044.png","hash":"3bee553131c34eec137b83b703b6aee13e637af9","modified":1436844079862},{"_id":"source/upload/2015/07/201507141436844080960125.png","hash":"5f7a471eed4c7a134db6444dc031cbc691ff6613","modified":1436844079878},{"_id":"source/upload/2015/07/201507231437642625119761.png","hash":"6248980db8f6a600addde9827424b6123c4a4647","modified":1437642625198},{"_id":"source/upload/2016/02/201602221456106031866272.png","hash":"aebbde22a3dd3c5606d0d5f67f00bdba859214e2","modified":1456106031516},{"_id":"source/upload/2016/02/201602221456106032909863.png","hash":"4fc76ff25b6b946d045499c43b33aaf084b531c5","modified":1456106032391},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1458209673418},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1458209673419},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1458209673422},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1458209673425},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1458209673429},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1458209673434},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"da8aa3beab56d8c306dd97cf41127a3859e2d00c","modified":1458209673437},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1458209673488},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1458209673489},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1458209673491},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1458209673492},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1458209673515},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1458209673549},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1458209673567},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1458209673569},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"05be2af57229c5125297c945d2e60ca97070bae1","modified":1458209673571},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1458209673573},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"d110befc142dbb881c4fdcb94df65ed2f603f1c1","modified":1458209673577},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1458209673576},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1458209673599},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1458209673601},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1458209673602},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1458209673603},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"f70fa81275eb4e0ea5e5a740b7a35539c6ffa9ba","modified":1458209673604},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"59c0f66602ebc1c05c16f117bc8710d9f3744538","modified":1458209673606},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1458209673607},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"96f95471da25d0e80c6b82f1e834b03c9aba58a9","modified":1458209673608},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1458209673610},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1458209673611},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"802e599b1ac749eac162dae396f66b0acaa5edcc","modified":1458209673613},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1458209673614},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1458209673584},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1458209673586},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1458209673588},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1458209673592},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1458209673590},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1458209673594},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5187512cc4b2ce095230928c7046e0b26c3897bd","modified":1458209673597},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8b37699252a24741716b40fb70972a77453cbfe1","modified":1458209673666},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1458209673679},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1458209673680},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1458209673680},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1458209673681},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1458209673681},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1458209673681},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1458209673698},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1458209673706},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1458209673712},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1458209673725},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1458209673734},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1458209673744},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1458209673746},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1458209673748},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1458209673781},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1458209673823},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1458209673830},{"_id":"source/upload/2015/06/201506171434475712440731.png","hash":"b33c1735f8a26fb32751eae9c2ebadd4f2b7f686","modified":1434475712234},{"_id":"source/upload/2015/07/201507141436844080112252.png","hash":"8bde70a086c6920eca167e6c241867af50d61116","modified":1436844080347},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1458209673752},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1458209673764},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1458209673779},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1458209673843},{"_id":"source/upload/2015/06/201506171434475305133437.png","hash":"bf2bb675c22dd28973c1d89b150f503a94b7f1cb","modified":1434475304942},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1458209673494},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1458209673495},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1458209673499},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1458209673497},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"f168f79ba8cc80c775907da4cc00d01771ac1e1e","modified":1458209673501},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1458209673502},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"8539c1122966a6aea64267d48af05603caa5fa29","modified":1458209673508},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1458209673509},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1458209673511},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1458209673513},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"12724e07713c9e8d577d921c131f04de7a5e65b1","modified":1458209673504},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"9f0606d4d94ffa6bd77f91628507bba19133cf36","modified":1458209673506},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1458209673518},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"68ed6b0ad40745cb07ecd38f13960bb217aef848","modified":1458209673517},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1458209673521},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1458209673522},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"5dba4ca272d7c767b57233cd99fba95dbf82153f","modified":1458209673524},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1458209673525},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1458209673527},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1458209673528},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1458209673530},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"0e91a5a80fb62ed38c97cb649b166f945c6ce5f1","modified":1458209673533},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1458209673532},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1458209673535},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"70407054dbb5180c69e50ea2655d32835494394e","modified":1458209673537},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1458209673538},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1458209673540},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1458209673542},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"97832be1f30b631dbc2202524918b6eb55e74c4b","modified":1458209673543},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1458209673545},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"546ad04994f74643334fd36cdb548c17f71b11be","modified":1458209673546},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"99c4b7d1459569cda394c733845d368008a180bf","modified":1458209673548},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1458209673558},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1458209673562},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1458209673560},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"0f368e6e95c0ba46580b491819e46ae31910c94b","modified":1458209673565},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1458209673564},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1458209673554},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1458209673552},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1458209673555},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1458209673557},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1458209673598},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1458209673682},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1458209673684},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1458209673687},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1458209673691},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1458209673693},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1458209673697},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1458209673776},{"_id":"source/upload/2016/02/201602221456106033799573.png","hash":"a37ade0bf691b46ace03b107c96dc2369776f89d","modified":1456106033172},{"_id":"source/upload/2016/02/201602221456106035136892.png","hash":"615d6d5ba40caaaa320e38e04170f94e22e37a48","modified":1456106035610},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1458209673773},{"_id":"source/upload/2015/09/201509021441179219153924.gif","hash":"dcd8b44fac40b9eae896c09768b84554a76e1e3a","modified":1441179219040},{"_id":"source/upload/2015/07/201507311438274262700084.gif","hash":"97388b9b16efc86702897060b6013a0f07039eee","modified":1438274262510},{"_id":"source/upload/2015/07/201507281438048301122567.gif","hash":"2ce5156b2084f52773b433431afc3be8dfe3c3c0","modified":1438048301342},{"_id":"source/upload/2016/02/201602281456654040118978.gif","hash":"cd32cab341b2c510a279c0fa46b405ec29a75ad2","modified":1456654040241},{"_id":"source/upload/2015/09/201509021441179396414955.gif","hash":"66d30940a55e6c1167eefa5605e6e52670fc05fd","modified":1441179396746},{"_id":"source/upload/2015/07/201507231437642603106757.gif","hash":"c519639bc7c4f223aac8a1f69049867072f2a318","modified":1437642603463},{"_id":"source/upload/2015/12/201512161450234594832794.gif","hash":"c519639bc7c4f223aac8a1f69049867072f2a318","modified":1450234594861},{"_id":"source/upload/2015/06/201506171434476041565265.gif","hash":"8c7915b80d1c7b6c0e04d3e856720ad4269fec9d","modified":1434476041508},{"_id":"public/upload/index1.html","hash":"a79933c88c86b0b0b69608f04bb2b8ace1a515d7","modified":1458285979271},{"_id":"public/categories/index.html","hash":"30715ce3dd41b315a8315a5c0beb2d65c15d1f13","modified":1458285979271},{"_id":"public/tags/index.html","hash":"7f2e5be8e6d2475bf4239c80bde9d81681b167d2","modified":1458285979271},{"_id":"public/archives/2015/07/index.html","hash":"247d62c155455a6bd05dcfa63d7bf3fa9128f441","modified":1458285979277},{"_id":"public/archives/2015/08/index.html","hash":"246a6b58296cfeb0dbcb87c60cdbfb83f2e87ca0","modified":1458285979271},{"_id":"public/archives/2015/09/index.html","hash":"097e263f874dd47fa3fe97cb8e039a3a8c68fabc","modified":1458285979272},{"_id":"public/archives/2015/10/index.html","hash":"c22c2dd6b715f678c14ac1ad268b944e1751796a","modified":1458285979272},{"_id":"public/archives/2016/index.html","hash":"127f394934070d533dc25f0b1a5112ac5db8d4f8","modified":1458285979272},{"_id":"public/archives/2016/02/index.html","hash":"daaa24b92254505df39eec6499ca494735529096","modified":1458285979274},{"_id":"public/tags/设计模式/index.html","hash":"e210a170102b1520f302cdf257e85bbfe1d679e9","modified":1458285979272},{"_id":"public/tags/Adapter/index.html","hash":"1a9fab44c023aa87b2e400d3c841386cfda219fc","modified":1458285979274},{"_id":"public/tags/AWS/index.html","hash":"d28e89c2e78a34e4969a4a8f829a791eaa555e10","modified":1458285979274},{"_id":"public/tags/ShadowScocks/index.html","hash":"6406cb8871d12c0a55f413498f52f8980a2b7e8b","modified":1458285979274},{"_id":"public/tags/ORM/index.html","hash":"be2c615481e40670be05825f45af764493916494","modified":1458285979274},{"_id":"public/tags/sqlite/index.html","hash":"ffa14a1bcf895ff01d5d4b1422f586375b997258","modified":1458285979274},{"_id":"public/tags/EditSpinner/index.html","hash":"a72bb04d8b637d018d66078093d3065e46bd7bb5","modified":1458285979274},{"_id":"public/tags/ListItemFold/index.html","hash":"b5cd1a4b583fc6b324347f6bb085d4caaa5fde33","modified":1458285979274},{"_id":"public/tags/底部导航/index.html","hash":"b75af3e8f3da5c1b3ab84fc534eac9d3ce72b40a","modified":1458285979274},{"_id":"public/tags/ExpandableListView/index.html","hash":"e2e7c70a7810d9907f4c25b81dd6714a0f8327e9","modified":1458285979274},{"_id":"public/tags/顶端不动/index.html","hash":"6f400cb0a9732957ff788fbf4914b35951ef7df6","modified":1458285979274},{"_id":"public/tags/ViewHolder/index.html","hash":"5dc3f5f4e119d6b30b4423c69f00fcfe52cdc856","modified":1458285979274},{"_id":"public/tags/ListView/index.html","hash":"96e8dbdefa8e0d9594f61c773916a4b78d512300","modified":1458285979274},{"_id":"public/tags/jni/index.html","hash":"a2a28b8e350fe28c9b0b239f3adb10a53dae9616","modified":1458285979274},{"_id":"public/tags/解耦/index.html","hash":"1f81f45e319a13b68ca79222a9e6e441d84a285a","modified":1458285979274},{"_id":"public/tags/WIFI通信/index.html","hash":"170d20d01361d29c3369c3db13da438c12bcc5cf","modified":1458285979274},{"_id":"public/tags/你最美/index.html","hash":"9306cc699d4f9aab3f36c0e9a9bb348910302b04","modified":1458285979274},{"_id":"public/tags/ViewStub/index.html","hash":"1ab705de3db3fb95f867c7f0c54dd800dfd0956b","modified":1458285979274},{"_id":"public/tags/微信红包/index.html","hash":"b8784dbb43772402ad8102e33953af75f6d2c015","modified":1458285979274},{"_id":"public/tags/算法/index.html","hash":"354819744575583d864accb8c92971d8f5f5b164","modified":1458285979274},{"_id":"public/tags/QQ上线下线/index.html","hash":"10a06fb7337643f3980508a491d41b9a2320ca2c","modified":1458285979274},{"_id":"public/tags/百度云/index.html","hash":"0377a4ad7472c8445a829b9e5ca222eec2b78ed3","modified":1458285979274},{"_id":"public/tags/真实链接/index.html","hash":"7a153cbca5a68f4935a45128c0276fed7abd76ba","modified":1458285979274},{"_id":"public/tags/哔哩哔哩/index.html","hash":"4d60843c713e65b4446010ae3b4d783cfe5a3a91","modified":1458285979275},{"_id":"public/categories/开源项目/index.html","hash":"8e44618aa2a42030063c961c8ea1ae8ccd7bb2cd","modified":1458285979271},{"_id":"public/categories/开源控件/index.html","hash":"8e14986fcbb87d792d35d715e54b0b2b5d36576d","modified":1458285979271},{"_id":"public/categories/项目/index.html","hash":"f8b58057784d4bf8874b717aceb3996338f21cd1","modified":1458285979271},{"_id":"public/archives/index.html","hash":"3bec62b1c27a9280dfc858c6b27f5cd4514ded35","modified":1458285979275},{"_id":"public/2016/02/29/AWS上搭建shadowsocks-免费翻墙/index.html","hash":"ee8ffdb72e2f2e400807514baa7e0dad86e88bfe","modified":1458285979275},{"_id":"public/2016/02/28/EditSpinner-一款结合EditText和Spinner的开源控件/index.html","hash":"ab64025e575399bdb3c0a774a707f5d356e20964","modified":1458285979275},{"_id":"public/2016/02/22/微信红包随机算法初探/index.html","hash":"33cce2df1b018721b07b844a049bf1444f712c94","modified":1458285979275},{"_id":"public/2015/10/22/java的接口解耦/index.html","hash":"9fce27d055960632191cdcaa066790301e558728","modified":1458285979275},{"_id":"public/2015/09/02/两款Android菜单的开源ui框架/index.html","hash":"8992cca366ffc1a594e788d0b871615fcff7b096","modified":1458285979275},{"_id":"public/2015/08/25/Android-Adapter优化-二-之Adapter对不同布局的支持/index.html","hash":"5127f7571d902acf72b9092d94de1b4a942f68bb","modified":1458285979275},{"_id":"public/2015/08/25/android-Adapter优化之终极版/index.html","hash":"96949166a206694f1aaaca7871618f8b7d09069d","modified":1458285979275},{"_id":"public/2015/07/31/利用ViewStub实现ListView的收放/index.html","hash":"ea125a873450073fbd5f7e46a6caea53f200a32f","modified":1458285979275},{"_id":"public/2015/07/28/ListItemFold-ListView折叠效果/index.html","hash":"985bd7733ac62db3d172edd4f614d5591523367f","modified":1458285979275},{"_id":"public/2015/07/23/Android-打造高效的图片加载框架/index.html","hash":"dfc816a8c5dc6e843307196ed1122e22a7a9cf35","modified":1458285979275},{"_id":"public/2015/07/15/获取百度网盘真实下载链接/index.html","hash":"c8c55eaecfeb0bb1db3f48fa9eb88433bcd06dad","modified":1458285979275},{"_id":"public/2015/07/14/一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）/index.html","hash":"c43b4c998a1c6ddc3172cc9a5fd65f956ef8c0ea","modified":1458285979275},{"_id":"public/2015/07/12/Android-自动换行流式布局的多行多列RadioGroup/index.html","hash":"308f9764a06721678fcb71c92f337c8716dce6db","modified":1458285979275},{"_id":"public/2015/07/10/android-XML布局参数大全/index.html","hash":"ed419435eaf27a515e7a7c6922d3516c48f8c739","modified":1458285979275},{"_id":"public/2015/07/12/27种设计模式例子配详细注释源代码完整版/index.html","hash":"8023062b18df9b4df07230d6c1a4aef8a232a93e","modified":1458285979275},{"_id":"public/2015/07/02/jni-通过c-c-返回HashMap等复杂参数给java/index.html","hash":"b4512e337aaf526300f6910b9c16d1a7e9882776","modified":1458285979275},{"_id":"public/2015/06/29/Android涉及到的设计模式/index.html","hash":"2f222f2b27c2489fe1ba1049b136c344c25d6474","modified":1458285979276},{"_id":"public/2015/06/24/ViewHolder的简洁写法/index.html","hash":"dfc6102a5144f57bcf90c5d6a84b97792dedbebd","modified":1458285979276},{"_id":"public/2015/06/22/android退出所有的activity/index.html","hash":"14830ab0b7add71fed695f6116d520668067e970","modified":1458285979276},{"_id":"public/2015/06/22/模仿QQ上线下线ImageView头像变灰/index.html","hash":"df614811b7078c953019a5a4293bd2bcff95814e","modified":1458285979276},{"_id":"public/2015/06/21/android开发中几种隐藏标题栏的方法/index.html","hash":"d7bff3a80eb71f03a4cba93d9b423d1652e32498","modified":1458285979276},{"_id":"public/2015/06/17/Android-的-ORM-数据库框架-DBExecutor/index.html","hash":"9606f914c7971511ddca44d67856b90a21278a19","modified":1458285979276},{"_id":"public/2015/06/17/Android-快速开发框架-ThinkAndroid/index.html","hash":"b47b59da7a86575798774cb5d731f4d49745bdbe","modified":1458285979276},{"_id":"public/2015/06/17/Android高性能开发框架《KJFrameForAndroid》/index.html","hash":"c319c6846b7b7e4d5aa5361316547ac8b8c6079b","modified":1458285979276},{"_id":"public/2015/06/17/StickyListHeaders-仿QQ好友列表-ExpandableListView父列表滑动到顶端固定不动/index.html","hash":"3fdfbc21981f7140d96398fda83ba46e53ff954f","modified":1458285979276},{"_id":"public/2015/06/17/音乐播放器（功能完善，歌词同步，）新手学习必备/index.html","hash":"09119a2afd1ced52b3276e2604c68f57b3729729","modified":1458285979276},{"_id":"public/2015/06/17/android根据银行卡卡号判断银行/index.html","hash":"6e73227d59b3ad3195fb0e48f9b3480a1f5b2a4c","modified":1458285979276},{"_id":"public/2015/06/17/高仿哔哩哔哩Android客户端/index.html","hash":"91330f3e678b24e362a39bfcf09a42904f59fa65","modified":1458285979277},{"_id":"public/2015/06/17/你最美android源码/index.html","hash":"007fb65c0eb35d767c798c66dee7221af42b79ff","modified":1458285979277},{"_id":"public/2015/06/17/RadioButton自定义样式底部导航/index.html","hash":"47c280791285b4cac31aef60e6ae5dbbdcfdde38","modified":1458285979277},{"_id":"public/2015/06/12/android万能适配器的BaseAdapter的使用/index.html","hash":"be2e731571f9d35a9bf48e0291988262065e97d5","modified":1458285979277},{"_id":"public/2015/06/12/eclipse-4-3-android开发集成sdk-adt-无须再次配置android环境/index.html","hash":"7eafff8013dcd20c17f3fc6d9268b4abf5f7e07d","modified":1458285979277},{"_id":"public/archives/2015/index.html","hash":"88ee078472d12e40a0bf25935187f57e9c4618c6","modified":1458285979277},{"_id":"public/archives/2015/06/index.html","hash":"254e6355a476cb05274c10c70abff2988d2ccfb1","modified":1458285979277},{"_id":"public/index.html","hash":"8dc595244b2271e1469d76372532403cc1804d55","modified":1458285979277},{"_id":"public/categories/文章/index.html","hash":"4193f49a1d08fa30364b242983273104a48961dd","modified":1458285979277},{"_id":"public/search/index.html","hash":"11b294135f636cc8d17d3d74521a9dc0a6102239","modified":1458285907533},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1458285675225},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1458285675225},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1458285675225},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1458285675225},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1458285675225},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1458285675225},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1458285675225},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458285675225},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458285675225},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1458285675225},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1458285675225},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1458285675226},{"_id":"public/upload/2015/06/201506171434474172281858.png","hash":"1f7bf628c91c364e3dcb9903f68ae98a19c64a3c","modified":1458285675226},{"_id":"public/upload/2015/06/201506171434475688960684.png","hash":"39ea81c087312d9a063d8883b5442cfcdac0a182","modified":1458285675226},{"_id":"public/upload/2015/06/201506171434475730629382.png","hash":"8b56fac2287f4e6958f62610e76d17a6d0db9980","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713815504633.jpg","hash":"8f25bdb996bb647fe438f14e067996cfcf3830d3","modified":1458285675226},{"_id":"public/upload/2015/06/201506171434475732113440.png","hash":"f381a691dd6377958dd1b0fc8b52e26165908b1a","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713650204443.png","hash":"24289a8c07771b034feac7d3e3011a2bfdcbdc29","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713815115295.png","hash":"7fd76e88102d15e87a2d13996f6006ea86ed80b2","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713816427305.jpg","hash":"7b4fb46b339b309d35498a7a6f80515e1389f229","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713816112799.jpg","hash":"d5ec37266b08bddbc27303caa06ebb487108a7b3","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713816856762.jpg","hash":"9955252597ba11337809ed3704a4f9ae86589c66","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713816968516.jpg","hash":"2a68738050210ebca052af6027422852036b1875","modified":1458285675226},{"_id":"public/upload/2015/07/201507121436713817137826.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788453805554.jpg","hash":"8f25bdb996bb647fe438f14e067996cfcf3830d3","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788417101357.png","hash":"7fd76e88102d15e87a2d13996f6006ea86ed80b2","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788496442797.jpg","hash":"d5ec37266b08bddbc27303caa06ebb487108a7b3","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788506598227.jpg","hash":"2a68738050210ebca052af6027422852036b1875","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788541745525.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788519124077.jpg","hash":"7b4fb46b339b309d35498a7a6f80515e1389f229","modified":1458285675226},{"_id":"public/upload/2016/02/201602291456728783308021.png","hash":"f0ad7ed1b0288734de464ea8ae93c1f42146cb81","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788593429629.jpg","hash":"9955252597ba11337809ed3704a4f9ae86589c66","modified":1458285675226},{"_id":"public/upload/2015/07/201507131436788571117265.jpg","hash":"a9d72ab1b64cbbe931d5fd6378afe375505ad749","modified":1458285675226},{"_id":"public/upload/2016/02/201602291456728851354710.png","hash":"a90afd098215241dfd1143136e0808df958252a5","modified":1458285675226},{"_id":"public/upload/2016/02/201602291456738265125261.png","hash":"47118bfa67f8ee13cfdbeb96f8d3cf7e02bb0d80","modified":1458285675227},{"_id":"public/upload/2016/02/201602291456729113103878.png","hash":"5300b9a2b90bef56d2971cbcb114128d19b4b7e2","modified":1458285675227},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1458285675227},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1458285675227},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1458285675227},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1458285675227},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1458285675227},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1458285675227},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1458285675227},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1458285675227},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1458285675227},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1458285675227},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1458285675227},{"_id":"public/upload/2015/06/201506171434475727892479.png","hash":"f1198d83f18c482c97f904a701c0c8a8a8b708bb","modified":1458285675829},{"_id":"public/upload/2015/06/201506171434475776133777.png","hash":"50b544b768bf8c32ea67cff9123d5506b50d2ba1","modified":1458285675832},{"_id":"public/upload/2015/06/201506121434101916134723.png","hash":"46c23b85f9b58a30fe454d0b97cfc17ecc795e34","modified":1458285675834},{"_id":"public/upload/2015/06/201506171434475089494521.png","hash":"1e39290e05bfb4d6e78db30499b48a82501eec22","modified":1458285675834},{"_id":"public/upload/2016/02/201602291456728901300663.png","hash":"39a81fbb1c67a71ad80bcf0279057168a7f5e720","modified":1458285675834},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1458285675834},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1458285675834},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1458285675834},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1458285675868},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1458285675868},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1458285675868},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1458285675868},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1458285675869},{"_id":"public/js/src/utils.js","hash":"b9ddf9afd352a7be1675613911543820ddcf9cd2","modified":1458285675869},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1458285675869},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1458285675869},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1458285675869},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1458285675869},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1458285675869},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1458285675869},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1458285675869},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1458285675869},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1458285675869},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1458285675869},{"_id":"public/js/src/schemes/pisces.js","hash":"94f935331995bfeadf1084fb8f0665ab39fd1c8d","modified":1458285675869},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1458285675869},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1458285675869},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1458285675869},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1458285675870},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1458285675870},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1458285675870},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1458285675870},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1458285675870},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1458285675870},{"_id":"public/css/main.css","hash":"c3924964ce1035a7a8a2633053b4f8e174469b55","modified":1458285675870},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1458285675870},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1458285675870},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1458285675870},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1458285675870},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1458285675870},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1458285675870},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1458285675870},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1458285675870},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1458285675870},{"_id":"public/upload/2015/06/201506121434101916133811.png","hash":"2f952af8852d53aa2389b26c64896599f0169088","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434475097188909.png","hash":"c4b4e52e8731430991316b418b2ef71e000ddf85","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434475329103685.png","hash":"b03e0c4f614ddfd6537b6d1a79767e30d6644717","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434475391341801.png","hash":"d5419e0093e906dd935ddee93a832e3518c6bf6e","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434475726111383.png","hash":"e9a8ce074ad5a552890c8b68b7df43e97659997e","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434477083764846.png","hash":"cf84ddb1fbddf18058b93823885ee8f73df9f220","modified":1458285675870},{"_id":"public/upload/2015/06/201506171434477084135584.png","hash":"4388af48a255f4e4447e712328987ad91fb79b4c","modified":1458285675871},{"_id":"public/upload/2015/07/201507141436844080181981.png","hash":"ae94825615514a01fd5500b1ad2d49b2c40b0d54","modified":1458285675871},{"_id":"public/upload/2015/07/201507141436844080465044.png","hash":"3bee553131c34eec137b83b703b6aee13e637af9","modified":1458285675871},{"_id":"public/upload/2015/07/201507141436844080960125.png","hash":"5f7a471eed4c7a134db6444dc031cbc691ff6613","modified":1458285675871},{"_id":"public/upload/2015/07/201507231437642625119761.png","hash":"6248980db8f6a600addde9827424b6123c4a4647","modified":1458285675871},{"_id":"public/upload/2016/02/201602221456106031866272.png","hash":"aebbde22a3dd3c5606d0d5f67f00bdba859214e2","modified":1458285675871},{"_id":"public/upload/2016/02/201602221456106032909863.png","hash":"4fc76ff25b6b946d045499c43b33aaf084b531c5","modified":1458285675871},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1458285675871},{"_id":"public/upload/2015/07/201507141436844080112252.png","hash":"8bde70a086c6920eca167e6c241867af50d61116","modified":1458285675874},{"_id":"public/upload/2015/06/201506171434475712440731.png","hash":"b33c1735f8a26fb32751eae9c2ebadd4f2b7f686","modified":1458285675874},{"_id":"public/upload/2015/06/201506171434475305133437.png","hash":"bf2bb675c22dd28973c1d89b150f503a94b7f1cb","modified":1458285675875},{"_id":"public/upload/2016/02/201602221456106033799573.png","hash":"a37ade0bf691b46ace03b107c96dc2369776f89d","modified":1458285675905},{"_id":"public/upload/2016/02/201602221456106035136892.png","hash":"615d6d5ba40caaaa320e38e04170f94e22e37a48","modified":1458285675905},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1458285675905},{"_id":"public/upload/2015/09/201509021441179219153924.gif","hash":"dcd8b44fac40b9eae896c09768b84554a76e1e3a","modified":1458285675954},{"_id":"public/upload/2015/07/201507311438274262700084.gif","hash":"97388b9b16efc86702897060b6013a0f07039eee","modified":1458285675961},{"_id":"public/upload/2015/07/201507281438048301122567.gif","hash":"2ce5156b2084f52773b433431afc3be8dfe3c3c0","modified":1458285675963},{"_id":"public/upload/2016/02/201602281456654040118978.gif","hash":"cd32cab341b2c510a279c0fa46b405ec29a75ad2","modified":1458285675965},{"_id":"public/upload/2015/09/201509021441179396414955.gif","hash":"66d30940a55e6c1167eefa5605e6e52670fc05fd","modified":1458285675971},{"_id":"public/upload/2015/07/201507231437642603106757.gif","hash":"c519639bc7c4f223aac8a1f69049867072f2a318","modified":1458285675974},{"_id":"public/upload/2015/12/201512161450234594832794.gif","hash":"c519639bc7c4f223aac8a1f69049867072f2a318","modified":1458285675975},{"_id":"public/upload/2015/06/201506171434476041565265.gif","hash":"8c7915b80d1c7b6c0e04d3e856720ad4269fec9d","modified":1458285675989},{"_id":"public/2015/07/12/Adroid-zxing-二维码3-1集成（源码无删减）/index.html","hash":"fde7e4ef80433663ce33c3125db4a5f9329f894f","modified":1458285979275},{"_id":"public/tags/二维码/index.html","hash":"1b49efc9500c33ac9497b30bdfc15b0b1ba18faf","modified":1458285979275},{"_id":"public/tags/zxing/index.html","hash":"a75381ec9b26cff6572dd14f1d06990f74504880","modified":1458285979275}],"Category":[{"name":"文章","_id":"cilxdmylg0005c4ub1tlrqnvf"},{"name":"开源项目","_id":"cilxdmylv000ic4ub76egp2jy"},{"name":"开源控件","_id":"cilxdmym2000xc4ubgx7xdy5z"},{"name":"项目","_id":"cilxdmyms0026c4ubru3jdawj"}],"Data":[],"Page":[{"title":"archives","date":"2016-03-18T02:49:13.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2016-03-18 10:49:13\ntype: \"archives\"\n---\n","updated":"2016-03-18T02:49:44.448Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cilxdmyl30001c4ub98i82gzr","content":"","excerpt":"","more":""},{"title":"upload","date":"2016-03-18T02:15:29.000Z","_content":"","source":"upload/index1.md","raw":"---\ntitle: upload\ndate: 2016-03-18 10:15:29\n---\n","updated":"2016-03-18T02:15:29.448Z","path":"upload/index1.html","comments":1,"layout":"page","_id":"cilxdmyld0003c4uboey5zlph","content":"","excerpt":"","more":""},{"title":"categories","date":"2016-03-18T02:40:39.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-03-18 10:40:39\ntype: \"categories\"\n---\n","updated":"2016-03-18T02:47:00.508Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cilxdmyli0007c4ubzc6vzdnn","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-03-18T02:45:09.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-03-18 10:45:09\ntype: \"tags\"\n---","updated":"2016-03-18T02:46:22.292Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cilxdmylq000dc4ubn194mxun","content":"","excerpt":"","more":""}],"Post":[{"title":"27种设计模式例子配详细注释源代码完整版","date":"2015-07-12T15:13:36.000Z","_content":"\n经过几天时间的努力，整理，设计模式的demo和资料基本整理完成，首先声明，这些资料部分从网上找的，还有部分是用了&lt;&lt;java与模\n式&gt;&gt;书中的例子，里面的模式也是照着这书上的划分的，很不错的一本书，想学习设计模式的同学可以看看。先说说我的体会，每次看设计模式，总\n会有新的体会，这是第三次我复习复习这方面的知识了，感觉还不错，但是时间久了估计还是会忘，所以最好的办法还是找个例子，忘得时候看看怎么用就行了，我\n的demo把27种设计模式进行了合并，不同的模式例子，分放在不同的文件中。资料总共有一下27种模式：\n<!-- more -->\n<span style=\"color:#0000ff\">设计模式主要分三个类型:创建型、结构型和行为型。 \n其中创建型有： \n    一、Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 \n    二、Abstract Factory，抽象工厂：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们的具体类。 \n    三、Factory Method，工厂方法：定义一个用于创建对象的接口，让子类决定实例化哪一个类，Factory Method使一个类的实例化延迟到了子类。 \n    四、Builder，建造模式：将一个复杂对象的构建与他的表示相分离，使得同样的构建过程可以创建不同的表示。 \n    五、Prototype，原型模式：用原型实例指定创建对象的种类，并且通过拷贝这些原型来创建新的对象。 \n行为型有： \n    六、Iterator，迭代器模式：提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。 \n    七、Observer，观察者模式：定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知自动更新。 \n    八、Template Method，模板方法：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，TemplateMethod使得子类可以不改变一个算法的结构即可以重定义该算法得某些特定步骤。 \n    九、Command，命令模式：将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。 \n    十、State，状态模式：允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。 \n    十一、Strategy，策略模式：定义一系列的算法，把他们一个个封装起来，并使他们可以互相替换，本模式使得算法可以独立于使用它们的客户。 \n    十二、Chain of Responsibility，职责链模式：使多个对象都有机会处理请求，从而避免请求的送发者和接收者之间的耦合关系 \n    十三、Mediator，中介者模式：用一个中介对象封装一些列的对象交互。 \n    十四、Visitor，访问者模式：表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这个元素的新操作。 \n    十五、Interpreter，解释器模式：给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。 \n    十六、Memento，备忘录模式：在不破坏对象的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。 \n结构型有： \n    十七、Composite，组合模式：将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。 \n    十八、Facade，外观模式：为子系统中的一组接口提供一致的界面，fa?ade提供了一高层接口，这个接口使得子系统更容易使用。 \n    十九、Proxy，代理模式：为其他对象提供一种代理以控制对这个对象的访问 \n    二十、Adapter,适配器模式：将一类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作那些类可以一起工作。 \n    二十一、Decrator，装饰模式：动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。 \n    二十二、Bridge，桥模式：将抽象部分与它的实现部分相分离，使他们可以独立的变化。 \n    二十三、Flyweight，享元模式</span><span style=\"color:#ff0000\">除了以上23个模式之外，根据&lt;&lt;java与模式&gt;&gt;中的分类，还有4种模式，DefaultAdapter 缺省适配器模式，SimpleFactory 简单工厂模式，Multiton 多例模式, Immutable 不变模式</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下\n面我来说说怎么阅读每个模式，每个文件中的Test.java是该模式的测试类，上面的注解详细描述了该模式的具体介绍和优缺点等等，该包中的其他文件就\n是一些接口或抽象类等该模式所需要的类，要理解每个模式的思想，要把该包中的几个联系着一起看，为了避免太乱，就分开写了。</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">\n</span>\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">\n</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下面上传几段代码：</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">代理模式的代码：</span>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Proxy;\n/**\n\n * 代理模式 代理模式:给某一对象提供代理对象,并由代理对象控制具体对象的引用.\n\n * \n\n * 代理,指的就是一个角色代表另一个角色采取行动,就象生活中,一个红酒厂商,是不会直接把红酒零售客户的,都是通过代理来完成他的销售业务的.而客户,\n\n * 也不用为了喝红酒而到处找工厂,他只要找到厂商在当地的代理就行了,具体红酒工厂在那里,客户不用关心,代理会帮他处理.\n\n * \n\n * @author lyq\n\n * \n\n */\npublic class Test {\n        public static void main(String agr[]) {\n                SellInterface sell = new RedWineProxy();\n                sell.sell();\n        }\n}</pre>\n\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span>\n\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Observer;\n/**\n\n * 抽象主题角色类\n\n * @author lyq\n\n *\n\n */\npublic interface AbstractWatched {\n        \n        //增加一个观察者\n        public void addAbstactWatcher(AbstractWatcher watcher);\n        \n        //移除一个观察者\n        public void removeAbstactWatcher(AbstractWatcher watcher);\n        \n        //移除所有的观察着\n        public void removeAll();\n        \n        //通知所有的观察者\n        public void notifyWatchers();\n}</pre>\n\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">好了，要想知道更多的代码，都在附近里了，希望能帮助更多的人了解设计模式，设计模式的最大就是可以减少代码的耦合度，使代码独立性，模块性更强，觉得不错的话，给个回复，不枉费我的辛苦整理啊</span>\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">不好意思，刚刚代码上传发现里面有些涉及隐私信息忘删除了，晚些时候处理一下马上给出代码，真是不好意思！！</span>\n代码上传完毕，转载请注明出处！！\n\n** 更新源代码，这次增加了各大模式的通用模式，也就是下面的一个\ngeneral目录下的文件，从原理上更加理解设计模式的精髓，目前更新其中的12套模式，喜欢的就顶！！！让更多的人知道设计模式的存在！！！！**\n\n**\n**\n\n<span style=\"font-size: 20px; color: rgb(255, 0, 0);\">**下载地址：****[http://pan.baidu.com/s/1hqjIr3m](http://pan.baidu.com/s/1hqjIr3m)**</span>","source":"_posts/27种设计模式例子配详细注释源代码完整版.md","raw":"---\ntitle: 27种设计模式例子配详细注释源代码完整版\ncategories:\n- 文章\ntags: \n- 设计模式\ndate: 2015-07-12 23:13:36\n---\n\n经过几天时间的努力，整理，设计模式的demo和资料基本整理完成，首先声明，这些资料部分从网上找的，还有部分是用了&lt;&lt;java与模\n式&gt;&gt;书中的例子，里面的模式也是照着这书上的划分的，很不错的一本书，想学习设计模式的同学可以看看。先说说我的体会，每次看设计模式，总\n会有新的体会，这是第三次我复习复习这方面的知识了，感觉还不错，但是时间久了估计还是会忘，所以最好的办法还是找个例子，忘得时候看看怎么用就行了，我\n的demo把27种设计模式进行了合并，不同的模式例子，分放在不同的文件中。资料总共有一下27种模式：\n<!-- more -->\n<span style=\"color:#0000ff\">设计模式主要分三个类型:创建型、结构型和行为型。 \n其中创建型有： \n    一、Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 \n    二、Abstract Factory，抽象工厂：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们的具体类。 \n    三、Factory Method，工厂方法：定义一个用于创建对象的接口，让子类决定实例化哪一个类，Factory Method使一个类的实例化延迟到了子类。 \n    四、Builder，建造模式：将一个复杂对象的构建与他的表示相分离，使得同样的构建过程可以创建不同的表示。 \n    五、Prototype，原型模式：用原型实例指定创建对象的种类，并且通过拷贝这些原型来创建新的对象。 \n行为型有： \n    六、Iterator，迭代器模式：提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。 \n    七、Observer，观察者模式：定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知自动更新。 \n    八、Template Method，模板方法：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，TemplateMethod使得子类可以不改变一个算法的结构即可以重定义该算法得某些特定步骤。 \n    九、Command，命令模式：将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。 \n    十、State，状态模式：允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。 \n    十一、Strategy，策略模式：定义一系列的算法，把他们一个个封装起来，并使他们可以互相替换，本模式使得算法可以独立于使用它们的客户。 \n    十二、Chain of Responsibility，职责链模式：使多个对象都有机会处理请求，从而避免请求的送发者和接收者之间的耦合关系 \n    十三、Mediator，中介者模式：用一个中介对象封装一些列的对象交互。 \n    十四、Visitor，访问者模式：表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这个元素的新操作。 \n    十五、Interpreter，解释器模式：给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。 \n    十六、Memento，备忘录模式：在不破坏对象的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。 \n结构型有： \n    十七、Composite，组合模式：将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。 \n    十八、Facade，外观模式：为子系统中的一组接口提供一致的界面，fa?ade提供了一高层接口，这个接口使得子系统更容易使用。 \n    十九、Proxy，代理模式：为其他对象提供一种代理以控制对这个对象的访问 \n    二十、Adapter,适配器模式：将一类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作那些类可以一起工作。 \n    二十一、Decrator，装饰模式：动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。 \n    二十二、Bridge，桥模式：将抽象部分与它的实现部分相分离，使他们可以独立的变化。 \n    二十三、Flyweight，享元模式</span><span style=\"color:#ff0000\">除了以上23个模式之外，根据&lt;&lt;java与模式&gt;&gt;中的分类，还有4种模式，DefaultAdapter 缺省适配器模式，SimpleFactory 简单工厂模式，Multiton 多例模式, Immutable 不变模式</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下\n面我来说说怎么阅读每个模式，每个文件中的Test.java是该模式的测试类，上面的注解详细描述了该模式的具体介绍和优缺点等等，该包中的其他文件就\n是一些接口或抽象类等该模式所需要的类，要理解每个模式的思想，要把该包中的几个联系着一起看，为了避免太乱，就分开写了。</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">\n</span>\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">\n</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下面上传几段代码：</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">代理模式的代码：</span>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Proxy;\n/**\n\n * 代理模式 代理模式:给某一对象提供代理对象,并由代理对象控制具体对象的引用.\n\n * \n\n * 代理,指的就是一个角色代表另一个角色采取行动,就象生活中,一个红酒厂商,是不会直接把红酒零售客户的,都是通过代理来完成他的销售业务的.而客户,\n\n * 也不用为了喝红酒而到处找工厂,他只要找到厂商在当地的代理就行了,具体红酒工厂在那里,客户不用关心,代理会帮他处理.\n\n * \n\n * @author lyq\n\n * \n\n */\npublic class Test {\n        public static void main(String agr[]) {\n                SellInterface sell = new RedWineProxy();\n                sell.sell();\n        }\n}</pre>\n\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span>\n\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Observer;\n/**\n\n * 抽象主题角色类\n\n * @author lyq\n\n *\n\n */\npublic interface AbstractWatched {\n        \n        //增加一个观察者\n        public void addAbstactWatcher(AbstractWatcher watcher);\n        \n        //移除一个观察者\n        public void removeAbstactWatcher(AbstractWatcher watcher);\n        \n        //移除所有的观察着\n        public void removeAll();\n        \n        //通知所有的观察者\n        public void notifyWatchers();\n}</pre>\n\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">好了，要想知道更多的代码，都在附近里了，希望能帮助更多的人了解设计模式，设计模式的最大就是可以减少代码的耦合度，使代码独立性，模块性更强，觉得不错的话，给个回复，不枉费我的辛苦整理啊</span>\n<span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">不好意思，刚刚代码上传发现里面有些涉及隐私信息忘删除了，晚些时候处理一下马上给出代码，真是不好意思！！</span>\n代码上传完毕，转载请注明出处！！\n\n** 更新源代码，这次增加了各大模式的通用模式，也就是下面的一个\ngeneral目录下的文件，从原理上更加理解设计模式的精髓，目前更新其中的12套模式，喜欢的就顶！！！让更多的人知道设计模式的存在！！！！**\n\n**\n**\n\n<span style=\"font-size: 20px; color: rgb(255, 0, 0);\">**下载地址：****[http://pan.baidu.com/s/1hqjIr3m](http://pan.baidu.com/s/1hqjIr3m)**</span>","slug":"27种设计模式例子配详细注释源代码完整版","published":1,"updated":"2016-03-18T03:58:58.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmykz0000c4ub41zyz69k","content":"<p>经过几天时间的努力，整理，设计模式的demo和资料基本整理完成，首先声明，这些资料部分从网上找的，还有部分是用了&lt;&lt;java与模<br>式&gt;&gt;书中的例子，里面的模式也是照着这书上的划分的，很不错的一本书，想学习设计模式的同学可以看看。先说说我的体会，每次看设计模式，总<br>会有新的体会，这是第三次我复习复习这方面的知识了，感觉还不错，但是时间久了估计还是会忘，所以最好的办法还是找个例子，忘得时候看看怎么用就行了，我<br>的demo把27种设计模式进行了合并，不同的模式例子，分放在不同的文件中。资料总共有一下27种模式：<br><a id=\"more\"></a><br><span style=\"color:#0000ff\">设计模式主要分三个类型:创建型、结构型和行为型。<br>其中创建型有：<br>    一、Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点<br>    二、Abstract Factory，抽象工厂：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们的具体类。<br>    三、Factory Method，工厂方法：定义一个用于创建对象的接口，让子类决定实例化哪一个类，Factory Method使一个类的实例化延迟到了子类。<br>    四、Builder，建造模式：将一个复杂对象的构建与他的表示相分离，使得同样的构建过程可以创建不同的表示。<br>    五、Prototype，原型模式：用原型实例指定创建对象的种类，并且通过拷贝这些原型来创建新的对象。<br>行为型有：<br>    六、Iterator，迭代器模式：提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。<br>    七、Observer，观察者模式：定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知自动更新。<br>    八、Template Method，模板方法：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，TemplateMethod使得子类可以不改变一个算法的结构即可以重定义该算法得某些特定步骤。<br>    九、Command，命令模式：将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。<br>    十、State，状态模式：允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。<br>    十一、Strategy，策略模式：定义一系列的算法，把他们一个个封装起来，并使他们可以互相替换，本模式使得算法可以独立于使用它们的客户。<br>    十二、Chain of Responsibility，职责链模式：使多个对象都有机会处理请求，从而避免请求的送发者和接收者之间的耦合关系<br>    十三、Mediator，中介者模式：用一个中介对象封装一些列的对象交互。<br>    十四、Visitor，访问者模式：表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这个元素的新操作。<br>    十五、Interpreter，解释器模式：给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>    十六、Memento，备忘录模式：在不破坏对象的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。<br>结构型有：<br>    十七、Composite，组合模式：将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。<br>    十八、Facade，外观模式：为子系统中的一组接口提供一致的界面，fa?ade提供了一高层接口，这个接口使得子系统更容易使用。<br>    十九、Proxy，代理模式：为其他对象提供一种代理以控制对这个对象的访问<br>    二十、Adapter,适配器模式：将一类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作那些类可以一起工作。<br>    二十一、Decrator，装饰模式：动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。<br>    二十二、Bridge，桥模式：将抽象部分与它的实现部分相分离，使他们可以独立的变化。<br>    二十三、Flyweight，享元模式</span><span style=\"color:#ff0000\">除了以上23个模式之外，根据&lt;&lt;java与模式&gt;&gt;中的分类，还有4种模式，DefaultAdapter 缺省适配器模式，SimpleFactory 简单工厂模式，Multiton 多例模式, Immutable 不变模式</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下<br>面我来说说怎么阅读每个模式，每个文件中的Test.java是该模式的测试类，上面的注解详细描述了该模式的具体介绍和优缺点等等，该包中的其他文件就<br>是一些接口或抽象类等该模式所需要的类，要理解每个模式的思想，要把该包中的几个联系着一起看，为了避免太乱，就分开写了。</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"><br></span><br><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"><br></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下面上传几段代码：</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">代理模式的代码：</span></p>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Proxy;\n/**\n\n * 代理模式 代理模式:给某一对象提供代理对象,并由代理对象控制具体对象的引用.\n\n * \n\n * 代理,指的就是一个角色代表另一个角色采取行动,就象生活中,一个红酒厂商,是不会直接把红酒零售客户的,都是通过代理来完成他的销售业务的.而客户,\n\n * 也不用为了喝红酒而到处找工厂,他只要找到厂商在当地的代理就行了,具体红酒工厂在那里,客户不用关心,代理会帮他处理.\n\n * \n\n * @author lyq\n\n * \n\n */\npublic class Test {\n        public static void main(String agr[]) {\n                SellInterface sell = new RedWineProxy();\n                sell.sell();\n        }\n}</pre>\n\n<p><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span></p>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Observer;\n/**\n\n * 抽象主题角色类\n\n * @author lyq\n\n *\n\n */\npublic interface AbstractWatched {\n\n        //增加一个观察者\n        public void addAbstactWatcher(AbstractWatcher watcher);\n\n        //移除一个观察者\n        public void removeAbstactWatcher(AbstractWatcher watcher);\n\n        //移除所有的观察着\n        public void removeAll();\n\n        //通知所有的观察者\n        public void notifyWatchers();\n}</pre>\n\n<p><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">好了，要想知道更多的代码，都在附近里了，希望能帮助更多的人了解设计模式，设计模式的最大就是可以减少代码的耦合度，使代码独立性，模块性更强，觉得不错的话，给个回复，不枉费我的辛苦整理啊</span><br><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">不好意思，刚刚代码上传发现里面有些涉及隐私信息忘删除了，晚些时候处理一下马上给出代码，真是不好意思！！</span><br>代码上传完毕，转载请注明出处！！</p>\n<p><strong> 更新源代码，这次增加了各大模式的通用模式，也就是下面的一个<br>general目录下的文件，从原理上更加理解设计模式的精髓，目前更新其中的12套模式，喜欢的就顶！！！让更多的人知道设计模式的存在！！！！</strong></p>\n<p><strong>\n</strong></p>\n<p><span style=\"font-size: 20px; color: rgb(255, 0, 0);\"><strong>下载地址：**</strong><a href=\"http://pan.baidu.com/s/1hqjIr3m\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1hqjIr3m</a>**</span></p>\n","excerpt":"<p>经过几天时间的努力，整理，设计模式的demo和资料基本整理完成，首先声明，这些资料部分从网上找的，还有部分是用了&lt;&lt;java与模<br>式&gt;&gt;书中的例子，里面的模式也是照着这书上的划分的，很不错的一本书，想学习设计模式的同学可以看看。先说说我的体会，每次看设计模式，总<br>会有新的体会，这是第三次我复习复习这方面的知识了，感觉还不错，但是时间久了估计还是会忘，所以最好的办法还是找个例子，忘得时候看看怎么用就行了，我<br>的demo把27种设计模式进行了合并，不同的模式例子，分放在不同的文件中。资料总共有一下27种模式：<br>","more":"<br><span style=\"color:#0000ff\">设计模式主要分三个类型:创建型、结构型和行为型。<br>其中创建型有：<br>    一、Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点<br>    二、Abstract Factory，抽象工厂：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们的具体类。<br>    三、Factory Method，工厂方法：定义一个用于创建对象的接口，让子类决定实例化哪一个类，Factory Method使一个类的实例化延迟到了子类。<br>    四、Builder，建造模式：将一个复杂对象的构建与他的表示相分离，使得同样的构建过程可以创建不同的表示。<br>    五、Prototype，原型模式：用原型实例指定创建对象的种类，并且通过拷贝这些原型来创建新的对象。<br>行为型有：<br>    六、Iterator，迭代器模式：提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。<br>    七、Observer，观察者模式：定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知自动更新。<br>    八、Template Method，模板方法：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中，TemplateMethod使得子类可以不改变一个算法的结构即可以重定义该算法得某些特定步骤。<br>    九、Command，命令模式：将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。<br>    十、State，状态模式：允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。<br>    十一、Strategy，策略模式：定义一系列的算法，把他们一个个封装起来，并使他们可以互相替换，本模式使得算法可以独立于使用它们的客户。<br>    十二、Chain of Responsibility，职责链模式：使多个对象都有机会处理请求，从而避免请求的送发者和接收者之间的耦合关系<br>    十三、Mediator，中介者模式：用一个中介对象封装一些列的对象交互。<br>    十四、Visitor，访问者模式：表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这个元素的新操作。<br>    十五、Interpreter，解释器模式：给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。<br>    十六、Memento，备忘录模式：在不破坏对象的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。<br>结构型有：<br>    十七、Composite，组合模式：将对象组合成树形结构以表示部分整体的关系，Composite使得用户对单个对象和组合对象的使用具有一致性。<br>    十八、Facade，外观模式：为子系统中的一组接口提供一致的界面，fa?ade提供了一高层接口，这个接口使得子系统更容易使用。<br>    十九、Proxy，代理模式：为其他对象提供一种代理以控制对这个对象的访问<br>    二十、Adapter,适配器模式：将一类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作那些类可以一起工作。<br>    二十一、Decrator，装饰模式：动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。<br>    二十二、Bridge，桥模式：将抽象部分与它的实现部分相分离，使他们可以独立的变化。<br>    二十三、Flyweight，享元模式</span><span style=\"color:#ff0000\">除了以上23个模式之外，根据&lt;&lt;java与模式&gt;&gt;中的分类，还有4种模式，DefaultAdapter 缺省适配器模式，SimpleFactory 简单工厂模式，Multiton 多例模式, Immutable 不变模式</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下<br>面我来说说怎么阅读每个模式，每个文件中的Test.java是该模式的测试类，上面的注解详细描述了该模式的具体介绍和优缺点等等，该包中的其他文件就<br>是一些接口或抽象类等该模式所需要的类，要理解每个模式的思想，要把该包中的几个联系着一起看，为了避免太乱，就分开写了。</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"><br></span><br><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"><br></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">下面上传几段代码：</span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">代理模式的代码：</span></p>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Proxy;\n/**\n\n * 代理模式 代理模式:给某一对象提供代理对象,并由代理对象控制具体对象的引用.\n\n * \n\n * 代理,指的就是一个角色代表另一个角色采取行动,就象生活中,一个红酒厂商,是不会直接把红酒零售客户的,都是通过代理来完成他的销售业务的.而客户,\n\n * 也不用为了喝红酒而到处找工厂,他只要找到厂商在当地的代理就行了,具体红酒工厂在那里,客户不用关心,代理会帮他处理.\n\n * \n\n * @author lyq\n\n * \n\n */\npublic class Test {\n        public static void main(String agr[]) {\n                SellInterface sell = new RedWineProxy();\n                sell.sell();\n        }\n}</pre>\n\n<p><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span></p>\n<pre class=\"brush:java;toolbar:false\">package com.kunhong.design.Observer;\n/**\n\n * 抽象主题角色类\n\n * @author lyq\n\n *\n\n */\npublic interface AbstractWatched {\n\n        //增加一个观察者\n        public void addAbstactWatcher(AbstractWatcher watcher);\n\n        //移除一个观察者\n        public void removeAbstactWatcher(AbstractWatcher watcher);\n\n        //移除所有的观察着\n        public void removeAll();\n\n        //通知所有的观察者\n        public void notifyWatchers();\n}</pre>\n\n<p><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\"></span><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">好了，要想知道更多的代码，都在附近里了，希望能帮助更多的人了解设计模式，设计模式的最大就是可以减少代码的耦合度，使代码独立性，模块性更强，觉得不错的话，给个回复，不枉费我的辛苦整理啊</span><br><span style=\"font-family:Microsoft Yahei, Tahoma, Simsun\">不好意思，刚刚代码上传发现里面有些涉及隐私信息忘删除了，晚些时候处理一下马上给出代码，真是不好意思！！</span><br>代码上传完毕，转载请注明出处！！</p>\n<p><strong> 更新源代码，这次增加了各大模式的通用模式，也就是下面的一个<br>general目录下的文件，从原理上更加理解设计模式的精髓，目前更新其中的12套模式，喜欢的就顶！！！让更多的人知道设计模式的存在！！！！</strong></p>\n<p><strong>\n</strong></p>\n<p><span style=\"font-size: 20px; color: rgb(255, 0, 0);\"><strong>下载地址：**</strong><a href=\"http://pan.baidu.com/s/1hqjIr3m\">http://pan.baidu.com/s/1hqjIr3m</a>**</span></p>"},{"title":"Android Adapter优化(二)之Adapter对不同布局的支持","date":"2015-08-25T06:12:03.000Z","_content":"\n在Android开发过程中,用到的控件最多的就是ListView了，相信大家在做应用的过程中展示数据许多时候都需要在一个ListView上展示不同的布局吧,这个Android的Adapter机制本身就是支持的代码如下:\n<!-- more -->\n1,adapter的内容:\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.content.Context;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.betterandroid.adapter.base.BaseArrayListAdapter;\nimport com.betterandroid.bitmap.ajaxbitmap.AjaxBitmap;\npublic class MyAdapter extends BaseArrayListAdapter&lt;MyBean&gt; {\n        private Context mContext;\n        private FinalBitmap ajaxBitmap;\n        public MyAdapter(Context mContext, ArrayList&lt;MyBean&gt; list) {\n                super();\n                this.mContext = mContext;\n                this.data = list;\n                ajaxBitmap = FinalBitmap .create(mContext);\n        }\n        @Override\n        public int getViewTypeCount() {\n                // TODO Auto-generated method stub\n                return 3;\n        }\n        \n        @Override\n        public int getItemViewType(int position) {\n                // TODO Auto-generated method stub\n                if(data.get(position).getType() == 0) {\n                        return 0;\n                }\n                if(data.get(position).getType() == 1) {\n                        return 1;\n                }\n                return 2;\n        }\n        \n        \n        @Override\n        public ViewHolder getViewHolder(\n                        View convertView, ViewGroup parent, int position) {\n                // TODO Auto-generated method stub\n                ViewHolder mViewHolder = null;\n                int type = getItemViewType(position);\n                switch (type) {\n                case 0:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item);\n                        TextView text = mViewHolder.findViewById(R.id.text);\n                        text.setText(data.get(position).getContent());\n                        break;\n                case 1:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_two);\n                        ImageView imageview = mViewHolder.findViewById(R.id.imageview);\n                        ajaxBitmap.display(imageview, data.get(position).getContent());\n                        break;\n                case 2:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_three);\n                        ImageView image = mViewHolder.findViewById(R.id.image);\n                        ImageView image1 = mViewHolder.findViewById(R.id.image1);\n                        ajaxBitmap.display(image, data.get(position).getContent());\n                        ajaxBitmap.display(image1, data.get(position).getContent());\n                        break;\n                default:\n                        break;\n                }\n                return mViewHolder;\n        }</pre>\n\n2，activity内容:\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.widget.ListView;\npublic class MainActivity extends Activity {\n        private ListView listview;\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n                super.onCreate(savedInstanceState);\n                setContentView(R.layout.activity_main);\n                listview = (ListView) this.findViewById(R.id.listview);\n                MyAdapter adapter = new MyAdapter(getApplicationContext(), initData());\n                listview.setAdapter(adapter);\n        }\n        \n        private ArrayList&lt;MyBean&gt; initData() {\n                // TODO Auto-generated method stub\n                ArrayList&lt;MyBean&gt; list = new ArrayList&lt;MyBean&gt;();\n                for (int i = 0; i &lt; 80; i++) {\n                        MyBean bean;\n                        if(i%3==0) {\n                                bean = new MyBean(0, &quot;text&quot;+i);\n                        } else if(i%3 == 1){\n                                bean = new MyBean(1, IMAGE_DEMO[i%14]);\n                        } else {\n                                bean = new MyBean(2, IMAGE_DEMO[i%14]);\n                        }\n                        list.add(bean);\n                }\n                return list;\n        }\n        \n        /**\n         * 测试图片\n         */\n        public String[] IMAGE_DEMO = {\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/0bd162d9f2d3572cb707d6dd8813632763d0c3ce.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/bba1cd11728b4710604224c1c1cec3fdfc03234a.jpg&quot;,\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/3bf33a87e950352a18846f095143fbf2b3118bce.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b3fb43166d224f4a97ffc6120bf790529822d149.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/e4dde71190ef76c6aeb24e2a9f16fdfaaf51674a.jpg&quot;,\n                        &quot;http://c.hiphotos.baidu.com/image/pic/item/4a36acaf2edda3cc9ecc193f03e93901213f9281.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/241f95cad1c8a786beb13e066509c93d70cf501a.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/e824b899a9014c08f25c9da4087b02087bf4f448.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/d788d43f8794a4c23243522a0cf41bd5ad6e394a.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/6609c93d70cf3bc7d6ad8dead300baa1cd112a02.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b219ebc4b74543a905b7baca1c178a82b9011403.jpg&quot;,\n                        &quot;http://d.hiphotos.baidu.com/image/pic/item/c8ea15ce36d3d53955944fc53887e950352ab00f.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7860504930c6509c93d70cf5082.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/4e4a20a4462309f77ff6d318700e0cf3d7cad61b.jpg&quot; };\n}</pre>\n\n4，XMl布局：\nactivity_main.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/listview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;TextView\n        android:id=&quot;@+id/text&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center&quot;\n        android:text=&quot;aaa&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_two.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_three.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/image&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n    \n    &lt;ImageView\n        android:id=&quot;@+id/image1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>","source":"_posts/Android-Adapter优化-二-之Adapter对不同布局的支持.md","raw":"---\ntitle: Android Adapter优化(二)之Adapter对不同布局的支持\ncategories:\n- 文章\ntags:\n- Adapter\ndate: 2015-08-25 14:12:03\n---\n\n在Android开发过程中,用到的控件最多的就是ListView了，相信大家在做应用的过程中展示数据许多时候都需要在一个ListView上展示不同的布局吧,这个Android的Adapter机制本身就是支持的代码如下:\n<!-- more -->\n1,adapter的内容:\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.content.Context;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.betterandroid.adapter.base.BaseArrayListAdapter;\nimport com.betterandroid.bitmap.ajaxbitmap.AjaxBitmap;\npublic class MyAdapter extends BaseArrayListAdapter&lt;MyBean&gt; {\n        private Context mContext;\n        private FinalBitmap ajaxBitmap;\n        public MyAdapter(Context mContext, ArrayList&lt;MyBean&gt; list) {\n                super();\n                this.mContext = mContext;\n                this.data = list;\n                ajaxBitmap = FinalBitmap .create(mContext);\n        }\n        @Override\n        public int getViewTypeCount() {\n                // TODO Auto-generated method stub\n                return 3;\n        }\n        \n        @Override\n        public int getItemViewType(int position) {\n                // TODO Auto-generated method stub\n                if(data.get(position).getType() == 0) {\n                        return 0;\n                }\n                if(data.get(position).getType() == 1) {\n                        return 1;\n                }\n                return 2;\n        }\n        \n        \n        @Override\n        public ViewHolder getViewHolder(\n                        View convertView, ViewGroup parent, int position) {\n                // TODO Auto-generated method stub\n                ViewHolder mViewHolder = null;\n                int type = getItemViewType(position);\n                switch (type) {\n                case 0:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item);\n                        TextView text = mViewHolder.findViewById(R.id.text);\n                        text.setText(data.get(position).getContent());\n                        break;\n                case 1:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_two);\n                        ImageView imageview = mViewHolder.findViewById(R.id.imageview);\n                        ajaxBitmap.display(imageview, data.get(position).getContent());\n                        break;\n                case 2:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_three);\n                        ImageView image = mViewHolder.findViewById(R.id.image);\n                        ImageView image1 = mViewHolder.findViewById(R.id.image1);\n                        ajaxBitmap.display(image, data.get(position).getContent());\n                        ajaxBitmap.display(image1, data.get(position).getContent());\n                        break;\n                default:\n                        break;\n                }\n                return mViewHolder;\n        }</pre>\n\n2，activity内容:\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.widget.ListView;\npublic class MainActivity extends Activity {\n        private ListView listview;\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n                super.onCreate(savedInstanceState);\n                setContentView(R.layout.activity_main);\n                listview = (ListView) this.findViewById(R.id.listview);\n                MyAdapter adapter = new MyAdapter(getApplicationContext(), initData());\n                listview.setAdapter(adapter);\n        }\n        \n        private ArrayList&lt;MyBean&gt; initData() {\n                // TODO Auto-generated method stub\n                ArrayList&lt;MyBean&gt; list = new ArrayList&lt;MyBean&gt;();\n                for (int i = 0; i &lt; 80; i++) {\n                        MyBean bean;\n                        if(i%3==0) {\n                                bean = new MyBean(0, &quot;text&quot;+i);\n                        } else if(i%3 == 1){\n                                bean = new MyBean(1, IMAGE_DEMO[i%14]);\n                        } else {\n                                bean = new MyBean(2, IMAGE_DEMO[i%14]);\n                        }\n                        list.add(bean);\n                }\n                return list;\n        }\n        \n        /**\n         * 测试图片\n         */\n        public String[] IMAGE_DEMO = {\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/0bd162d9f2d3572cb707d6dd8813632763d0c3ce.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/bba1cd11728b4710604224c1c1cec3fdfc03234a.jpg&quot;,\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/3bf33a87e950352a18846f095143fbf2b3118bce.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b3fb43166d224f4a97ffc6120bf790529822d149.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/e4dde71190ef76c6aeb24e2a9f16fdfaaf51674a.jpg&quot;,\n                        &quot;http://c.hiphotos.baidu.com/image/pic/item/4a36acaf2edda3cc9ecc193f03e93901213f9281.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/241f95cad1c8a786beb13e066509c93d70cf501a.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/e824b899a9014c08f25c9da4087b02087bf4f448.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/d788d43f8794a4c23243522a0cf41bd5ad6e394a.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/6609c93d70cf3bc7d6ad8dead300baa1cd112a02.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b219ebc4b74543a905b7baca1c178a82b9011403.jpg&quot;,\n                        &quot;http://d.hiphotos.baidu.com/image/pic/item/c8ea15ce36d3d53955944fc53887e950352ab00f.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7860504930c6509c93d70cf5082.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/4e4a20a4462309f77ff6d318700e0cf3d7cad61b.jpg&quot; };\n}</pre>\n\n4，XMl布局：\nactivity_main.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/listview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;TextView\n        android:id=&quot;@+id/text&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center&quot;\n        android:text=&quot;aaa&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_two.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_three.xml\n<pre class=\"brush:xml;toolbar:false\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/image&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n    \n    &lt;ImageView\n        android:id=&quot;@+id/image1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>","slug":"Android-Adapter优化-二-之Adapter对不同布局的支持","published":1,"updated":"2016-03-18T04:00:38.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylb0002c4ub3bt4o65v","content":"<p>在Android开发过程中,用到的控件最多的就是ListView了，相信大家在做应用的过程中展示数据许多时候都需要在一个ListView上展示不同的布局吧,这个Android的Adapter机制本身就是支持的代码如下:<br><a id=\"more\"></a><br>1,adapter的内容:</p>\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.content.Context;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.betterandroid.adapter.base.BaseArrayListAdapter;\nimport com.betterandroid.bitmap.ajaxbitmap.AjaxBitmap;\npublic class MyAdapter extends BaseArrayListAdapter&lt;MyBean&gt; {\n        private Context mContext;\n        private FinalBitmap ajaxBitmap;\n        public MyAdapter(Context mContext, ArrayList&lt;MyBean&gt; list) {\n                super();\n                this.mContext = mContext;\n                this.data = list;\n                ajaxBitmap = FinalBitmap .create(mContext);\n        }\n        @Override\n        public int getViewTypeCount() {\n                // TODO Auto-generated method stub\n                return 3;\n        }\n\n        @Override\n        public int getItemViewType(int position) {\n                // TODO Auto-generated method stub\n                if(data.get(position).getType() == 0) {\n                        return 0;\n                }\n                if(data.get(position).getType() == 1) {\n                        return 1;\n                }\n                return 2;\n        }\n\n\n        @Override\n        public ViewHolder getViewHolder(\n                        View convertView, ViewGroup parent, int position) {\n                // TODO Auto-generated method stub\n                ViewHolder mViewHolder = null;\n                int type = getItemViewType(position);\n                switch (type) {\n                case 0:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item);\n                        TextView text = mViewHolder.findViewById(R.id.text);\n                        text.setText(data.get(position).getContent());\n                        break;\n                case 1:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_two);\n                        ImageView imageview = mViewHolder.findViewById(R.id.imageview);\n                        ajaxBitmap.display(imageview, data.get(position).getContent());\n                        break;\n                case 2:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_three);\n                        ImageView image = mViewHolder.findViewById(R.id.image);\n                        ImageView image1 = mViewHolder.findViewById(R.id.image1);\n                        ajaxBitmap.display(image, data.get(position).getContent());\n                        ajaxBitmap.display(image1, data.get(position).getContent());\n                        break;\n                default:\n                        break;\n                }\n                return mViewHolder;\n        }</pre>\n\n<p>2，activity内容:</p>\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.widget.ListView;\npublic class MainActivity extends Activity {\n        private ListView listview;\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n                super.onCreate(savedInstanceState);\n                setContentView(R.layout.activity_main);\n                listview = (ListView) this.findViewById(R.id.listview);\n                MyAdapter adapter = new MyAdapter(getApplicationContext(), initData());\n                listview.setAdapter(adapter);\n        }\n\n        private ArrayList&lt;MyBean&gt; initData() {\n                // TODO Auto-generated method stub\n                ArrayList&lt;MyBean&gt; list = new ArrayList&lt;MyBean&gt;();\n                for (int i = 0; i &lt; 80; i++) {\n                        MyBean bean;\n                        if(i%3==0) {\n                                bean = new MyBean(0, &quot;text&quot;+i);\n                        } else if(i%3 == 1){\n                                bean = new MyBean(1, IMAGE_DEMO[i%14]);\n                        } else {\n                                bean = new MyBean(2, IMAGE_DEMO[i%14]);\n                        }\n                        list.add(bean);\n                }\n                return list;\n        }\n\n        /**\n         * 测试图片\n         */\n        public String[] IMAGE_DEMO = {\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/0bd162d9f2d3572cb707d6dd8813632763d0c3ce.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/bba1cd11728b4710604224c1c1cec3fdfc03234a.jpg&quot;,\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/3bf33a87e950352a18846f095143fbf2b3118bce.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b3fb43166d224f4a97ffc6120bf790529822d149.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/e4dde71190ef76c6aeb24e2a9f16fdfaaf51674a.jpg&quot;,\n                        &quot;http://c.hiphotos.baidu.com/image/pic/item/4a36acaf2edda3cc9ecc193f03e93901213f9281.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/241f95cad1c8a786beb13e066509c93d70cf501a.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/e824b899a9014c08f25c9da4087b02087bf4f448.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/d788d43f8794a4c23243522a0cf41bd5ad6e394a.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/6609c93d70cf3bc7d6ad8dead300baa1cd112a02.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b219ebc4b74543a905b7baca1c178a82b9011403.jpg&quot;,\n                        &quot;http://d.hiphotos.baidu.com/image/pic/item/c8ea15ce36d3d53955944fc53887e950352ab00f.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7860504930c6509c93d70cf5082.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/4e4a20a4462309f77ff6d318700e0cf3d7cad61b.jpg&quot; };\n}</pre>\n\n<p>4，XMl布局：<br>activity_main.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/listview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;TextView\n        android:id=&quot;@+id/text&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center&quot;\n        android:text=&quot;aaa&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_two.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_three.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/image&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n\n    &lt;ImageView\n        android:id=&quot;@+id/image1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>","excerpt":"<p>在Android开发过程中,用到的控件最多的就是ListView了，相信大家在做应用的过程中展示数据许多时候都需要在一个ListView上展示不同的布局吧,这个Android的Adapter机制本身就是支持的代码如下:<br>","more":"<br>1,adapter的内容:</p>\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.content.Context;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.betterandroid.adapter.base.BaseArrayListAdapter;\nimport com.betterandroid.bitmap.ajaxbitmap.AjaxBitmap;\npublic class MyAdapter extends BaseArrayListAdapter&lt;MyBean&gt; {\n        private Context mContext;\n        private FinalBitmap ajaxBitmap;\n        public MyAdapter(Context mContext, ArrayList&lt;MyBean&gt; list) {\n                super();\n                this.mContext = mContext;\n                this.data = list;\n                ajaxBitmap = FinalBitmap .create(mContext);\n        }\n        @Override\n        public int getViewTypeCount() {\n                // TODO Auto-generated method stub\n                return 3;\n        }\n\n        @Override\n        public int getItemViewType(int position) {\n                // TODO Auto-generated method stub\n                if(data.get(position).getType() == 0) {\n                        return 0;\n                }\n                if(data.get(position).getType() == 1) {\n                        return 1;\n                }\n                return 2;\n        }\n\n\n        @Override\n        public ViewHolder getViewHolder(\n                        View convertView, ViewGroup parent, int position) {\n                // TODO Auto-generated method stub\n                ViewHolder mViewHolder = null;\n                int type = getItemViewType(position);\n                switch (type) {\n                case 0:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item);\n                        TextView text = mViewHolder.findViewById(R.id.text);\n                        text.setText(data.get(position).getContent());\n                        break;\n                case 1:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_two);\n                        ImageView imageview = mViewHolder.findViewById(R.id.imageview);\n                        ajaxBitmap.display(imageview, data.get(position).getContent());\n                        break;\n                case 2:\n                        mViewHolder = ViewHolder.get(mContext, convertView, parent, R.layout.list_item_three);\n                        ImageView image = mViewHolder.findViewById(R.id.image);\n                        ImageView image1 = mViewHolder.findViewById(R.id.image1);\n                        ajaxBitmap.display(image, data.get(position).getContent());\n                        ajaxBitmap.display(image1, data.get(position).getContent());\n                        break;\n                default:\n                        break;\n                }\n                return mViewHolder;\n        }</pre>\n\n<p>2，activity内容:</p>\n<pre class=\"brush:java;toolbar:false\">import java.util.ArrayList;\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.widget.ListView;\npublic class MainActivity extends Activity {\n        private ListView listview;\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n                super.onCreate(savedInstanceState);\n                setContentView(R.layout.activity_main);\n                listview = (ListView) this.findViewById(R.id.listview);\n                MyAdapter adapter = new MyAdapter(getApplicationContext(), initData());\n                listview.setAdapter(adapter);\n        }\n\n        private ArrayList&lt;MyBean&gt; initData() {\n                // TODO Auto-generated method stub\n                ArrayList&lt;MyBean&gt; list = new ArrayList&lt;MyBean&gt;();\n                for (int i = 0; i &lt; 80; i++) {\n                        MyBean bean;\n                        if(i%3==0) {\n                                bean = new MyBean(0, &quot;text&quot;+i);\n                        } else if(i%3 == 1){\n                                bean = new MyBean(1, IMAGE_DEMO[i%14]);\n                        } else {\n                                bean = new MyBean(2, IMAGE_DEMO[i%14]);\n                        }\n                        list.add(bean);\n                }\n                return list;\n        }\n\n        /**\n         * 测试图片\n         */\n        public String[] IMAGE_DEMO = {\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/0bd162d9f2d3572cb707d6dd8813632763d0c3ce.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/bba1cd11728b4710604224c1c1cec3fdfc03234a.jpg&quot;,\n                        &quot;http://g.hiphotos.baidu.com/image/pic/item/3bf33a87e950352a18846f095143fbf2b3118bce.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b3fb43166d224f4a97ffc6120bf790529822d149.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/e4dde71190ef76c6aeb24e2a9f16fdfaaf51674a.jpg&quot;,\n                        &quot;http://c.hiphotos.baidu.com/image/pic/item/4a36acaf2edda3cc9ecc193f03e93901213f9281.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/241f95cad1c8a786beb13e066509c93d70cf501a.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/e824b899a9014c08f25c9da4087b02087bf4f448.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/d788d43f8794a4c23243522a0cf41bd5ad6e394a.jpg&quot;,\n                        &quot;http://b.hiphotos.baidu.com/image/pic/item/6609c93d70cf3bc7d6ad8dead300baa1cd112a02.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/b219ebc4b74543a905b7baca1c178a82b9011403.jpg&quot;,\n                        &quot;http://d.hiphotos.baidu.com/image/pic/item/c8ea15ce36d3d53955944fc53887e950352ab00f.jpg&quot;,\n                        &quot;http://e.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7860504930c6509c93d70cf5082.jpg&quot;,\n                        &quot;http://h.hiphotos.baidu.com/image/pic/item/4e4a20a4462309f77ff6d318700e0cf3d7cad61b.jpg&quot; };\n}</pre>\n\n<p>4，XMl布局：<br>activity_main.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/listview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;TextView\n        android:id=&quot;@+id/text&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center&quot;\n        android:text=&quot;aaa&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_two.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageview&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_three.xml</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:layout_gravity=&quot;center&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center&quot; &gt;\n    &lt;ImageView\n        android:id=&quot;@+id/image&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n\n    &lt;ImageView\n        android:id=&quot;@+id/image1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>"},{"title":"Android 快速开发框架 ThinkAndroid","date":"2015-06-17T12:31:15.000Z","_content":"\n**ThinkAndroid简介\n        **ThinkAndroid是一个免费的开源的、简易的、遵循Apache2开源协议发布的Android开发框\n架，其开发宗旨是简单、快速的进行Android应用程序的开发，包含Android  mvc、简易sqlite \norm、ioc模块、封装Android  httpclitent的http模块,具有快速构建文件缓存功能，无需考虑缓存文件的格式，都可以非常轻松\n的实现缓存，它还基于文件缓存模块实现了图片缓存功能，在android中加载的图片的时候，对oom的问题，和对加载图片错位的问题都轻易解决。他还包\n括了一个手机开发中经常应用的实用工具类，如日志管理，配置文件管理，android下载器模块，网络切换检测等等工具。          \n<!-- more -->\n**目前ThinkAndroid主要有以下模块：**\n\n*   MVC模块：实现视图与模型的分离。\n\n*   ioc模块：android中的ioc模块，完全注解方式就可以进行UI绑定、res中的资源的读取、以及对象的初始化。\n\n*   数据库模块：android中的orm框架，使用了线程池对sqlite进行操作。\n\n*   http模块：通过httpclient进行封装http数据请求，支持异步及同步方式加载。\n\n*                   缓存模块：通过简单的配置及设计可以很好的实现缓存，对缓存可以随意的配置\n\n*                   图片缓存模块：imageview加载图片的时候无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象。\n\n*                   配置器模块：可以对简易的实现配对配置的操作，目前配置文件可以支持Preference、Properties对配置进行存取。\n\n*                   日志打印模块：可以较快的轻易的是实现日志打印，支持日志打印的扩展，目前支持对sdcard写入本地打印、以及控制台打印\n\n*                   下载器模块:可以简单的实现多线程下载、后台下载、断点续传、对下载进行控制、如开始、暂停、删除等等。\n\n*                   网络状态检测模块：当网络状态改变时，对网络状态进行检测。\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1dDjMHBb</span>](http://pan.baidu.com/s/1dDjMHBb)","source":"_posts/Android-快速开发框架-ThinkAndroid.md","raw":"---\ntitle: Android 快速开发框架 ThinkAndroid\ncategories:\n- 开源项目\ndate: 2015-06-17 20:31:15\n---\n\n**ThinkAndroid简介\n        **ThinkAndroid是一个免费的开源的、简易的、遵循Apache2开源协议发布的Android开发框\n架，其开发宗旨是简单、快速的进行Android应用程序的开发，包含Android  mvc、简易sqlite \norm、ioc模块、封装Android  httpclitent的http模块,具有快速构建文件缓存功能，无需考虑缓存文件的格式，都可以非常轻松\n的实现缓存，它还基于文件缓存模块实现了图片缓存功能，在android中加载的图片的时候，对oom的问题，和对加载图片错位的问题都轻易解决。他还包\n括了一个手机开发中经常应用的实用工具类，如日志管理，配置文件管理，android下载器模块，网络切换检测等等工具。          \n<!-- more -->\n**目前ThinkAndroid主要有以下模块：**\n\n*   MVC模块：实现视图与模型的分离。\n\n*   ioc模块：android中的ioc模块，完全注解方式就可以进行UI绑定、res中的资源的读取、以及对象的初始化。\n\n*   数据库模块：android中的orm框架，使用了线程池对sqlite进行操作。\n\n*   http模块：通过httpclient进行封装http数据请求，支持异步及同步方式加载。\n\n*                   缓存模块：通过简单的配置及设计可以很好的实现缓存，对缓存可以随意的配置\n\n*                   图片缓存模块：imageview加载图片的时候无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象。\n\n*                   配置器模块：可以对简易的实现配对配置的操作，目前配置文件可以支持Preference、Properties对配置进行存取。\n\n*                   日志打印模块：可以较快的轻易的是实现日志打印，支持日志打印的扩展，目前支持对sdcard写入本地打印、以及控制台打印\n\n*                   下载器模块:可以简单的实现多线程下载、后台下载、断点续传、对下载进行控制、如开始、暂停、删除等等。\n\n*                   网络状态检测模块：当网络状态改变时，对网络状态进行检测。\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1dDjMHBb</span>](http://pan.baidu.com/s/1dDjMHBb)","slug":"Android-快速开发框架-ThinkAndroid","published":1,"updated":"2016-03-18T04:02:51.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylh0006c4ublc5ot3n3","content":"<p><strong>ThinkAndroid简介\n        </strong>ThinkAndroid是一个免费的开源的、简易的、遵循Apache2开源协议发布的Android开发框<br>架，其开发宗旨是简单、快速的进行Android应用程序的开发，包含Android  mvc、简易sqlite<br>orm、ioc模块、封装Android  httpclitent的http模块,具有快速构建文件缓存功能，无需考虑缓存文件的格式，都可以非常轻松<br>的实现缓存，它还基于文件缓存模块实现了图片缓存功能，在android中加载的图片的时候，对oom的问题，和对加载图片错位的问题都轻易解决。他还包<br>括了一个手机开发中经常应用的实用工具类，如日志管理，配置文件管理，android下载器模块，网络切换检测等等工具。<br><a id=\"more\"></a><br><strong>目前ThinkAndroid主要有以下模块：</strong></p>\n<ul>\n<li><p>MVC模块：实现视图与模型的分离。</p>\n</li>\n<li><p>ioc模块：android中的ioc模块，完全注解方式就可以进行UI绑定、res中的资源的读取、以及对象的初始化。</p>\n</li>\n<li><p>数据库模块：android中的orm框架，使用了线程池对sqlite进行操作。</p>\n</li>\n<li><p>http模块：通过httpclient进行封装http数据请求，支持异步及同步方式加载。</p>\n</li>\n<li><p>缓存模块：通过简单的配置及设计可以很好的实现缓存，对缓存可以随意的配置</p>\n</li>\n<li><p>图片缓存模块：imageview加载图片的时候无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象。</p>\n</li>\n<li><p>配置器模块：可以对简易的实现配对配置的操作，目前配置文件可以支持Preference、Properties对配置进行存取。</p>\n</li>\n<li><p>日志打印模块：可以较快的轻易的是实现日志打印，支持日志打印的扩展，目前支持对sdcard写入本地打印、以及控制台打印</p>\n</li>\n<li><p>下载器模块:可以简单的实现多线程下载、后台下载、断点续传、对下载进行控制、如开始、暂停、删除等等。</p>\n</li>\n<li><p>网络状态检测模块：当网络状态改变时，对网络状态进行检测。</p>\n</li>\n</ul>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1dDjMHBb\" target=\"_blank\" rel=\"external\"><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1dDjMHBb</span></a></p>\n","excerpt":"<p><strong>ThinkAndroid简介\n        </strong>ThinkAndroid是一个免费的开源的、简易的、遵循Apache2开源协议发布的Android开发框<br>架，其开发宗旨是简单、快速的进行Android应用程序的开发，包含Android  mvc、简易sqlite<br>orm、ioc模块、封装Android  httpclitent的http模块,具有快速构建文件缓存功能，无需考虑缓存文件的格式，都可以非常轻松<br>的实现缓存，它还基于文件缓存模块实现了图片缓存功能，在android中加载的图片的时候，对oom的问题，和对加载图片错位的问题都轻易解决。他还包<br>括了一个手机开发中经常应用的实用工具类，如日志管理，配置文件管理，android下载器模块，网络切换检测等等工具。<br>","more":"<br><strong>目前ThinkAndroid主要有以下模块：</strong></p>\n<ul>\n<li><p>MVC模块：实现视图与模型的分离。</p>\n</li>\n<li><p>ioc模块：android中的ioc模块，完全注解方式就可以进行UI绑定、res中的资源的读取、以及对象的初始化。</p>\n</li>\n<li><p>数据库模块：android中的orm框架，使用了线程池对sqlite进行操作。</p>\n</li>\n<li><p>http模块：通过httpclient进行封装http数据请求，支持异步及同步方式加载。</p>\n</li>\n<li><p>缓存模块：通过简单的配置及设计可以很好的实现缓存，对缓存可以随意的配置</p>\n</li>\n<li><p>图片缓存模块：imageview加载图片的时候无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象。</p>\n</li>\n<li><p>配置器模块：可以对简易的实现配对配置的操作，目前配置文件可以支持Preference、Properties对配置进行存取。</p>\n</li>\n<li><p>日志打印模块：可以较快的轻易的是实现日志打印，支持日志打印的扩展，目前支持对sdcard写入本地打印、以及控制台打印</p>\n</li>\n<li><p>下载器模块:可以简单的实现多线程下载、后台下载、断点续传、对下载进行控制、如开始、暂停、删除等等。</p>\n</li>\n<li><p>网络状态检测模块：当网络状态改变时，对网络状态进行检测。</p>\n</li>\n</ul>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1dDjMHBb\"><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1dDjMHBb</span></a></p>"},{"title":"AWS上搭建shadowsocks 免费翻墙","date":"2016-02-29T06:47:07.000Z","_content":"\nhadowsocks类似goagent，是一种快速隧道代理，帮助你绕过防火墙。shadowsocks需要使用自己的服务器，当然选择不同价格的服务器决定了服务的质量:-)\n<!-- more -->\n优点：\n\n1.  可以免费：shadowsocks可以利用免费的Aws EC2，公有服务器还是不考虑吧，毕竟时间更宝贵。\n\n2.  表现稳定：有过使用goagent的经验，经常会丢包\n\n3.  速度较快：还是那句话，一分钱一分货\n\n4.  多平台支持：感谢开源，无论Linux，win*，MacOS，iOS，Android平台均可以安装shadowsocks客户端\n\n<span style=\"font-size: 20px;\">1.注册</span>\n\n1.  注册AWS账号，需要信用卡（淘宝上有1美元账户，或者申请[全球付虚拟信用卡](https://www.globalcash.hk/))\n\n2.  进入[aws主页](http://aws.amazon.com/cn/)，按照提示完成注册，然后需要进一步通过手机验证_“Identity Verification by Telephone”_，输入电话号码后点击_“call me now”_，稍后Amazon便会有电话拨来，按照提示在电话上输入屏幕上的_“Your PIN：”_给出的四个数字即可。\n\n3.  之后选择_Amazon Support Plan_，这里选择_Basic（Free）_，注册成功后会进入欢迎界面，选择_“启动Aws管理控制台”_。\n\n<span style=\"font-size: 20px;\"></span><span style=\"font-size: 20px;\">2.创建实例（推荐东京节点）</span>\n\n![awsec201.png](/upload/2016/02/201602291456728783308021.png \"201602291456728783308021.png\")\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">选择</span>_Amazon系统映像_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">(AMI)，这里选择</span>_“Ubuntu Server 14.04 LTS”_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">，如下图：</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![QQ截图20160229145350.png](/upload/2016/02/201602291456728851354710.png \"201602291456728851354710.png\")</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">一路下一步到配置安全组（添加一个规则，端口<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">443</span>，也可以自定义，来源<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">任何位置</span>）</span>_\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![blob.png](/upload/2016/02/201602291456728901300663.png \"正在上传...\")</span>\n\n<span style=\"font-family: &#39;Open Sans&#39;; line-height: 26px; color: rgb(255, 0, 0); font-size: 20px; background-color: rgb(255, 255, 255);\">继续步骤创建完成，进入控制面板的弹性ip分配公网地址，绑定刚申请的实例（这步很重要）</span>\n\n<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![blob.png](/upload/2016/02/201602291456729113103878.png \"正在上传...\")</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">3.配置shadowsocks</span>\n\n<span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">\n</span>\n\n_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">登录ssh（</span><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">[ssh使用教程](https://docs.aws.amazon.com/zh_cn/console/ec2/instances/connect/docs)），执行以下命令：</span>_\n<pre class=\"brush:cf;toolbar:false\">1. sudo -s //获取超级管理员权限\n2. apt-get update //更新apt-get\n3. apt-get install python-pip //安装python包管理工具pip\n4. pip install shadowsocks // 安装shadowsocks</pre><pre class=\"brush:cf;toolbar:false\">nano /etc/shadowsocks.json  //配置文件</pre>\n\n_\n_\n\n_添加以下代码：_\n\n_\n_\n<pre class=\"brush:cf;toolbar:false\">{\n    &quot;server&quot;:&quot;0.0.0.0&quot;,\n    &quot;server_port&quot;:在创建实例安全组时添加的端口号（比如443）,\n    &quot;local_address&quot;:&quot;127.0.0.1&quot;,\n    &quot;local_port&quot;:1080,\n    &quot;password&quot;:&quot;连接密码&quot;,\n    &quot;timeout&quot;:300,\n    &quot;method&quot;:&quot;aes-256-cfb&quot;,\n    &quot;fast_open&quot;:false\n}</pre><pre class=\"brush:cf;toolbar:false\">ssserver -c /etc/shadowsocks.json -d start //启动shadowsocks</pre>\n\n<span style=\"font-size: 20px;\">4.shadowsocks客户端下载：</span>\n\n[https://shadowsocks.org/en/index.html](https://shadowsocks.org/en/index.html)\n\n配置截图：\n\n![blob.png](/upload/2016/02/201602291456738265125261.png \"正在上传...\")","source":"_posts/AWS上搭建shadowsocks-免费翻墙.md","raw":"---\ntitle: AWS上搭建shadowsocks 免费翻墙\ncategories:\n- 文章\ntags:\n- AWS\n- ShadowScocks\ndate: 2016-02-29 14:47:07\n---\n\nhadowsocks类似goagent，是一种快速隧道代理，帮助你绕过防火墙。shadowsocks需要使用自己的服务器，当然选择不同价格的服务器决定了服务的质量:-)\n<!-- more -->\n优点：\n\n1.  可以免费：shadowsocks可以利用免费的Aws EC2，公有服务器还是不考虑吧，毕竟时间更宝贵。\n\n2.  表现稳定：有过使用goagent的经验，经常会丢包\n\n3.  速度较快：还是那句话，一分钱一分货\n\n4.  多平台支持：感谢开源，无论Linux，win*，MacOS，iOS，Android平台均可以安装shadowsocks客户端\n\n<span style=\"font-size: 20px;\">1.注册</span>\n\n1.  注册AWS账号，需要信用卡（淘宝上有1美元账户，或者申请[全球付虚拟信用卡](https://www.globalcash.hk/))\n\n2.  进入[aws主页](http://aws.amazon.com/cn/)，按照提示完成注册，然后需要进一步通过手机验证_“Identity Verification by Telephone”_，输入电话号码后点击_“call me now”_，稍后Amazon便会有电话拨来，按照提示在电话上输入屏幕上的_“Your PIN：”_给出的四个数字即可。\n\n3.  之后选择_Amazon Support Plan_，这里选择_Basic（Free）_，注册成功后会进入欢迎界面，选择_“启动Aws管理控制台”_。\n\n<span style=\"font-size: 20px;\"></span><span style=\"font-size: 20px;\">2.创建实例（推荐东京节点）</span>\n\n![awsec201.png](/upload/2016/02/201602291456728783308021.png \"201602291456728783308021.png\")\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">选择</span>_Amazon系统映像_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">(AMI)，这里选择</span>_“Ubuntu Server 14.04 LTS”_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">，如下图：</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![QQ截图20160229145350.png](/upload/2016/02/201602291456728851354710.png \"201602291456728851354710.png\")</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">一路下一步到配置安全组（添加一个规则，端口<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">443</span>，也可以自定义，来源<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">任何位置</span>）</span>_\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![blob.png](/upload/2016/02/201602291456728901300663.png \"正在上传...\")</span>\n\n<span style=\"font-family: &#39;Open Sans&#39;; line-height: 26px; color: rgb(255, 0, 0); font-size: 20px; background-color: rgb(255, 255, 255);\">继续步骤创建完成，进入控制面板的弹性ip分配公网地址，绑定刚申请的实例（这步很重要）</span>\n\n<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">![blob.png](/upload/2016/02/201602291456729113103878.png \"正在上传...\")</span>\n\n<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">\n</span>\n\n<span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">3.配置shadowsocks</span>\n\n<span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">\n</span>\n\n_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">登录ssh（</span><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">[ssh使用教程](https://docs.aws.amazon.com/zh_cn/console/ec2/instances/connect/docs)），执行以下命令：</span>_\n<pre class=\"brush:cf;toolbar:false\">1. sudo -s //获取超级管理员权限\n2. apt-get update //更新apt-get\n3. apt-get install python-pip //安装python包管理工具pip\n4. pip install shadowsocks // 安装shadowsocks</pre><pre class=\"brush:cf;toolbar:false\">nano /etc/shadowsocks.json  //配置文件</pre>\n\n_\n_\n\n_添加以下代码：_\n\n_\n_\n<pre class=\"brush:cf;toolbar:false\">{\n    &quot;server&quot;:&quot;0.0.0.0&quot;,\n    &quot;server_port&quot;:在创建实例安全组时添加的端口号（比如443）,\n    &quot;local_address&quot;:&quot;127.0.0.1&quot;,\n    &quot;local_port&quot;:1080,\n    &quot;password&quot;:&quot;连接密码&quot;,\n    &quot;timeout&quot;:300,\n    &quot;method&quot;:&quot;aes-256-cfb&quot;,\n    &quot;fast_open&quot;:false\n}</pre><pre class=\"brush:cf;toolbar:false\">ssserver -c /etc/shadowsocks.json -d start //启动shadowsocks</pre>\n\n<span style=\"font-size: 20px;\">4.shadowsocks客户端下载：</span>\n\n[https://shadowsocks.org/en/index.html](https://shadowsocks.org/en/index.html)\n\n配置截图：\n\n![blob.png](/upload/2016/02/201602291456738265125261.png \"正在上传...\")","slug":"AWS上搭建shadowsocks-免费翻墙","published":1,"updated":"2016-03-18T04:03:44.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyll0008c4ube05j2rl0","content":"<p>hadowsocks类似goagent，是一种快速隧道代理，帮助你绕过防火墙。shadowsocks需要使用自己的服务器，当然选择不同价格的服务器决定了服务的质量:-)<br><a id=\"more\"></a><br>优点：</p>\n<ol>\n<li><p>可以免费：shadowsocks可以利用免费的Aws EC2，公有服务器还是不考虑吧，毕竟时间更宝贵。</p>\n</li>\n<li><p>表现稳定：有过使用goagent的经验，经常会丢包</p>\n</li>\n<li><p>速度较快：还是那句话，一分钱一分货</p>\n</li>\n<li><p>多平台支持：感谢开源，无论Linux，win*，MacOS，iOS，Android平台均可以安装shadowsocks客户端</p>\n</li>\n</ol>\n<p><span style=\"font-size: 20px;\">1.注册</span></p>\n<ol>\n<li><p>注册AWS账号，需要信用卡（淘宝上有1美元账户，或者申请<a href=\"https://www.globalcash.hk/\" target=\"_blank\" rel=\"external\">全球付虚拟信用卡</a>)</p>\n</li>\n<li><p>进入<a href=\"http://aws.amazon.com/cn/\" target=\"_blank\" rel=\"external\">aws主页</a>，按照提示完成注册，然后需要进一步通过手机验证<em>“Identity Verification by Telephone”</em>，输入电话号码后点击<em>“call me now”</em>，稍后Amazon便会有电话拨来，按照提示在电话上输入屏幕上的<em>“Your PIN：”</em>给出的四个数字即可。</p>\n</li>\n<li><p>之后选择<em>Amazon Support Plan</em>，这里选择<em>Basic（Free）</em>，注册成功后会进入欢迎界面，选择<em>“启动Aws管理控制台”</em>。</p>\n</li>\n</ol>\n<p><span style=\"font-size: 20px;\"></span><span style=\"font-size: 20px;\">2.创建实例（推荐东京节点）</span></p>\n<p><img src=\"/upload/2016/02/201602291456728783308021.png\" alt=\"awsec201.png\" title=\"201602291456728783308021.png\"></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">选择</span><em>Amazon系统映像</em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">(AMI)，这里选择</span><em>“Ubuntu Server 14.04 LTS”</em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">，如下图：</span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456728851354710.png\" alt=\"QQ截图20160229145350.png\" title=\"201602291456728851354710.png\"></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">一路下一步到配置安全组（添加一个规则，端口<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">443</span>，也可以自定义，来源<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">任何位置</span>）</span></em></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456728901300663.png\" alt=\"blob.png\" title=\"正在上传...\"></span></p>\n<p><span style=\"font-family: &#39;Open Sans&#39;; line-height: 26px; color: rgb(255, 0, 0); font-size: 20px; background-color: rgb(255, 255, 255);\">继续步骤创建完成，进入控制面板的弹性ip分配公网地址，绑定刚申请的实例（这步很重要）</span></p>\n<p><span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456729113103878.png\" alt=\"blob.png\" title=\"正在上传...\"></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">3.配置shadowsocks</span></p>\n<p><span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p>_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">登录ssh（</span><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><a href=\"https://docs.aws.amazon.com/zh_cn/console/ec2/instances/connect/docs\" target=\"_blank\" rel=\"external\">ssh使用教程</a>），执行以下命令：</span>_</p>\n<pre class=\"brush:cf;toolbar:false\">1. sudo -s //获取超级管理员权限\n2. apt-get update //更新apt-get\n3. apt-get install python-pip //安装python包管理工具pip\n4. pip install shadowsocks // 安装shadowsocks</pre><pre class=\"brush:cf;toolbar:false\">nano /etc/shadowsocks.json  //配置文件</pre>\n\n<p><em>\n</em></p>\n<p><em>添加以下代码：</em></p>\n<p><em>\n</em></p>\n<pre class=\"brush:cf;toolbar:false\">{\n    &quot;server&quot;:&quot;0.0.0.0&quot;,\n    &quot;server_port&quot;:在创建实例安全组时添加的端口号（比如443）,\n    &quot;local_address&quot;:&quot;127.0.0.1&quot;,\n    &quot;local_port&quot;:1080,\n    &quot;password&quot;:&quot;连接密码&quot;,\n    &quot;timeout&quot;:300,\n    &quot;method&quot;:&quot;aes-256-cfb&quot;,\n    &quot;fast_open&quot;:false\n}</pre><pre class=\"brush:cf;toolbar:false\">ssserver -c /etc/shadowsocks.json -d start //启动shadowsocks</pre>\n\n<p><span style=\"font-size: 20px;\">4.shadowsocks客户端下载：</span></p>\n<p><a href=\"https://shadowsocks.org/en/index.html\" target=\"_blank\" rel=\"external\">https://shadowsocks.org/en/index.html</a></p>\n<p>配置截图：</p>\n<p><img src=\"/upload/2016/02/201602291456738265125261.png\" alt=\"blob.png\" title=\"正在上传...\"></p>\n","excerpt":"<p>hadowsocks类似goagent，是一种快速隧道代理，帮助你绕过防火墙。shadowsocks需要使用自己的服务器，当然选择不同价格的服务器决定了服务的质量:-)<br>","more":"<br>优点：</p>\n<ol>\n<li><p>可以免费：shadowsocks可以利用免费的Aws EC2，公有服务器还是不考虑吧，毕竟时间更宝贵。</p>\n</li>\n<li><p>表现稳定：有过使用goagent的经验，经常会丢包</p>\n</li>\n<li><p>速度较快：还是那句话，一分钱一分货</p>\n</li>\n<li><p>多平台支持：感谢开源，无论Linux，win*，MacOS，iOS，Android平台均可以安装shadowsocks客户端</p>\n</li>\n</ol>\n<p><span style=\"font-size: 20px;\">1.注册</span></p>\n<ol>\n<li><p>注册AWS账号，需要信用卡（淘宝上有1美元账户，或者申请<a href=\"https://www.globalcash.hk/\">全球付虚拟信用卡</a>)</p>\n</li>\n<li><p>进入<a href=\"http://aws.amazon.com/cn/\">aws主页</a>，按照提示完成注册，然后需要进一步通过手机验证<em>“Identity Verification by Telephone”</em>，输入电话号码后点击<em>“call me now”</em>，稍后Amazon便会有电话拨来，按照提示在电话上输入屏幕上的<em>“Your PIN：”</em>给出的四个数字即可。</p>\n</li>\n<li><p>之后选择<em>Amazon Support Plan</em>，这里选择<em>Basic（Free）</em>，注册成功后会进入欢迎界面，选择<em>“启动Aws管理控制台”</em>。</p>\n</li>\n</ol>\n<p><span style=\"font-size: 20px;\"></span><span style=\"font-size: 20px;\">2.创建实例（推荐东京节点）</span></p>\n<p><img src=\"/upload/2016/02/201602291456728783308021.png\" alt=\"awsec201.png\" title=\"201602291456728783308021.png\"></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">选择</span><em>Amazon系统映像</em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">(AMI)，这里选择</span><em>“Ubuntu Server 14.04 LTS”</em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">，如下图：</span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456728851354710.png\" alt=\"QQ截图20160229145350.png\" title=\"201602291456728851354710.png\"></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><em><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">一路下一步到配置安全组（添加一个规则，端口<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">443</span>，也可以自定义，来源<span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">任何位置</span>）</span></em></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456728901300663.png\" alt=\"blob.png\" title=\"正在上传...\"></span></p>\n<p><span style=\"font-family: &#39;Open Sans&#39;; line-height: 26px; color: rgb(255, 0, 0); font-size: 20px; background-color: rgb(255, 255, 255);\">继续步骤创建完成，进入控制面板的弹性ip分配公网地址，绑定刚申请的实例（这步很重要）</span></p>\n<p><span style=\"font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><img src=\"/upload/2016/02/201602291456729113103878.png\" alt=\"blob.png\" title=\"正在上传...\"></span></p>\n<p><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p><span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\">3.配置shadowsocks</span></p>\n<p><span style=\"color: rgb(85, 85, 85); line-height: 26px; font-size: 20px; font-family: &#39;Microsoft YaHei&#39;; background-color: rgb(255, 255, 255);\"><br></span></p>\n<p>_<span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\">登录ssh（</span><span style=\"color: rgb(85, 85, 85); font-family: &#39;Open Sans&#39;; font-size: 16px; line-height: 26px; background-color: rgb(255, 255, 255);\"><a href=\"https://docs.aws.amazon.com/zh_cn/console/ec2/instances/connect/docs\">ssh使用教程</a>），执行以下命令：</span>_</p>\n<pre class=\"brush:cf;toolbar:false\">1. sudo -s //获取超级管理员权限\n2. apt-get update //更新apt-get\n3. apt-get install python-pip //安装python包管理工具pip\n4. pip install shadowsocks // 安装shadowsocks</pre><pre class=\"brush:cf;toolbar:false\">nano /etc/shadowsocks.json  //配置文件</pre>\n\n<p><em>\n</em></p>\n<p><em>添加以下代码：</em></p>\n<p><em>\n</em></p>\n<pre class=\"brush:cf;toolbar:false\">{\n    &quot;server&quot;:&quot;0.0.0.0&quot;,\n    &quot;server_port&quot;:在创建实例安全组时添加的端口号（比如443）,\n    &quot;local_address&quot;:&quot;127.0.0.1&quot;,\n    &quot;local_port&quot;:1080,\n    &quot;password&quot;:&quot;连接密码&quot;,\n    &quot;timeout&quot;:300,\n    &quot;method&quot;:&quot;aes-256-cfb&quot;,\n    &quot;fast_open&quot;:false\n}</pre><pre class=\"brush:cf;toolbar:false\">ssserver -c /etc/shadowsocks.json -d start //启动shadowsocks</pre>\n\n<p><span style=\"font-size: 20px;\">4.shadowsocks客户端下载：</span></p>\n<p><a href=\"https://shadowsocks.org/en/index.html\">https://shadowsocks.org/en/index.html</a></p>\n<p>配置截图：</p>\n<p><img src=\"/upload/2016/02/201602291456738265125261.png\" alt=\"blob.png\" title=\"正在上传...\"></p>"},{"title":"Android 的 ORM 数据库框架 DBExecutor","date":"2015-06-17T12:38:37.000Z","_content":"\n<div align=\"left\">**DBExecutor****主要的功能**</div>\n\n<div align=\"left\">**1.使用了读写锁，支持多线程操作数据。**</div><div align=\"left\">**2.支持事务**</div><div align=\"left\">**3.支持ORM****4.缓存Sql，缓存表结构**</div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">这个类库主要用于android 数据库操作。 始终围绕着一个类对应一个表的概念。 只要创建一个实体类，就不用当心它怎么存储在数据库中，不用重新写增删改查的代码。基本的功能已经帮你实现好了。 增删改查数据只要一句搞定</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">\n</span></div><span style=\"color:#008000\">boolean isSuccess = db.insert(person);\nboolean isSuccess = db.updateById(person);\nboolean isSuccess  = db.deleteById(Person.class,1);\nList&lt;Person&gt; persons = db.findAll(Person.class);</span>\n<!-- more -->\n*   ---library_DB02 是项目的源码。\n\n*   ---DBLibrary_TestCase 是项目的测试用例，主要介绍该类库详细的用法\n\n*   ---doc 是网页文档\n\n*   ---db.jar 是该类库的jar包\n\n*   ---doc.chm 是该类库的chm文档\n\n*   ---设计框架.docx 是该类库的uml图生成的图片\n\n*   ---设计框架.mdl 是该类库的uml图，描述整个类库的架构<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">最后非常感谢XUtils代码的作者wyouflf。 该代码是对开源项目XUtils的数据库模块进行重构，及性能优化。 因为他的框架设计的非常合理。很多都是在其基础上完善的。</span></div>**1.定义一个简单对应表的实体类**</div><div align=\"left\"><span style=\"color:#008000\">@Table(name = &quot;Person&quot;)</span>\n<span style=\"color:#008000\">public class Person {\n   @Id(autoIncrement = true)\n   private int id;\n   private String name;\n   private int age;</span></div><div align=\"left\"><span style=\"color:#008000\">\n   public int getId() {\n        return id;\n   }</span>\n\n<span style=\"color:#008000\">   public void setId(int id) {\n        this.id = id;\n   }</span>\n\n<span style=\"color:#008000\">   public String getName() {\n       return name;\n   }</span>\n\n<span style=\"color:#008000\">   public void setName(String name) {\n       this.name = name;\n   }</span>\n\n<span style=\"color:#008000\">   public int getAge() {\n      return age;\n   }</span>\n\n<span style=\"color:#008000\">   public void setAge(int age) {\n     this.age = age;\n   }</span>\n\n<span style=\"color:#008000\"> }</span>\n</div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">必须包含@Id,@Id声明的字段对应表里的id。autoIncrement = true 自增长。 @Table 声明表的名字。@Table可以不需要。如果没有@Table以包名+类名为表的名字</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">支持基本类型以及基本类型的封装类，java.sql.Date 定义的字段。如果要支持其他类型的字段请查看DBLibrary_TestCase中的 TestColumnConverter.java</span></div>**2.主要类**<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**1.DBExecutor主要用于执行sql语句，一个数据库对应一个DBExecutor**</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取默认数据库的执行者 DBExecutor executor = DBExecutor.getInstance(context); </span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取指定的数据库的执行者 DBExecutor.getInstance(dbHelper)</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   主要的方法用 db.execute(sqls)，db.executeQuery(sql)等 封装了简基本的增删改查操作，使用db.insert(person);可以保存一条记录。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   执行sql的时候。不用考虑表是否创建。如果表不存在，会自动创建。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**2.Sql用于DBExecutor 执行的Sql**</span></div><div align=\"left\"><div align=\"left\"><span style=\"color:#333333\">  与sql文本语句是有差别的。 区别在于Sql 里包含</span></div>\n<span style=\"color:rgb(51, 51, 51)\"><div align=\"left\"><span style=\"color:#333333\">  sql.getTable();//操作的表</span></div>\n<div align=\"left\"><span style=\"color:#333333\">  sql.getSqlText();//可以带有?占位符的sql语句</span></div>\n<div align=\"left\"><span style=\"color:#333333\">  sql.getBindValues();//?占位符对应的值。</span></div>\n</span></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">  sql.setCheckTableExit(checkTableExit);//设置执行sql时检查表是否存在，默认为true如果 检查到表不存在自动创建，设置为false 不做检查 </span></div></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   不要害怕复杂，我们可以通过SqlFactory 创建它Sql</span></div></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**3.SqlFactory主要用于创建Sql语句，可以创建复杂增删改查的sql语句。**</span></div>  <span style=\"color:#008000\">// 查询语句  </span></div><div align=\"left\"><span style=\"color:#008000\">  Sql sql = SqlFactory.find(Person.class);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).or(&quot;age&quot;, &quot;=&quot;, 11);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false).limit(1);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;%飞&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;_着_&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;in&quot;, new int[] { 10, 11, 12 });\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;in&quot;, new String[] { &quot;小明&quot;, &quot;小红&quot; });\n  sql = SqlFactory.find(Person.class, &quot;name&quot;, &quot;age&quot;).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);\n  sql = SqlFactory.find(Person.class, &quot;count(*) as num&quot;).where(&quot;age&quot;, &quot;=&quot;, &quot;11&quot;);\n  sql = SqlFactory.find(Person.class, &quot;max(age) as maxAge&quot;, &quot;min(age) as minAge&quot;).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);\n  sql = SqlFactory.find(Person.class, new MaxFunction(&quot;age&quot;, &quot;maxAge&quot;), \nnew MinFunction(&quot;age&quot;, &quot;minAge&quot;)).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;name=? and age=?&quot;, new Object[] { &quot;小明&quot;, 11 });\n\n  // 删除语句\n  sql = SqlFactory.deleteAll(Person.class);\n  sql = SqlFactory.delete(Person.class).where(&quot;age&quot;, &quot;=&quot;, 11);\n  sql = SqlFactory.deleteById(Person.class, 11);\n  sql = SqlFactory.deleteById(Person.class, new int[] { 11, 12 });\n\n  // 更新语句\n  sql = SqlFactory.update(Person.class, new String[] { &quot;name&quot;, &quot;age&quot; }, new Object[] { &quot;小明&quot;, &quot;11&quot; }).where(&quot;id&quot;, &quot;=&quot;, 1);\n  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;), &quot;name&quot;);\n\n  // 如果存在 id为1的记录，就更新，否则 插入一条新记录\n  sql = SqlFactory.updateOrInsertById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n\n  // 插入语句\n  sql = SqlFactory.insert(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n\n  // 自拼接sql语句\n  sql = SqlFactory.makeSql(Person.class, &quot;select * from Person where age = ?&quot;, new Object[] { 11 });</span>\n<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">更多详细信息请查看项目文档里面的内容</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">\n</span></div><div align=\"left\">项目地址 ：[https://github.com/LuckyJayce/DBExecutor](https://github.com/LuckyJayce/DBExecutor)</div></div>","source":"_posts/Android-的-ORM-数据库框架-DBExecutor.md","raw":"---\ntitle: Android 的 ORM 数据库框架 DBExecutor\ncategories:\n- 开源项目\ntags:\n- ORM\n- sqlite\ndate: 2015-06-17 20:38:37\n---\n\n<div align=\"left\">**DBExecutor****主要的功能**</div>\n\n<div align=\"left\">**1.使用了读写锁，支持多线程操作数据。**</div><div align=\"left\">**2.支持事务**</div><div align=\"left\">**3.支持ORM****4.缓存Sql，缓存表结构**</div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">这个类库主要用于android 数据库操作。 始终围绕着一个类对应一个表的概念。 只要创建一个实体类，就不用当心它怎么存储在数据库中，不用重新写增删改查的代码。基本的功能已经帮你实现好了。 增删改查数据只要一句搞定</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">\n</span></div><span style=\"color:#008000\">boolean isSuccess = db.insert(person);\nboolean isSuccess = db.updateById(person);\nboolean isSuccess  = db.deleteById(Person.class,1);\nList&lt;Person&gt; persons = db.findAll(Person.class);</span>\n<!-- more -->\n*   ---library_DB02 是项目的源码。\n\n*   ---DBLibrary_TestCase 是项目的测试用例，主要介绍该类库详细的用法\n\n*   ---doc 是网页文档\n\n*   ---db.jar 是该类库的jar包\n\n*   ---doc.chm 是该类库的chm文档\n\n*   ---设计框架.docx 是该类库的uml图生成的图片\n\n*   ---设计框架.mdl 是该类库的uml图，描述整个类库的架构<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">最后非常感谢XUtils代码的作者wyouflf。 该代码是对开源项目XUtils的数据库模块进行重构，及性能优化。 因为他的框架设计的非常合理。很多都是在其基础上完善的。</span></div>**1.定义一个简单对应表的实体类**</div><div align=\"left\"><span style=\"color:#008000\">@Table(name = &quot;Person&quot;)</span>\n<span style=\"color:#008000\">public class Person {\n   @Id(autoIncrement = true)\n   private int id;\n   private String name;\n   private int age;</span></div><div align=\"left\"><span style=\"color:#008000\">\n   public int getId() {\n        return id;\n   }</span>\n\n<span style=\"color:#008000\">   public void setId(int id) {\n        this.id = id;\n   }</span>\n\n<span style=\"color:#008000\">   public String getName() {\n       return name;\n   }</span>\n\n<span style=\"color:#008000\">   public void setName(String name) {\n       this.name = name;\n   }</span>\n\n<span style=\"color:#008000\">   public int getAge() {\n      return age;\n   }</span>\n\n<span style=\"color:#008000\">   public void setAge(int age) {\n     this.age = age;\n   }</span>\n\n<span style=\"color:#008000\"> }</span>\n</div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">必须包含@Id,@Id声明的字段对应表里的id。autoIncrement = true 自增长。 @Table 声明表的名字。@Table可以不需要。如果没有@Table以包名+类名为表的名字</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">支持基本类型以及基本类型的封装类，java.sql.Date 定义的字段。如果要支持其他类型的字段请查看DBLibrary_TestCase中的 TestColumnConverter.java</span></div>**2.主要类**<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**1.DBExecutor主要用于执行sql语句，一个数据库对应一个DBExecutor**</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取默认数据库的执行者 DBExecutor executor = DBExecutor.getInstance(context); </span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取指定的数据库的执行者 DBExecutor.getInstance(dbHelper)</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   主要的方法用 db.execute(sqls)，db.executeQuery(sql)等 封装了简基本的增删改查操作，使用db.insert(person);可以保存一条记录。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   执行sql的时候。不用考虑表是否创建。如果表不存在，会自动创建。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**2.Sql用于DBExecutor 执行的Sql**</span></div><div align=\"left\"><div align=\"left\"><span style=\"color:#333333\">  与sql文本语句是有差别的。 区别在于Sql 里包含</span></div>\n<span style=\"color:rgb(51, 51, 51)\"><div align=\"left\"><span style=\"color:#333333\">  sql.getTable();//操作的表</span></div>\n<div align=\"left\"><span style=\"color:#333333\">  sql.getSqlText();//可以带有?占位符的sql语句</span></div>\n<div align=\"left\"><span style=\"color:#333333\">  sql.getBindValues();//?占位符对应的值。</span></div>\n</span></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">  sql.setCheckTableExit(checkTableExit);//设置执行sql时检查表是否存在，默认为true如果 检查到表不存在自动创建，设置为false 不做检查 </span></div></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   不要害怕复杂，我们可以通过SqlFactory 创建它Sql</span></div></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">**3.SqlFactory主要用于创建Sql语句，可以创建复杂增删改查的sql语句。**</span></div>  <span style=\"color:#008000\">// 查询语句  </span></div><div align=\"left\"><span style=\"color:#008000\">  Sql sql = SqlFactory.find(Person.class);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).or(&quot;age&quot;, &quot;=&quot;, 11);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false).limit(1);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;%飞&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;_着_&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;in&quot;, new int[] { 10, 11, 12 });\n  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;in&quot;, new String[] { &quot;小明&quot;, &quot;小红&quot; });\n  sql = SqlFactory.find(Person.class, &quot;name&quot;, &quot;age&quot;).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);\n  sql = SqlFactory.find(Person.class, &quot;count(*) as num&quot;).where(&quot;age&quot;, &quot;=&quot;, &quot;11&quot;);\n  sql = SqlFactory.find(Person.class, &quot;max(age) as maxAge&quot;, &quot;min(age) as minAge&quot;).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);\n  sql = SqlFactory.find(Person.class, new MaxFunction(&quot;age&quot;, &quot;maxAge&quot;), \nnew MinFunction(&quot;age&quot;, &quot;minAge&quot;)).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);\n  sql = SqlFactory.find(Person.class).where(&quot;name=? and age=?&quot;, new Object[] { &quot;小明&quot;, 11 });\n\n  // 删除语句\n  sql = SqlFactory.deleteAll(Person.class);\n  sql = SqlFactory.delete(Person.class).where(&quot;age&quot;, &quot;=&quot;, 11);\n  sql = SqlFactory.deleteById(Person.class, 11);\n  sql = SqlFactory.deleteById(Person.class, new int[] { 11, 12 });\n\n  // 更新语句\n  sql = SqlFactory.update(Person.class, new String[] { &quot;name&quot;, &quot;age&quot; }, new Object[] { &quot;小明&quot;, &quot;11&quot; }).where(&quot;id&quot;, &quot;=&quot;, 1);\n  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;), &quot;name&quot;);\n\n  // 如果存在 id为1的记录，就更新，否则 插入一条新记录\n  sql = SqlFactory.updateOrInsertById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n\n  // 插入语句\n  sql = SqlFactory.insert(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));\n\n  // 自拼接sql语句\n  sql = SqlFactory.makeSql(Person.class, &quot;select * from Person where age = ?&quot;, new Object[] { 11 });</span>\n<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">更多详细信息请查看项目文档里面的内容</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">\n</span></div><div align=\"left\">项目地址 ：[https://github.com/LuckyJayce/DBExecutor](https://github.com/LuckyJayce/DBExecutor)</div></div>","slug":"Android-的-ORM-数据库框架-DBExecutor","published":1,"updated":"2016-03-18T04:02:07.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylp000bc4ubs1g9an0o","content":"<div align=\"left\"><strong>DBExecutor**</strong>主要的功能**</div>\n\n<div align=\"left\"><strong>1.使用了读写锁，支持多线程操作数据。</strong></div><div align=\"left\"><strong>2.支持事务</strong></div><div align=\"left\"><strong>3.支持ORM**</strong>4.缓存Sql，缓存表结构<strong></strong></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">这个类库主要用于android 数据库操作。 始终围绕着一个类对应一个表的概念。 只要创建一个实体类，就不用当心它怎么存储在数据库中，不用重新写增删改查的代码。基本的功能已经帮你实现好了。 增删改查数据只要一句搞定</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"><br></span></div><span style=\"color:#008000\">boolean isSuccess = db.insert(person);<br>boolean isSuccess = db.updateById(person);<br>boolean isSuccess  = db.deleteById(Person.class,1);<br>List&lt;Person&gt; persons = db.findAll(Person.class);</span><br><a id=\"more\"></a><br><em>   —library_DB02 是项目的源码。\n\n</em>   —DBLibrary_TestCase 是项目的测试用例，主要介绍该类库详细的用法<br><br><em>   —doc 是网页文档\n\n</em>   —db.jar 是该类库的jar包<br><br><em>   —doc.chm 是该类库的chm文档\n\n</em>   —设计框架.docx 是该类库的uml图生成的图片<br><br>*   —设计框架.mdl 是该类库的uml图，描述整个类库的架构<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">最后非常感谢XUtils代码的作者wyouflf。 该代码是对开源项目XUtils的数据库模块进行重构，及性能优化。 因为他的框架设计的非常合理。很多都是在其基础上完善的。</span></div>1.定义一个简单对应表的实体类<strong></strong></div><div align=\"left\"><span style=\"color:#008000\">@Table(name = &quot;Person&quot;)</span><br><span style=\"color:#008000\">public class Person {<br>   @Id(autoIncrement = true)<br>   private int id;<br>   private String name;<br>   private int age;</span></div><div align=\"left\"><span style=\"color:#008000\"><br>   public int getId() {<br>        return id;<br>   }</span><br><br><span style=\"color:#008000\">   public void setId(int id) {<br>        this.id = id;<br>   }</span><br><br><span style=\"color:#008000\">   public String getName() {<br>       return name;<br>   }</span><br><br><span style=\"color:#008000\">   public void setName(String name) {<br>       this.name = name;<br>   }</span><br><br><span style=\"color:#008000\">   public int getAge() {<br>      return age;<br>   }</span><br><br><span style=\"color:#008000\">   public void setAge(int age) {<br>     this.age = age;<br>   }</span><br><br><span style=\"color:#008000\"> }</span><br></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">必须包含@Id,@Id声明的字段对应表里的id。autoIncrement = true 自增长。 @Table 声明表的名字。@Table可以不需要。如果没有@Table以包名+类名为表的名字</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">支持基本类型以及基本类型的封装类，java.sql.Date 定义的字段。如果要支持其他类型的字段请查看DBLibrary_TestCase中的 TestColumnConverter.java</span></div>2.主要类<strong><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"></span></div></strong>1.DBExecutor主要用于执行sql语句，一个数据库对应一个DBExecutor<strong></strong></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取默认数据库的执行者 DBExecutor executor = DBExecutor.getInstance(context); </span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取指定的数据库的执行者 DBExecutor.getInstance(dbHelper)</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   主要的方法用 db.execute(sqls)，db.executeQuery(sql)等 封装了简基本的增删改查操作，使用db.insert(person);可以保存一条记录。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   执行sql的时候。不用考虑表是否创建。如果表不存在，会自动创建。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">2.Sql用于DBExecutor 执行的Sql<strong></strong></span></div><div align=\"left\"><div align=\"left\"><span style=\"color:#333333\">  与sql文本语句是有差别的。 区别在于Sql 里包含</span></div><br><span style=\"color:rgb(51, 51, 51)\"><div align=\"left\"><span style=\"color:#333333\">  sql.getTable();//操作的表</span></div><br><div align=\"left\"><span style=\"color:#333333\">  sql.getSqlText();//可以带有?占位符的sql语句</span></div><br><div align=\"left\"><span style=\"color:#333333\">  sql.getBindValues();//?占位符对应的值。</span></div><br></span></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">  sql.setCheckTableExit(checkTableExit);//设置执行sql时检查表是否存在，默认为true如果 检查到表不存在自动创建，设置为false 不做检查 </span></div></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   不要害怕复杂，我们可以通过SqlFactory 创建它Sql</span></div></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">3.SqlFactory主要用于创建Sql语句，可以创建复杂增删改查的sql语句。<em>*</em></span></div>  <span style=\"color:#008000\">// 查询语句  </span><div align=\"left\"><span style=\"color:#008000\">  Sql sql = SqlFactory.find(Person.class);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).or(&quot;age&quot;, &quot;=&quot;, 11);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false).limit(1);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;%飞&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;<em>着</em>&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;in&quot;, new int[] { 10, 11, 12 });<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;in&quot;, new String[] { &quot;小明&quot;, &quot;小红&quot; });<br>  sql = SqlFactory.find(Person.class, &quot;name&quot;, &quot;age&quot;).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);<br>  sql = SqlFactory.find(Person.class, &quot;count() as num&quot;).where(&quot;age&quot;, &quot;=&quot;, &quot;11&quot;);<br>  sql = SqlFactory.find(Person.class, &quot;max(age) as maxAge&quot;, &quot;min(age) as minAge&quot;).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);<br>  sql = SqlFactory.find(Person.class, new MaxFunction(&quot;age&quot;, &quot;maxAge&quot;),<br>new MinFunction(&quot;age&quot;, &quot;minAge&quot;)).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;name=? and age=?&quot;, new Object[] { &quot;小明&quot;, 11 });<br><br>  // 删除语句<br>  sql = SqlFactory.deleteAll(Person.class);<br>  sql = SqlFactory.delete(Person.class).where(&quot;age&quot;, &quot;=&quot;, 11);<br>  sql = SqlFactory.deleteById(Person.class, 11);<br>  sql = SqlFactory.deleteById(Person.class, new int[] { 11, 12 });<br><br>  // 更新语句<br>  sql = SqlFactory.update(Person.class, new String[] { &quot;name&quot;, &quot;age&quot; }, new Object[] { &quot;小明&quot;, &quot;11&quot; }).where(&quot;id&quot;, &quot;=&quot;, 1);<br>  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br>  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;), &quot;name&quot;);<br><br>  // 如果存在 id为1的记录，就更新，否则 插入一条新记录<br>  sql = SqlFactory.updateOrInsertById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br><br>  // 插入语句<br>  sql = SqlFactory.insert(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br><br>  // 自拼接sql语句<br>  sql = SqlFactory.makeSql(Person.class, &quot;select * from Person where age = ?&quot;, new Object[] { 11 });</span><br><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">更多详细信息请查看项目文档里面的内容</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"><br></span></div><div align=\"left\">项目地址 ：<a href=\"https://github.com/LuckyJayce/DBExecutor\" target=\"_blank\" rel=\"external\">https://github.com/LuckyJayce/DBExecutor</a></div></div>","excerpt":"<div align=\"left\"><strong>DBExecutor**</strong>主要的功能**</div>\n\n<div align=\"left\"><strong>1.使用了读写锁，支持多线程操作数据。</strong></div><div align=\"left\"><strong>2.支持事务</strong></div><div align=\"left\"><strong>3.支持ORM**</strong>4.缓存Sql，缓存表结构<strong></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">这个类库主要用于android 数据库操作。 始终围绕着一个类对应一个表的概念。 只要创建一个实体类，就不用当心它怎么存储在数据库中，不用重新写增删改查的代码。基本的功能已经帮你实现好了。 增删改查数据只要一句搞定</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"><br></span></div><span style=\"color:#008000\">boolean isSuccess = db.insert(person);<br>boolean isSuccess = db.updateById(person);<br>boolean isSuccess  = db.deleteById(Person.class,1);<br>List&lt;Person&gt; persons = db.findAll(Person.class);</span><br>","more":"<br><em>   —library_DB02 是项目的源码。\n\n</em>   —DBLibrary_TestCase 是项目的测试用例，主要介绍该类库详细的用法<br><br><em>   —doc 是网页文档\n\n</em>   —db.jar 是该类库的jar包<br><br><em>   —doc.chm 是该类库的chm文档\n\n</em>   —设计框架.docx 是该类库的uml图生成的图片<br><br>*   —设计框架.mdl 是该类库的uml图，描述整个类库的架构<div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">最后非常感谢XUtils代码的作者wyouflf。 该代码是对开源项目XUtils的数据库模块进行重构，及性能优化。 因为他的框架设计的非常合理。很多都是在其基础上完善的。</span></div></strong>1.定义一个简单对应表的实体类<strong></div><div align=\"left\"><span style=\"color:#008000\">@Table(name = &quot;Person&quot;)</span><br><span style=\"color:#008000\">public class Person {<br>   @Id(autoIncrement = true)<br>   private int id;<br>   private String name;<br>   private int age;</span></div><div align=\"left\"><span style=\"color:#008000\"><br>   public int getId() {<br>        return id;<br>   }</span><br><br><span style=\"color:#008000\">   public void setId(int id) {<br>        this.id = id;<br>   }</span><br><br><span style=\"color:#008000\">   public String getName() {<br>       return name;<br>   }</span><br><br><span style=\"color:#008000\">   public void setName(String name) {<br>       this.name = name;<br>   }</span><br><br><span style=\"color:#008000\">   public int getAge() {<br>      return age;<br>   }</span><br><br><span style=\"color:#008000\">   public void setAge(int age) {<br>     this.age = age;<br>   }</span><br><br><span style=\"color:#008000\"> }</span><br></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">必须包含@Id,@Id声明的字段对应表里的id。autoIncrement = true 自增长。 @Table 声明表的名字。@Table可以不需要。如果没有@Table以包名+类名为表的名字</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">支持基本类型以及基本类型的封装类，java.sql.Date 定义的字段。如果要支持其他类型的字段请查看DBLibrary_TestCase中的 TestColumnConverter.java</span></div></strong>2.主要类<strong><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"></strong>1.DBExecutor主要用于执行sql语句，一个数据库对应一个DBExecutor<strong></span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取默认数据库的执行者 DBExecutor executor = DBExecutor.getInstance(context); </span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   获取指定的数据库的执行者 DBExecutor.getInstance(dbHelper)</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   主要的方法用 db.execute(sqls)，db.executeQuery(sql)等 封装了简基本的增删改查操作，使用db.insert(person);可以保存一条记录。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   执行sql的时候。不用考虑表是否创建。如果表不存在，会自动创建。</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"></strong>2.Sql用于DBExecutor 执行的Sql<strong></span></div><div align=\"left\"><div align=\"left\"><span style=\"color:#333333\">  与sql文本语句是有差别的。 区别在于Sql 里包含</span></div><br><span style=\"color:rgb(51, 51, 51)\"><div align=\"left\"><span style=\"color:#333333\">  sql.getTable();//操作的表</span></div><br><div align=\"left\"><span style=\"color:#333333\">  sql.getSqlText();//可以带有?占位符的sql语句</span></div><br><div align=\"left\"><span style=\"color:#333333\">  sql.getBindValues();//?占位符对应的值。</span></div><br></span></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">  sql.setCheckTableExit(checkTableExit);//设置执行sql时检查表是否存在，默认为true如果 检查到表不存在自动创建，设置为false 不做检查 </span></div></div><div align=\"left\"><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">   不要害怕复杂，我们可以通过SqlFactory 创建它Sql</span></div></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"></strong>3.SqlFactory主要用于创建Sql语句，可以创建复杂增删改查的sql语句。<em>*</span></div>  <span style=\"color:#008000\">// 查询语句  </span></div><div align=\"left\"><span style=\"color:#008000\">  Sql sql = SqlFactory.find(Person.class);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).or(&quot;age&quot;, &quot;=&quot;, 11);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;=&quot;, &quot;10&quot;).orderBy(&quot;name&quot;, false).limit(1);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;%飞&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;like&quot;, &quot;<em>着</em>&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;age&quot;, &quot;in&quot;, new int[] { 10, 11, 12 });<br>  sql = SqlFactory.find(Person.class).where(&quot;name&quot;, &quot;in&quot;, new String[] { &quot;小明&quot;, &quot;小红&quot; });<br>  sql = SqlFactory.find(Person.class, &quot;name&quot;, &quot;age&quot;).where(&quot;name&quot;, &quot;=&quot;, &quot;试着飞&quot;);<br>  sql = SqlFactory.find(Person.class, &quot;count(</em>) as num&quot;).where(&quot;age&quot;, &quot;=&quot;, &quot;11&quot;);<br>  sql = SqlFactory.find(Person.class, &quot;max(age) as maxAge&quot;, &quot;min(age) as minAge&quot;).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);<br>  sql = SqlFactory.find(Person.class, new MaxFunction(&quot;age&quot;, &quot;maxAge&quot;),<br>new MinFunction(&quot;age&quot;, &quot;minAge&quot;)).where(&quot;sex&quot;, &quot;=&quot;, &quot;男&quot;);<br>  sql = SqlFactory.find(Person.class).where(&quot;name=? and age=?&quot;, new Object[] { &quot;小明&quot;, 11 });<br><br>  // 删除语句<br>  sql = SqlFactory.deleteAll(Person.class);<br>  sql = SqlFactory.delete(Person.class).where(&quot;age&quot;, &quot;=&quot;, 11);<br>  sql = SqlFactory.deleteById(Person.class, 11);<br>  sql = SqlFactory.deleteById(Person.class, new int[] { 11, 12 });<br><br>  // 更新语句<br>  sql = SqlFactory.update(Person.class, new String[] { &quot;name&quot;, &quot;age&quot; }, new Object[] { &quot;小明&quot;, &quot;11&quot; }).where(&quot;id&quot;, &quot;=&quot;, 1);<br>  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br>  sql = SqlFactory.updateById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;), &quot;name&quot;);<br><br>  // 如果存在 id为1的记录，就更新，否则 插入一条新记录<br>  sql = SqlFactory.updateOrInsertById(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br><br>  // 插入语句<br>  sql = SqlFactory.insert(new Person(1, &quot;小明&quot;, 11, &quot;男&quot;));<br><br>  // 自拼接sql语句<br>  sql = SqlFactory.makeSql(Person.class, &quot;select * from Person where age = ?&quot;, new Object[] { 11 });</span><br><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\">更多详细信息请查看项目文档里面的内容</span></div><div align=\"left\"><span style=\"color:rgb(51, 51, 51)\"><br></span></div><div align=\"left\">项目地址 ：<a href=\"https://github.com/LuckyJayce/DBExecutor\">https://github.com/LuckyJayce/DBExecutor</a></div></div>"},{"title":"Android 打造高效的图片加载框架","date":"2015-07-23T08:57:43.000Z","_content":"\n# 1、概述\n\n优秀的图片加载框架不要太多，什么UIL , Volley \n,Picasso,Imageloader等等。但是作为一名合格的程序猿，必须懂其中的实现原理，于是乎，今天我就带大家一起来设计一个加载网络、本地\n的图片框架。有人可能会说，自己写会不会很渣，运行效率，内存溢出神马的。放心，我们拿demo说话，拼得就是速度，奏事这么任性。\n<!-- more -->\n好了，如果你看过之前的博文，类似Android\n Handler 异步消息处理机制的妙用 创建强大的图片加载类，可能会对接下来文章理解会有很大的帮助。没有的话，就跟我往下继续走吧，也不要去看了。\n\n关于加载本地图片，当然了，我手机图片比较少，7000来张：\n\n1、首先肯定不能内存溢出，但是尼玛现在像素那么高，怎么才能保证呢？我相信利用LruCache统一管理你的图片是个不二的选择，所有的图片从LruCache里面取，保证所有的图片的内存不会超过预设的空间。\n\n2、加载速度要刚刚的，我一用力，滑动到3000张的位置，你要是还在从第一张给我加载，尼玛，你以为我打dota呢。所以我们需要引入加载策略，我们不能FIFO，我们选择LIFO，当前呈现给用户的，最新加载；当前未呈现的，选择加载。\n\n3、使用方便。一般图片都会使用GridView作为控件，在getView里面进行图片加载，当然了为了不错乱，可能还需要用户去自己setTag，自\n己写回调设置图片。当然了，我们不需要这么麻烦，一句话IoadImage(imageview,path）即可，剩下的请交给我们的图片加载框架处理。\n\n做到以上几点，关于本地的图片加载应该就木有什么问题了。\n\n关于加载网络图片，其实原理差不多，就多了个是否启用硬盘缓存的选项，如果启用了，加载时，先从内存中查找，然后从硬盘上找，最后去网络下载。下载完成后，别忘了写入硬盘，加入内存缓存。如果没有启用，那么就直接从网络压缩获取，加入内存即可。\n\n# <a name=\"t1\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t1\"></a>2、效果图\n\n终于扯完了，接下来，简单看个效果图，关于加载本地图片的效果图：可以从Android\n 超高仿微信图片选择器 图片该这么加载这篇博客中下载Demo运行。\n\n下面演示一个网络加载图片的例子:\n\n![20141211214442177.gif](/upload/2015/07/201507231437642603106757.gif \"201507231437642603106757.gif\")\n\n80多张从网络加载的图片，可以看到我直接拖到最后，基本是呈现在用户眼前的最先加载，要是从第一张到80多，估计也是醉了。\n\n此外：图片来自老郭的博客，感谢！！！ps:如果你觉得图片不劲爆，Day Day Up找老郭去。\n\n# 3、完全解析\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n## 1、关于图片的压缩\n\n不管是从网络还是本地的图片，加载都需要进行压缩，然后显示：\n\n用户要你压缩显示，会给我们什么？一个imageview，一个path，我们的职责就是压缩完成后显示上去。\n\n### 1、本地图片的压缩\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n**a、获得imageview想要显示的大小**\n\n想要压缩，我们第一步应该是获得imageview想要显示的大小，没大小肯定没办法压缩？\n\n那么如何获得imageview想要显示的大小呢？\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据ImageView获适当的压缩的宽和高 \n         *  \n         * @param imageView \n         * @return \n         */  \n        public static ImageSize getImageViewSize(ImageView imageView)  \n        {  \n      \n            ImageSize imageSize = new ImageSize();  \n            DisplayMetrics displayMetrics = imageView.getContext().getResources()  \n                    .getDisplayMetrics();  \n      \n            LayoutParams lp = imageView.getLayoutParams();  \n      \n            int width = imageView.getWidth();// 获取imageview的实际宽度  \n            if (width &lt;= 0)  \n            {  \n                width = lp.width;// 获取imageview在layout中声明的宽度  \n            }  \n            if (width &lt;= 0)  \n            {  \n                // width = imageView.getMaxWidth();// 检查最大值  \n                width = getImageViewFieldValue(imageView, &quot;mMaxWidth&quot;);  \n            }  \n            if (width &lt;= 0)  \n            {  \n                width = displayMetrics.widthPixels;  \n            }  \n      \n            int height = imageView.getHeight();// 获取imageview的实际高度  \n            if (height &lt;= 0)  \n            {  \n                height = lp.height;// 获取imageview在layout中声明的宽度  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = getImageViewFieldValue(imageView, &quot;mMaxHeight&quot;);// 检查最大值  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = displayMetrics.heightPixels;  \n            }  \n            imageSize.width = width;  \n            imageSize.height = height;  \n      \n            return imageSize;  \n        }  \n      \n        public static class ImageSize  \n        {  \n            int width;  \n            int height;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，我们拿到imageview以后：</span>\n\n首先企图通过getWidth获取显示的宽；有些时候，这个getWidth返回的是0；\n\n那么我们再去看看它有没有在布局文件中书写宽；\n\n如果布局文件中也没有精确值，那么我们再去看看它有没有设置最大值；\n\n如果最大值也没设置，那么我们只有拿出我们的终极方案，使用我们的屏幕宽度；\n\n总之，不能让它任性，我们一定要拿到一个合适的显示值。\n\n可以看到这里或者最大宽度，我们用的反射，而不是getMaxWidth()；维萨呢，因为getMaxWidth竟然要API 16，我也是醉了；为了兼容性，我们采用反射的方案。反射的代码就不贴了。\n\n**b、设置合适的inSampleSize**\n\n我们获得想要显示的大小，为了什么，还不是为了和图片的真正的宽高做比较，拿到一个合适的inSampleSize，去对图片进行压缩么。\n\n那么首先应该是拿到图片的宽和高：\n<pre class=\"brush:java;toolbar:false\"> // 获得图片的宽和高，并不把图片加载到内存中  \n        BitmapFactory.Options options = new BitmapFactory.Options();  \n        options.inJustDecodeBounds = true;  \n        BitmapFactory.decodeFile(path, options);</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这三行就成功获取图片真正的宽和高了，存在我们的options里面；</span>\n\n然后我们就可以happy的去计算inSampleSize了：\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据需求的宽和高以及图片实际的宽和高计算SampleSize \n         *  \n         * @param options \n         * @param width \n         * @param height \n         * @return \n         */  \n        public static int caculateInSampleSize(Options options, int reqWidth,  \n                int reqHeight)  \n        {  \n            int width = options.outWidth;  \n            int height = options.outHeight;  \n      \n            int inSampleSize = 1;  \n      \n            if (width &gt; reqWidth || height &gt; reqHeight)  \n            {  \n                int widthRadio = Math.round(width * 1.0f / reqWidth);  \n                int heightRadio = Math.round(height * 1.0f / reqHeight);  \n      \n                inSampleSize = Math.max(widthRadio, heightRadio);  \n            }  \n      \n            return inSampleSize;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">options里面存了实际的宽和高；reqWidth和reqHeight就是我们之前得到的想要显示的大小；经过比较，得到一个合适的inSampleSize;</span>\n\n有了inSampleSize:\n<pre class=\"brush:java;toolbar:false\">    options.inSampleSize = ImageSizeUtil.caculateInSampleSize(options,  \n                    width, height);  \n      \n            // 使用获得到的InSampleSize再次解析图片  \n            options.inJustDecodeBounds = false;  \n            Bitmap bitmap = BitmapFactory.decodeFile(path, options);  \n            return bitmap;</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">经过这几行，就完成图片的压缩了。</span>\n\n上述是本地图片的压缩，那么如果是网络图片呢？\n\n### 2、网络图片的压缩\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n**a、直接下载存到sd卡，然后采用本地的压缩方案。这种方式当前是在硬盘缓存开启的情况下，如果没有开启呢？**\n\n**b、使用BitmapFactory.decodeStream(is, null, opts);**\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据url下载图片在指定的文件 \n         *  \n         * @param urlStr \n         * @param file \n         * @return \n         */  \n        public static Bitmap downloadImgByUrl(String urlStr, ImageView imageview)  \n        {  \n            FileOutputStream fos = null;  \n            InputStream is = null;  \n            try  \n            {  \n                URL url = new URL(urlStr);  \n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();  \n                is = new BufferedInputStream(conn.getInputStream());  \n                is.mark(is.available());  \n                  \n                Options opts = new Options();  \n                opts.inJustDecodeBounds = true;  \n                Bitmap bitmap = BitmapFactory.decodeStream(is, null, opts);  \n                  \n                //获取imageview想要显示的宽和高  \n                ImageSize imageViewSize = ImageSizeUtil.getImageViewSize(imageview);  \n                opts.inSampleSize = ImageSizeUtil.caculateInSampleSize(opts,  \n                        imageViewSize.width, imageViewSize.height);  \n                  \n                opts.inJustDecodeBounds = false;  \n                is.reset();  \n                bitmap = BitmapFactory.decodeStream(is, null, opts);  \n      \n                conn.disconnect();  \n                return bitmap;  \n      \n            } catch (Exception e)  \n            {  \n                e.printStackTrace();  \n            } finally  \n            {  \n                try  \n                {  \n                    if (is != null)  \n                        is.close();  \n                } catch (IOException e)  \n                {  \n                }  \n      \n                try  \n                {  \n                    if (fos != null)  \n                        fos.close();  \n                } catch (IOException e)  \n                {  \n                }  \n            }  \n      \n            return null;  \n      \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">基本和本地压缩差不多，也是两次取样，当然需要注意一点，我们的is进行了包装，以便可以进行reset()；直接返回的is是不能使用两次的。</span>\n\n到此，图片压缩说完了。\n\n## <a name=\"t6\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t6\"></a>2、图片加载框架的架构\n\n我们的图片压缩加载完了，那么就应该放入我们的LruCache，然后设置到我们的ImageView上。\n\n好了，接下来我们来说说我们的这个框架的架构；\n\n1、单例，包含一个LruCache用于管理我们的图片；\n\n2、任务队列，我们每来一次加载图片的请求，我们会封装成Task存入我们的TaskQueue;\n\n3、包含一个后台线程，这个线程在第一次初始化实例的时候启动，然后会一直在后台运行；任务呢？还记得我们有个任务队列么，有队列存任务，得有人干活呀；\n所以，当每来一次加载图片请求的时候，我们同时发一个消息到后台线程，后台线程去使用线程池去TaskQueue去取一个任务执行；\n\n4、调度策略；3中说了，后台线程去TaskQueue去取一个任务，这个任务不是随便取的，有策略可以选择，一个是FIFO，一个是LIFO，我倾向于后者。\n\n好了，基本就这些结构，接下来看我们具体的实现。\n\n# <a name=\"t7\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t7\"></a>3、具体的实现\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n## <a name=\"t8\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t8\"></a>1、构造方法\n<pre class=\"brush:java;toolbar:false\">    public static ImageLoader getInstance(int threadCount, Type type)  \n        {  \n            if (mInstance == null)  \n            {  \n                synchronized (ImageLoader.class)  \n                {  \n                    if (mInstance == null)  \n                    {  \n                        mInstance = new ImageLoader(threadCount, type);  \n                    }  \n                }  \n            }  \n            return mInstance;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这个就不用说了，重点看我们的构造方法</span>\n\n<pre class=\"brush:java;toolbar:false\">  /** \n     * 图片加载类 \n     *  \n     * @author zhy \n     *  \n     */  \n    public class ImageLoader  \n    {  \n        private static ImageLoader mInstance;  \n      \n        /** \n         * 图片缓存的核心对象 \n         */  \n        private LruCache&lt;String, Bitmap&gt; mLruCache;  \n        /** \n         * 线程池 \n         */  \n        private ExecutorService mThreadPool;  \n        private static final int DEAFULT_THREAD_COUNT = 1;  \n        /** \n         * 队列的调度方式 \n         */  \n        private Type mType = Type.LIFO;  \n        /** \n         * 任务队列 \n         */  \n        private LinkedList&lt;Runnable&gt; mTaskQueue;  \n        /** \n         * 后台轮询线程 \n         */  \n        private Thread mPoolThread;  \n        private Handler mPoolThreadHandler;  \n        /** \n         * UI线程中的Handler \n         */  \n        private Handler mUIHandler;  \n      \n        private Semaphore mSemaphorePoolThreadHandler = new Semaphore(0);  \n        private Semaphore mSemaphoreThreadPool;  \n      \n        private boolean isDiskCacheEnable = true;  \n      \n        private static final String TAG = &quot;ImageLoader&quot;;  \n      \n        public enum Type  \n        {  \n            FIFO, LIFO;  \n        }  \n      \n        private ImageLoader(int threadCount, Type type)  \n        {  \n            init(threadCount, type);  \n        }  \n      \n        /** \n         * 初始化 \n         *  \n         * @param threadCount \n         * @param type \n         */  \n        private void init(int threadCount, Type type)  \n        {  \n            initBackThread();  \n      \n            // 获取我们应用的最大可用内存  \n            int maxMemory = (int) Runtime.getRuntime().maxMemory();  \n            int cacheMemory = maxMemory / 8;  \n            mLruCache = new LruCache&lt;String, Bitmap&gt;(cacheMemory)  \n            {  \n                @Override  \n                protected int sizeOf(String key, Bitmap value)  \n                {  \n                    return value.getRowBytes() * value.getHeight();  \n                }  \n      \n            };  \n      \n            // 创建线程池  \n            mThreadPool = Executors.newFixedThreadPool(threadCount);  \n            mTaskQueue = new LinkedList&lt;Runnable&gt;();  \n            mType = type;  \n            mSemaphoreThreadPool = new Semaphore(threadCount);  \n        }  \n      \n        /** \n         * 初始化后台轮询线程 \n         */  \n        private void initBackThread()  \n        {  \n            // 后台轮询线程  \n            mPoolThread = new Thread()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Looper.prepare();  \n                    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());  \n                            try  \n                            {  \n                                mSemaphoreThreadPool.acquire();  \n                            } catch (InterruptedException e)  \n                            {  \n                            }  \n                        }  \n                    };  \n                    // 释放一个信号量  \n                    mSemaphorePoolThreadHandler.release();  \n                    Looper.loop();  \n                };  \n            };  \n      \n            mPoolThread.start();  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">在贴构造的时候，顺便贴出所有的成员变量；</span>\n\n在构造中我们调用init，init中可以设置后台加载图片线程数量和加载策略；init中首先初始化后台线程initBackThread(),可以看\n到这个后台线程，实际上是个Looper最终在那不断的loop，我们还初始化了一个mPoolThreadHandler用于发送消息到此线程；\n\n接下来就是初始化mLruCache  ， mThreadPool ，mTaskQueue 等；\n\n## <a name=\"t9\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t9\"></a>2、loadImage\n\n构造完成以后，当然是使用了，用户调用loadImage传入(final String path, final ImageView imageView,final boolean isFromNet)就可以完成本地或者网络图片的加载。\n<pre class=\"brush:java;toolbar:false\"> /** \n         * 根据path为imageview设置图片 \n         *  \n         * @param path \n         * @param imageView \n         */  \n        public void loadImage(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            imageView.setTag(path);  \n            if (mUIHandler == null)  \n            {  \n                mUIHandler = new Handler()  \n                {  \n                    public void handleMessage(Message msg)  \n                    {  \n                        // 获取得到图片，为imageview回调设置图片  \n                        ImgBeanHolder holder = (ImgBeanHolder) msg.obj;  \n                        Bitmap bm = holder.bitmap;  \n                        ImageView imageview = holder.imageView;  \n                        String path = holder.path;  \n                        // 将path与getTag存储路径进行比较  \n                        if (imageview.getTag().toString().equals(path))  \n                        {  \n                            imageview.setImageBitmap(bm);  \n                        }  \n                    };  \n                };  \n            }  \n      \n            // 根据path在缓存中获取bitmap  \n            Bitmap bm = getBitmapFromLruCache(path);  \n      \n            if (bm != null)  \n            {  \n                refreashBitmap(path, imageView, bm);  \n            } else  \n            {  \n                addTask(buildTask(path, imageView, isFromNet));  \n            }  \n      \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">首先我们为imageview.setTag；然后初始化一个mUIHandler，不用猜，这个mUIHandler用户更新我们的imageview，因为这个方法肯定是主线程调用的。</span>\n\n然后调用：getBitmapFromLruCache(path);根据path在缓存中获取bitmap；如果找到那么直接去设置我们的图片；\n<pre class=\"brush:java;toolbar:false\"> private void refreashBitmap(final String path, final ImageView imageView,  \n            Bitmap bm)  \n    {  \n        Message message = Message.obtain();  \n        ImgBeanHolder holder = new ImgBeanHolder();  \n        holder.bitmap = bm;  \n        holder.path = path;  \n        holder.imageView = imageView;  \n        message.obj = holder;  \n        mUIHandler.sendMessage(message);  \n    }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，如果找到图片，则直接使用UIHandler去发送一个消息，当然了携带了一些必要的参数，然后UIHandler的handleMessage中完成图片的设置；</span>\n\nhandleMessage中拿到path,bitmap,imageview；记得必须要：\n\n// 将path与getTag存储路径进行比较\n<span style=\"white-space:pre\"></span>\n<pre class=\"brush:java;toolbar:false\">if (imageview.getTag().toString().equals(path))\n{\nimageview.setImageBitmap(bm);\n}</pre>\n\n否则会造成图片混乱。\n\n如果没找到，则通过buildTask去新建一个任务，在addTask到任务队列。\n\nbuildTask就比较复杂了，因为还涉及到本地和网络，所以我们先看addTask代码：\n<pre class=\"brush:java;toolbar:false\"> private synchronized void addTask(Runnable runnable)  \n        {  \n            mTaskQueue.add(runnable);  \n            // if(mPoolThreadHandler==null)wait();  \n            try  \n            {  \n                if (mPoolThreadHandler == null)  \n                    mSemaphorePoolThreadHandler.acquire();  \n            } catch (InterruptedException e)  \n            {  \n            }  \n            mPoolThreadHandler.sendEmptyMessage(0x110);  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">很简单，就是runnable加入TaskQueue，与此同时使用mPoolThreadHandler（这个handler还记得么，用于和我们后台线程交互。）去发送一个消息给后台线程，叫它去取出一个任务执行；具体代码：</span>\n<pre class=\"brush:java;toolbar:false\">    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">直接使用mThreadPool线程池，然后使用getTask去取一个任务。</span>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 从任务队列取出一个方法 \n         *  \n         * @return \n         */  \n        private Runnable getTask()  \n        {  \n            if (mType == Type.FIFO)  \n            {  \n                return mTaskQueue.removeFirst();  \n            } else if (mType == Type.LIFO)  \n            {  \n                return mTaskQueue.removeLast();  \n            }  \n            return null;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">getTask代码也比较简单，就是根据Type从任务队列头或者尾进行取任务。</span>\n\n现在你会不会好奇，任务里面到底什么代码？其实我们也就剩最后一段代码了buildTask\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据传入的参数，新建一个任务 \n         *  \n         * @param path \n         * @param imageView \n         * @param isFromNet \n         * @return \n         */  \n        private Runnable buildTask(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            return new Runnable()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Bitmap bm = null;  \n                    if (isFromNet)  \n                    {  \n                        File file = getDiskCacheDir(imageView.getContext(),  \n                                md5(path));  \n                        if (file.exists())// 如果在缓存文件中发现  \n                        {  \n                            Log.e(TAG, &quot;find image :&quot; + path + &quot; in disk cache .&quot;);  \n                            bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                    imageView);  \n                        } else  \n                        {  \n                            if (isDiskCacheEnable)// 检测是否开启硬盘缓存  \n                            {  \n                                boolean downloadState = DownloadImgUtils  \n                                        .downloadImgByUrl(path, file);  \n                                if (downloadState)// 如果下载成功  \n                                {  \n                                    Log.e(TAG,  \n                                            &quot;download image :&quot; + path  \n                                                    + &quot; to disk cache . path is &quot;  \n                                                    + file.getAbsolutePath());  \n                                    bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                            imageView);  \n                                }  \n                            } else  \n                            // 直接从网络加载  \n                            {  \n                                Log.e(TAG, &quot;load image :&quot; + path + &quot; to memory.&quot;);  \n                                bm = DownloadImgUtils.downloadImgByUrl(path,  \n                                        imageView);  \n                            }  \n                        }  \n                    } else  \n                    {  \n                        bm = loadImageFromLocal(path, imageView);  \n                    }  \n                    // 3、把图片加入到缓存  \n                    addBitmapToLruCache(path, bm);  \n                    refreashBitmap(path, imageView, bm);  \n                    mSemaphoreThreadPool.release();  \n                }  \n      \n                  \n            };  \n        }  \n          \n        private Bitmap loadImageFromLocal(final String path,  \n                final ImageView imageView)  \n        {  \n            Bitmap bm;  \n            // 加载图片  \n            // 图片的压缩  \n            // 1、获得图片需要显示的大小  \n            ImageSize imageSize = ImageSizeUtil.getImageViewSize(imageView);  \n            // 2、压缩图片  \n            bm = decodeSampledBitmapFromPath(path, imageSize.width,  \n                    imageSize.height);  \n            return bm;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">我们新建任务，说明在内存中没有找到缓存的bitmap；我们的任务就是去根据path加载压缩后的bitmap返回即可，然后加入LruCache，设置回调显示。</span>\n\n首先我们判断是否是网络任务？\n\n如果是，首先去硬盘缓存中找一下，（硬盘中文件名为：根据path生成的md5为名称）。\n\n如果硬盘缓存中没有，那么去判断是否开启了硬盘缓存：\n\n<span style=\"white-space:pre\"></span>开启了的话：下载图片，使用loadImageFromLocal本地加载图片的方式进行加载（压缩的代码前面已经详细说过）；\n\n         如果没有开启：则直接从网络获取（压缩获取的代码，前面详细说过）；\n\n如果不是网络图片：直接loadImageFromLocal本地加载图片的方式进行加载\n\n经过上面，就获得了bitmap；然后加入addBitmapToLruCache，refreashBitmap回调显示图片。\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 将图片加入LruCache \n         *  \n         * @param path \n         * @param bm \n         */  \n        protected void addBitmapToLruCache(String path, Bitmap bm)  \n        {  \n            if (getBitmapFromLruCache(path) == null)  \n            {  \n                if (bm != null)  \n                    mLruCache.put(path, bm);  \n            }  \n        }</pre>\n\n到此，我们所有的代码就分析完成了；\n\n缓存的图片位置：在SD卡的Android/data/项目packageName/cache中：\n\n![20141211225817125.png](/upload/2015/07/201507231437642625119761.png \"201507231437642625119761.png\")\n\n不过有些地方需要注意：就是在代码中，你会看到一些信号量的身影：\n\n第一个：mSemaphorePoolThreadHandler = new Semaphore(0); \n用于控制我们的mPoolThreadHandler的初始化完成，我们在使用mPoolThreadHandler会进行判空，如果为null，会通过\nmSemaphorePoolThreadHandler.acquire()进行阻塞；当mPoolThreadHandler初始化结束，我们会调\n用.release();解除阻塞。\n\n第二个：mSemaphoreThreadPool = new \nSemaphore(threadCount);这个信号量的数量和我们加载图片的线程个数一致；每取一个任务去执行，我们会让信号量减一；每完成一个任\n务，会让信号量+1，再去取任务；目的是什么呢？为什么当我们的任务到来时，如果此时在没有空闲线程，任务则一直添加到TaskQueue中，当线程完成\n任务，可以根据策略去TaskQueue中去取任务，只有这样，我们的LIFO才有意义。\n\n到此，我们的图片加载框架就结束了，你可以尝试下加载本地，或者去加载网络大量的图片，拼一拼加载速度~~~\n\n# <a name=\"t10\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t10\"></a>4、MainActivity\n\n现在是使用的时刻~~\n\n我在MainActivity中，我使用了Fragment，下面我贴下Fragment和布局文件的代码，具体的，大家自己看代码：\n<pre class=\"brush:java;toolbar:false\">   package com.example.demo_zhy_18_networkimageloader;  \n      \n    import android.content.Context;  \n    import android.os.Bundle;  \n    import android.support.v4.app.Fragment;  \n    import android.util.Log;  \n    import android.view.LayoutInflater;  \n    import android.view.View;  \n    import android.view.ViewGroup;  \n    import android.widget.ArrayAdapter;  \n    import android.widget.GridView;  \n    import android.widget.ImageView;  \n      \n    import com.zhy.utils.ImageLoader;  \n    import com.zhy.utils.ImageLoader.Type;  \n    import com.zhy.utils.Images;  \n      \n    public class ListImgsFragment extends Fragment  \n    {  \n        private GridView mGridView;  \n        private String[] mUrlStrs = Images.imageThumbUrls;  \n        private ImageLoader mImageLoader;  \n      \n        @Override  \n        public void onCreate(Bundle savedInstanceState)  \n        {  \n            super.onCreate(savedInstanceState);  \n            mImageLoader = ImageLoader.getInstance(3, Type.LIFO);  \n        }  \n      \n        @Override  \n        public View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                Bundle savedInstanceState)  \n        {  \n            View view = inflater.inflate(R.layout.fragment_list_imgs, container,  \n                    false);  \n            mGridView = (GridView) view.findViewById(R.id.id_gridview);  \n            setUpAdapter();  \n            return view;  \n        }  \n      \n        private void setUpAdapter()  \n        {  \n            if (getActivity() == null || mGridView == null)  \n                return;  \n      \n            if (mUrlStrs != null)  \n            {  \n                mGridView.setAdapter(new ListImgItemAdaper(getActivity(), 0,  \n                        mUrlStrs));  \n            } else  \n            {  \n                mGridView.setAdapter(null);  \n            }  \n      \n        }  \n      \n        private class ListImgItemAdaper extends ArrayAdapter&lt;String&gt;  \n        {  \n      \n            public ListImgItemAdaper(Context context, int resource, String[] datas)  \n            {  \n                super(getActivity(), 0, datas);  \n                Log.e(&quot;TAG&quot;, &quot;ListImgItemAdaper&quot;);  \n            }  \n      \n            @Override  \n            public View getView(int position, View convertView, ViewGroup parent)  \n            {  \n                if (convertView == null)  \n                {  \n                    convertView = getActivity().getLayoutInflater().inflate(  \n                            R.layout.item_fragment_list_imgs, parent, false);  \n                }  \n                ImageView imageview = (ImageView) convertView  \n                        .findViewById(R.id.id_img);  \n                imageview.setImageResource(R.drawable.pictures_no);  \n                mImageLoader.loadImage(getItem(position), imageview, true);  \n                return convertView;  \n            }  \n      \n        }  \n      \n    }</pre>\n\n可以看到我们在getView中，使用mImageLoader.loadImage一行即完成了图片的加载。\n\nfragment_list_imgs.xml\n<pre class=\"brush:xml;toolbar:false;\"> &lt;GridView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n    android:id=&quot;@+id/id_gridview&quot;  \n    android:layout_width=&quot;match_parent&quot;  \n    android:layout_height=&quot;match_parent&quot;  \n    android:horizontalSpacing=&quot;3dp&quot;  \n    android:verticalSpacing=&quot;3dp&quot;  \n    android:numColumns=&quot;3&quot;  \n   &gt;  \n  \n&lt;/GridView&gt;</pre>\n\nitem_fragment_list_imgs.xml\n<pre class=\"brush:xml;toolbar:false\">    &lt;ImageView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n        xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n        android:id=&quot;@+id/id_img&quot;  \n        android:layout_width=&quot;match_parent&quot;  \n        android:layout_height=&quot;120dp&quot;  \n        android:scaleType=&quot;centerCrop&quot; &gt;  \n      \n    &lt;/ImageView&gt;</pre>\n\n**<span style=\"font-size: 24px;\">源码下载：</span>**[**<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1mgjARkG</span>**](http://pan.baidu.com/s/1mgjARkG)","source":"_posts/Android-打造高效的图片加载框架.md","raw":"---\ntitle: Android 打造高效的图片加载框架\ncategories:\n- 文章\ndate: 2015-07-23 16:57:43\n---\n\n# 1、概述\n\n优秀的图片加载框架不要太多，什么UIL , Volley \n,Picasso,Imageloader等等。但是作为一名合格的程序猿，必须懂其中的实现原理，于是乎，今天我就带大家一起来设计一个加载网络、本地\n的图片框架。有人可能会说，自己写会不会很渣，运行效率，内存溢出神马的。放心，我们拿demo说话，拼得就是速度，奏事这么任性。\n<!-- more -->\n好了，如果你看过之前的博文，类似Android\n Handler 异步消息处理机制的妙用 创建强大的图片加载类，可能会对接下来文章理解会有很大的帮助。没有的话，就跟我往下继续走吧，也不要去看了。\n\n关于加载本地图片，当然了，我手机图片比较少，7000来张：\n\n1、首先肯定不能内存溢出，但是尼玛现在像素那么高，怎么才能保证呢？我相信利用LruCache统一管理你的图片是个不二的选择，所有的图片从LruCache里面取，保证所有的图片的内存不会超过预设的空间。\n\n2、加载速度要刚刚的，我一用力，滑动到3000张的位置，你要是还在从第一张给我加载，尼玛，你以为我打dota呢。所以我们需要引入加载策略，我们不能FIFO，我们选择LIFO，当前呈现给用户的，最新加载；当前未呈现的，选择加载。\n\n3、使用方便。一般图片都会使用GridView作为控件，在getView里面进行图片加载，当然了为了不错乱，可能还需要用户去自己setTag，自\n己写回调设置图片。当然了，我们不需要这么麻烦，一句话IoadImage(imageview,path）即可，剩下的请交给我们的图片加载框架处理。\n\n做到以上几点，关于本地的图片加载应该就木有什么问题了。\n\n关于加载网络图片，其实原理差不多，就多了个是否启用硬盘缓存的选项，如果启用了，加载时，先从内存中查找，然后从硬盘上找，最后去网络下载。下载完成后，别忘了写入硬盘，加入内存缓存。如果没有启用，那么就直接从网络压缩获取，加入内存即可。\n\n# <a name=\"t1\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t1\"></a>2、效果图\n\n终于扯完了，接下来，简单看个效果图，关于加载本地图片的效果图：可以从Android\n 超高仿微信图片选择器 图片该这么加载这篇博客中下载Demo运行。\n\n下面演示一个网络加载图片的例子:\n\n![20141211214442177.gif](/upload/2015/07/201507231437642603106757.gif \"201507231437642603106757.gif\")\n\n80多张从网络加载的图片，可以看到我直接拖到最后，基本是呈现在用户眼前的最先加载，要是从第一张到80多，估计也是醉了。\n\n此外：图片来自老郭的博客，感谢！！！ps:如果你觉得图片不劲爆，Day Day Up找老郭去。\n\n# 3、完全解析\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n## 1、关于图片的压缩\n\n不管是从网络还是本地的图片，加载都需要进行压缩，然后显示：\n\n用户要你压缩显示，会给我们什么？一个imageview，一个path，我们的职责就是压缩完成后显示上去。\n\n### 1、本地图片的压缩\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n**a、获得imageview想要显示的大小**\n\n想要压缩，我们第一步应该是获得imageview想要显示的大小，没大小肯定没办法压缩？\n\n那么如何获得imageview想要显示的大小呢？\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据ImageView获适当的压缩的宽和高 \n         *  \n         * @param imageView \n         * @return \n         */  \n        public static ImageSize getImageViewSize(ImageView imageView)  \n        {  \n      \n            ImageSize imageSize = new ImageSize();  \n            DisplayMetrics displayMetrics = imageView.getContext().getResources()  \n                    .getDisplayMetrics();  \n      \n            LayoutParams lp = imageView.getLayoutParams();  \n      \n            int width = imageView.getWidth();// 获取imageview的实际宽度  \n            if (width &lt;= 0)  \n            {  \n                width = lp.width;// 获取imageview在layout中声明的宽度  \n            }  \n            if (width &lt;= 0)  \n            {  \n                // width = imageView.getMaxWidth();// 检查最大值  \n                width = getImageViewFieldValue(imageView, &quot;mMaxWidth&quot;);  \n            }  \n            if (width &lt;= 0)  \n            {  \n                width = displayMetrics.widthPixels;  \n            }  \n      \n            int height = imageView.getHeight();// 获取imageview的实际高度  \n            if (height &lt;= 0)  \n            {  \n                height = lp.height;// 获取imageview在layout中声明的宽度  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = getImageViewFieldValue(imageView, &quot;mMaxHeight&quot;);// 检查最大值  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = displayMetrics.heightPixels;  \n            }  \n            imageSize.width = width;  \n            imageSize.height = height;  \n      \n            return imageSize;  \n        }  \n      \n        public static class ImageSize  \n        {  \n            int width;  \n            int height;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，我们拿到imageview以后：</span>\n\n首先企图通过getWidth获取显示的宽；有些时候，这个getWidth返回的是0；\n\n那么我们再去看看它有没有在布局文件中书写宽；\n\n如果布局文件中也没有精确值，那么我们再去看看它有没有设置最大值；\n\n如果最大值也没设置，那么我们只有拿出我们的终极方案，使用我们的屏幕宽度；\n\n总之，不能让它任性，我们一定要拿到一个合适的显示值。\n\n可以看到这里或者最大宽度，我们用的反射，而不是getMaxWidth()；维萨呢，因为getMaxWidth竟然要API 16，我也是醉了；为了兼容性，我们采用反射的方案。反射的代码就不贴了。\n\n**b、设置合适的inSampleSize**\n\n我们获得想要显示的大小，为了什么，还不是为了和图片的真正的宽高做比较，拿到一个合适的inSampleSize，去对图片进行压缩么。\n\n那么首先应该是拿到图片的宽和高：\n<pre class=\"brush:java;toolbar:false\"> // 获得图片的宽和高，并不把图片加载到内存中  \n        BitmapFactory.Options options = new BitmapFactory.Options();  \n        options.inJustDecodeBounds = true;  \n        BitmapFactory.decodeFile(path, options);</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这三行就成功获取图片真正的宽和高了，存在我们的options里面；</span>\n\n然后我们就可以happy的去计算inSampleSize了：\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据需求的宽和高以及图片实际的宽和高计算SampleSize \n         *  \n         * @param options \n         * @param width \n         * @param height \n         * @return \n         */  \n        public static int caculateInSampleSize(Options options, int reqWidth,  \n                int reqHeight)  \n        {  \n            int width = options.outWidth;  \n            int height = options.outHeight;  \n      \n            int inSampleSize = 1;  \n      \n            if (width &gt; reqWidth || height &gt; reqHeight)  \n            {  \n                int widthRadio = Math.round(width * 1.0f / reqWidth);  \n                int heightRadio = Math.round(height * 1.0f / reqHeight);  \n      \n                inSampleSize = Math.max(widthRadio, heightRadio);  \n            }  \n      \n            return inSampleSize;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">options里面存了实际的宽和高；reqWidth和reqHeight就是我们之前得到的想要显示的大小；经过比较，得到一个合适的inSampleSize;</span>\n\n有了inSampleSize:\n<pre class=\"brush:java;toolbar:false\">    options.inSampleSize = ImageSizeUtil.caculateInSampleSize(options,  \n                    width, height);  \n      \n            // 使用获得到的InSampleSize再次解析图片  \n            options.inJustDecodeBounds = false;  \n            Bitmap bitmap = BitmapFactory.decodeFile(path, options);  \n            return bitmap;</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">经过这几行，就完成图片的压缩了。</span>\n\n上述是本地图片的压缩，那么如果是网络图片呢？\n\n### 2、网络图片的压缩\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n**a、直接下载存到sd卡，然后采用本地的压缩方案。这种方式当前是在硬盘缓存开启的情况下，如果没有开启呢？**\n\n**b、使用BitmapFactory.decodeStream(is, null, opts);**\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据url下载图片在指定的文件 \n         *  \n         * @param urlStr \n         * @param file \n         * @return \n         */  \n        public static Bitmap downloadImgByUrl(String urlStr, ImageView imageview)  \n        {  \n            FileOutputStream fos = null;  \n            InputStream is = null;  \n            try  \n            {  \n                URL url = new URL(urlStr);  \n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();  \n                is = new BufferedInputStream(conn.getInputStream());  \n                is.mark(is.available());  \n                  \n                Options opts = new Options();  \n                opts.inJustDecodeBounds = true;  \n                Bitmap bitmap = BitmapFactory.decodeStream(is, null, opts);  \n                  \n                //获取imageview想要显示的宽和高  \n                ImageSize imageViewSize = ImageSizeUtil.getImageViewSize(imageview);  \n                opts.inSampleSize = ImageSizeUtil.caculateInSampleSize(opts,  \n                        imageViewSize.width, imageViewSize.height);  \n                  \n                opts.inJustDecodeBounds = false;  \n                is.reset();  \n                bitmap = BitmapFactory.decodeStream(is, null, opts);  \n      \n                conn.disconnect();  \n                return bitmap;  \n      \n            } catch (Exception e)  \n            {  \n                e.printStackTrace();  \n            } finally  \n            {  \n                try  \n                {  \n                    if (is != null)  \n                        is.close();  \n                } catch (IOException e)  \n                {  \n                }  \n      \n                try  \n                {  \n                    if (fos != null)  \n                        fos.close();  \n                } catch (IOException e)  \n                {  \n                }  \n            }  \n      \n            return null;  \n      \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">基本和本地压缩差不多，也是两次取样，当然需要注意一点，我们的is进行了包装，以便可以进行reset()；直接返回的is是不能使用两次的。</span>\n\n到此，图片压缩说完了。\n\n## <a name=\"t6\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t6\"></a>2、图片加载框架的架构\n\n我们的图片压缩加载完了，那么就应该放入我们的LruCache，然后设置到我们的ImageView上。\n\n好了，接下来我们来说说我们的这个框架的架构；\n\n1、单例，包含一个LruCache用于管理我们的图片；\n\n2、任务队列，我们每来一次加载图片的请求，我们会封装成Task存入我们的TaskQueue;\n\n3、包含一个后台线程，这个线程在第一次初始化实例的时候启动，然后会一直在后台运行；任务呢？还记得我们有个任务队列么，有队列存任务，得有人干活呀；\n所以，当每来一次加载图片请求的时候，我们同时发一个消息到后台线程，后台线程去使用线程池去TaskQueue去取一个任务执行；\n\n4、调度策略；3中说了，后台线程去TaskQueue去取一个任务，这个任务不是随便取的，有策略可以选择，一个是FIFO，一个是LIFO，我倾向于后者。\n\n好了，基本就这些结构，接下来看我们具体的实现。\n\n# <a name=\"t7\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t7\"></a>3、具体的实现\n<div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">\n</div>\n\n## <a name=\"t8\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t8\"></a>1、构造方法\n<pre class=\"brush:java;toolbar:false\">    public static ImageLoader getInstance(int threadCount, Type type)  \n        {  \n            if (mInstance == null)  \n            {  \n                synchronized (ImageLoader.class)  \n                {  \n                    if (mInstance == null)  \n                    {  \n                        mInstance = new ImageLoader(threadCount, type);  \n                    }  \n                }  \n            }  \n            return mInstance;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这个就不用说了，重点看我们的构造方法</span>\n\n<pre class=\"brush:java;toolbar:false\">  /** \n     * 图片加载类 \n     *  \n     * @author zhy \n     *  \n     */  \n    public class ImageLoader  \n    {  \n        private static ImageLoader mInstance;  \n      \n        /** \n         * 图片缓存的核心对象 \n         */  \n        private LruCache&lt;String, Bitmap&gt; mLruCache;  \n        /** \n         * 线程池 \n         */  \n        private ExecutorService mThreadPool;  \n        private static final int DEAFULT_THREAD_COUNT = 1;  \n        /** \n         * 队列的调度方式 \n         */  \n        private Type mType = Type.LIFO;  \n        /** \n         * 任务队列 \n         */  \n        private LinkedList&lt;Runnable&gt; mTaskQueue;  \n        /** \n         * 后台轮询线程 \n         */  \n        private Thread mPoolThread;  \n        private Handler mPoolThreadHandler;  \n        /** \n         * UI线程中的Handler \n         */  \n        private Handler mUIHandler;  \n      \n        private Semaphore mSemaphorePoolThreadHandler = new Semaphore(0);  \n        private Semaphore mSemaphoreThreadPool;  \n      \n        private boolean isDiskCacheEnable = true;  \n      \n        private static final String TAG = &quot;ImageLoader&quot;;  \n      \n        public enum Type  \n        {  \n            FIFO, LIFO;  \n        }  \n      \n        private ImageLoader(int threadCount, Type type)  \n        {  \n            init(threadCount, type);  \n        }  \n      \n        /** \n         * 初始化 \n         *  \n         * @param threadCount \n         * @param type \n         */  \n        private void init(int threadCount, Type type)  \n        {  \n            initBackThread();  \n      \n            // 获取我们应用的最大可用内存  \n            int maxMemory = (int) Runtime.getRuntime().maxMemory();  \n            int cacheMemory = maxMemory / 8;  \n            mLruCache = new LruCache&lt;String, Bitmap&gt;(cacheMemory)  \n            {  \n                @Override  \n                protected int sizeOf(String key, Bitmap value)  \n                {  \n                    return value.getRowBytes() * value.getHeight();  \n                }  \n      \n            };  \n      \n            // 创建线程池  \n            mThreadPool = Executors.newFixedThreadPool(threadCount);  \n            mTaskQueue = new LinkedList&lt;Runnable&gt;();  \n            mType = type;  \n            mSemaphoreThreadPool = new Semaphore(threadCount);  \n        }  \n      \n        /** \n         * 初始化后台轮询线程 \n         */  \n        private void initBackThread()  \n        {  \n            // 后台轮询线程  \n            mPoolThread = new Thread()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Looper.prepare();  \n                    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());  \n                            try  \n                            {  \n                                mSemaphoreThreadPool.acquire();  \n                            } catch (InterruptedException e)  \n                            {  \n                            }  \n                        }  \n                    };  \n                    // 释放一个信号量  \n                    mSemaphorePoolThreadHandler.release();  \n                    Looper.loop();  \n                };  \n            };  \n      \n            mPoolThread.start();  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">在贴构造的时候，顺便贴出所有的成员变量；</span>\n\n在构造中我们调用init，init中可以设置后台加载图片线程数量和加载策略；init中首先初始化后台线程initBackThread(),可以看\n到这个后台线程，实际上是个Looper最终在那不断的loop，我们还初始化了一个mPoolThreadHandler用于发送消息到此线程；\n\n接下来就是初始化mLruCache  ， mThreadPool ，mTaskQueue 等；\n\n## <a name=\"t9\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t9\"></a>2、loadImage\n\n构造完成以后，当然是使用了，用户调用loadImage传入(final String path, final ImageView imageView,final boolean isFromNet)就可以完成本地或者网络图片的加载。\n<pre class=\"brush:java;toolbar:false\"> /** \n         * 根据path为imageview设置图片 \n         *  \n         * @param path \n         * @param imageView \n         */  \n        public void loadImage(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            imageView.setTag(path);  \n            if (mUIHandler == null)  \n            {  \n                mUIHandler = new Handler()  \n                {  \n                    public void handleMessage(Message msg)  \n                    {  \n                        // 获取得到图片，为imageview回调设置图片  \n                        ImgBeanHolder holder = (ImgBeanHolder) msg.obj;  \n                        Bitmap bm = holder.bitmap;  \n                        ImageView imageview = holder.imageView;  \n                        String path = holder.path;  \n                        // 将path与getTag存储路径进行比较  \n                        if (imageview.getTag().toString().equals(path))  \n                        {  \n                            imageview.setImageBitmap(bm);  \n                        }  \n                    };  \n                };  \n            }  \n      \n            // 根据path在缓存中获取bitmap  \n            Bitmap bm = getBitmapFromLruCache(path);  \n      \n            if (bm != null)  \n            {  \n                refreashBitmap(path, imageView, bm);  \n            } else  \n            {  \n                addTask(buildTask(path, imageView, isFromNet));  \n            }  \n      \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">首先我们为imageview.setTag；然后初始化一个mUIHandler，不用猜，这个mUIHandler用户更新我们的imageview，因为这个方法肯定是主线程调用的。</span>\n\n然后调用：getBitmapFromLruCache(path);根据path在缓存中获取bitmap；如果找到那么直接去设置我们的图片；\n<pre class=\"brush:java;toolbar:false\"> private void refreashBitmap(final String path, final ImageView imageView,  \n            Bitmap bm)  \n    {  \n        Message message = Message.obtain();  \n        ImgBeanHolder holder = new ImgBeanHolder();  \n        holder.bitmap = bm;  \n        holder.path = path;  \n        holder.imageView = imageView;  \n        message.obj = holder;  \n        mUIHandler.sendMessage(message);  \n    }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，如果找到图片，则直接使用UIHandler去发送一个消息，当然了携带了一些必要的参数，然后UIHandler的handleMessage中完成图片的设置；</span>\n\nhandleMessage中拿到path,bitmap,imageview；记得必须要：\n\n// 将path与getTag存储路径进行比较\n<span style=\"white-space:pre\"></span>\n<pre class=\"brush:java;toolbar:false\">if (imageview.getTag().toString().equals(path))\n{\nimageview.setImageBitmap(bm);\n}</pre>\n\n否则会造成图片混乱。\n\n如果没找到，则通过buildTask去新建一个任务，在addTask到任务队列。\n\nbuildTask就比较复杂了，因为还涉及到本地和网络，所以我们先看addTask代码：\n<pre class=\"brush:java;toolbar:false\"> private synchronized void addTask(Runnable runnable)  \n        {  \n            mTaskQueue.add(runnable);  \n            // if(mPoolThreadHandler==null)wait();  \n            try  \n            {  \n                if (mPoolThreadHandler == null)  \n                    mSemaphorePoolThreadHandler.acquire();  \n            } catch (InterruptedException e)  \n            {  \n            }  \n            mPoolThreadHandler.sendEmptyMessage(0x110);  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">很简单，就是runnable加入TaskQueue，与此同时使用mPoolThreadHandler（这个handler还记得么，用于和我们后台线程交互。）去发送一个消息给后台线程，叫它去取出一个任务执行；具体代码：</span>\n<pre class=\"brush:java;toolbar:false\">    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">直接使用mThreadPool线程池，然后使用getTask去取一个任务。</span>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 从任务队列取出一个方法 \n         *  \n         * @return \n         */  \n        private Runnable getTask()  \n        {  \n            if (mType == Type.FIFO)  \n            {  \n                return mTaskQueue.removeFirst();  \n            } else if (mType == Type.LIFO)  \n            {  \n                return mTaskQueue.removeLast();  \n            }  \n            return null;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">getTask代码也比较简单，就是根据Type从任务队列头或者尾进行取任务。</span>\n\n现在你会不会好奇，任务里面到底什么代码？其实我们也就剩最后一段代码了buildTask\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据传入的参数，新建一个任务 \n         *  \n         * @param path \n         * @param imageView \n         * @param isFromNet \n         * @return \n         */  \n        private Runnable buildTask(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            return new Runnable()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Bitmap bm = null;  \n                    if (isFromNet)  \n                    {  \n                        File file = getDiskCacheDir(imageView.getContext(),  \n                                md5(path));  \n                        if (file.exists())// 如果在缓存文件中发现  \n                        {  \n                            Log.e(TAG, &quot;find image :&quot; + path + &quot; in disk cache .&quot;);  \n                            bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                    imageView);  \n                        } else  \n                        {  \n                            if (isDiskCacheEnable)// 检测是否开启硬盘缓存  \n                            {  \n                                boolean downloadState = DownloadImgUtils  \n                                        .downloadImgByUrl(path, file);  \n                                if (downloadState)// 如果下载成功  \n                                {  \n                                    Log.e(TAG,  \n                                            &quot;download image :&quot; + path  \n                                                    + &quot; to disk cache . path is &quot;  \n                                                    + file.getAbsolutePath());  \n                                    bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                            imageView);  \n                                }  \n                            } else  \n                            // 直接从网络加载  \n                            {  \n                                Log.e(TAG, &quot;load image :&quot; + path + &quot; to memory.&quot;);  \n                                bm = DownloadImgUtils.downloadImgByUrl(path,  \n                                        imageView);  \n                            }  \n                        }  \n                    } else  \n                    {  \n                        bm = loadImageFromLocal(path, imageView);  \n                    }  \n                    // 3、把图片加入到缓存  \n                    addBitmapToLruCache(path, bm);  \n                    refreashBitmap(path, imageView, bm);  \n                    mSemaphoreThreadPool.release();  \n                }  \n      \n                  \n            };  \n        }  \n          \n        private Bitmap loadImageFromLocal(final String path,  \n                final ImageView imageView)  \n        {  \n            Bitmap bm;  \n            // 加载图片  \n            // 图片的压缩  \n            // 1、获得图片需要显示的大小  \n            ImageSize imageSize = ImageSizeUtil.getImageViewSize(imageView);  \n            // 2、压缩图片  \n            bm = decodeSampledBitmapFromPath(path, imageSize.width,  \n                    imageSize.height);  \n            return bm;  \n        }</pre>\n\n<span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">我们新建任务，说明在内存中没有找到缓存的bitmap；我们的任务就是去根据path加载压缩后的bitmap返回即可，然后加入LruCache，设置回调显示。</span>\n\n首先我们判断是否是网络任务？\n\n如果是，首先去硬盘缓存中找一下，（硬盘中文件名为：根据path生成的md5为名称）。\n\n如果硬盘缓存中没有，那么去判断是否开启了硬盘缓存：\n\n<span style=\"white-space:pre\"></span>开启了的话：下载图片，使用loadImageFromLocal本地加载图片的方式进行加载（压缩的代码前面已经详细说过）；\n\n         如果没有开启：则直接从网络获取（压缩获取的代码，前面详细说过）；\n\n如果不是网络图片：直接loadImageFromLocal本地加载图片的方式进行加载\n\n经过上面，就获得了bitmap；然后加入addBitmapToLruCache，refreashBitmap回调显示图片。\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 将图片加入LruCache \n         *  \n         * @param path \n         * @param bm \n         */  \n        protected void addBitmapToLruCache(String path, Bitmap bm)  \n        {  \n            if (getBitmapFromLruCache(path) == null)  \n            {  \n                if (bm != null)  \n                    mLruCache.put(path, bm);  \n            }  \n        }</pre>\n\n到此，我们所有的代码就分析完成了；\n\n缓存的图片位置：在SD卡的Android/data/项目packageName/cache中：\n\n![20141211225817125.png](/upload/2015/07/201507231437642625119761.png \"201507231437642625119761.png\")\n\n不过有些地方需要注意：就是在代码中，你会看到一些信号量的身影：\n\n第一个：mSemaphorePoolThreadHandler = new Semaphore(0); \n用于控制我们的mPoolThreadHandler的初始化完成，我们在使用mPoolThreadHandler会进行判空，如果为null，会通过\nmSemaphorePoolThreadHandler.acquire()进行阻塞；当mPoolThreadHandler初始化结束，我们会调\n用.release();解除阻塞。\n\n第二个：mSemaphoreThreadPool = new \nSemaphore(threadCount);这个信号量的数量和我们加载图片的线程个数一致；每取一个任务去执行，我们会让信号量减一；每完成一个任\n务，会让信号量+1，再去取任务；目的是什么呢？为什么当我们的任务到来时，如果此时在没有空闲线程，任务则一直添加到TaskQueue中，当线程完成\n任务，可以根据策略去TaskQueue中去取任务，只有这样，我们的LIFO才有意义。\n\n到此，我们的图片加载框架就结束了，你可以尝试下加载本地，或者去加载网络大量的图片，拼一拼加载速度~~~\n\n# <a name=\"t10\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t10\"></a>4、MainActivity\n\n现在是使用的时刻~~\n\n我在MainActivity中，我使用了Fragment，下面我贴下Fragment和布局文件的代码，具体的，大家自己看代码：\n<pre class=\"brush:java;toolbar:false\">   package com.example.demo_zhy_18_networkimageloader;  \n      \n    import android.content.Context;  \n    import android.os.Bundle;  \n    import android.support.v4.app.Fragment;  \n    import android.util.Log;  \n    import android.view.LayoutInflater;  \n    import android.view.View;  \n    import android.view.ViewGroup;  \n    import android.widget.ArrayAdapter;  \n    import android.widget.GridView;  \n    import android.widget.ImageView;  \n      \n    import com.zhy.utils.ImageLoader;  \n    import com.zhy.utils.ImageLoader.Type;  \n    import com.zhy.utils.Images;  \n      \n    public class ListImgsFragment extends Fragment  \n    {  \n        private GridView mGridView;  \n        private String[] mUrlStrs = Images.imageThumbUrls;  \n        private ImageLoader mImageLoader;  \n      \n        @Override  \n        public void onCreate(Bundle savedInstanceState)  \n        {  \n            super.onCreate(savedInstanceState);  \n            mImageLoader = ImageLoader.getInstance(3, Type.LIFO);  \n        }  \n      \n        @Override  \n        public View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                Bundle savedInstanceState)  \n        {  \n            View view = inflater.inflate(R.layout.fragment_list_imgs, container,  \n                    false);  \n            mGridView = (GridView) view.findViewById(R.id.id_gridview);  \n            setUpAdapter();  \n            return view;  \n        }  \n      \n        private void setUpAdapter()  \n        {  \n            if (getActivity() == null || mGridView == null)  \n                return;  \n      \n            if (mUrlStrs != null)  \n            {  \n                mGridView.setAdapter(new ListImgItemAdaper(getActivity(), 0,  \n                        mUrlStrs));  \n            } else  \n            {  \n                mGridView.setAdapter(null);  \n            }  \n      \n        }  \n      \n        private class ListImgItemAdaper extends ArrayAdapter&lt;String&gt;  \n        {  \n      \n            public ListImgItemAdaper(Context context, int resource, String[] datas)  \n            {  \n                super(getActivity(), 0, datas);  \n                Log.e(&quot;TAG&quot;, &quot;ListImgItemAdaper&quot;);  \n            }  \n      \n            @Override  \n            public View getView(int position, View convertView, ViewGroup parent)  \n            {  \n                if (convertView == null)  \n                {  \n                    convertView = getActivity().getLayoutInflater().inflate(  \n                            R.layout.item_fragment_list_imgs, parent, false);  \n                }  \n                ImageView imageview = (ImageView) convertView  \n                        .findViewById(R.id.id_img);  \n                imageview.setImageResource(R.drawable.pictures_no);  \n                mImageLoader.loadImage(getItem(position), imageview, true);  \n                return convertView;  \n            }  \n      \n        }  \n      \n    }</pre>\n\n可以看到我们在getView中，使用mImageLoader.loadImage一行即完成了图片的加载。\n\nfragment_list_imgs.xml\n<pre class=\"brush:xml;toolbar:false;\"> &lt;GridView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n    android:id=&quot;@+id/id_gridview&quot;  \n    android:layout_width=&quot;match_parent&quot;  \n    android:layout_height=&quot;match_parent&quot;  \n    android:horizontalSpacing=&quot;3dp&quot;  \n    android:verticalSpacing=&quot;3dp&quot;  \n    android:numColumns=&quot;3&quot;  \n   &gt;  \n  \n&lt;/GridView&gt;</pre>\n\nitem_fragment_list_imgs.xml\n<pre class=\"brush:xml;toolbar:false\">    &lt;ImageView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n        xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n        android:id=&quot;@+id/id_img&quot;  \n        android:layout_width=&quot;match_parent&quot;  \n        android:layout_height=&quot;120dp&quot;  \n        android:scaleType=&quot;centerCrop&quot; &gt;  \n      \n    &lt;/ImageView&gt;</pre>\n\n**<span style=\"font-size: 24px;\">源码下载：</span>**[**<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1mgjARkG</span>**](http://pan.baidu.com/s/1mgjARkG)","slug":"Android-打造高效的图片加载框架","published":1,"updated":"2016-03-18T04:01:25.058Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyls000fc4uby0d8dpy7","content":"<h1 id=\"1、概述\"><a href=\"#1、概述\" class=\"headerlink\" title=\"1、概述\"></a>1、概述</h1><p>优秀的图片加载框架不要太多，什么UIL , Volley<br>,Picasso,Imageloader等等。但是作为一名合格的程序猿，必须懂其中的实现原理，于是乎，今天我就带大家一起来设计一个加载网络、本地<br>的图片框架。有人可能会说，自己写会不会很渣，运行效率，内存溢出神马的。放心，我们拿demo说话，拼得就是速度，奏事这么任性。<br><a id=\"more\"></a><br>好了，如果你看过之前的博文，类似Android<br> Handler 异步消息处理机制的妙用 创建强大的图片加载类，可能会对接下来文章理解会有很大的帮助。没有的话，就跟我往下继续走吧，也不要去看了。</p>\n<p>关于加载本地图片，当然了，我手机图片比较少，7000来张：</p>\n<p>1、首先肯定不能内存溢出，但是尼玛现在像素那么高，怎么才能保证呢？我相信利用LruCache统一管理你的图片是个不二的选择，所有的图片从LruCache里面取，保证所有的图片的内存不会超过预设的空间。</p>\n<p>2、加载速度要刚刚的，我一用力，滑动到3000张的位置，你要是还在从第一张给我加载，尼玛，你以为我打dota呢。所以我们需要引入加载策略，我们不能FIFO，我们选择LIFO，当前呈现给用户的，最新加载；当前未呈现的，选择加载。</p>\n<p>3、使用方便。一般图片都会使用GridView作为控件，在getView里面进行图片加载，当然了为了不错乱，可能还需要用户去自己setTag，自<br>己写回调设置图片。当然了，我们不需要这么麻烦，一句话IoadImage(imageview,path）即可，剩下的请交给我们的图片加载框架处理。</p>\n<p>做到以上几点，关于本地的图片加载应该就木有什么问题了。</p>\n<p>关于加载网络图片，其实原理差不多，就多了个是否启用硬盘缓存的选项，如果启用了，加载时，先从内存中查找，然后从硬盘上找，最后去网络下载。下载完成后，别忘了写入硬盘，加入内存缓存。如果没有启用，那么就直接从网络压缩获取，加入内存即可。</p>\n<h1 id=\"2、效果图\"><a href=\"#2、效果图\" class=\"headerlink\" title=\"2、效果图\"></a><a name=\"t1\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t1\"></a>2、效果图</h1><p>终于扯完了，接下来，简单看个效果图，关于加载本地图片的效果图：可以从Android<br> 超高仿微信图片选择器 图片该这么加载这篇博客中下载Demo运行。</p>\n<p>下面演示一个网络加载图片的例子:</p>\n<p><img src=\"/upload/2015/07/201507231437642603106757.gif\" alt=\"20141211214442177.gif\" title=\"201507231437642603106757.gif\"></p>\n<p>80多张从网络加载的图片，可以看到我直接拖到最后，基本是呈现在用户眼前的最先加载，要是从第一张到80多，估计也是醉了。</p>\n<p>此外：图片来自老郭的博客，感谢！！！ps:如果你觉得图片不劲爆，Day Day Up找老郭去。</p>\n<h1 id=\"3、完全解析\"><a href=\"#3、完全解析\" class=\"headerlink\" title=\"3、完全解析\"></a>3、完全解析</h1><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<h2 id=\"1、关于图片的压缩\"><a href=\"#1、关于图片的压缩\" class=\"headerlink\" title=\"1、关于图片的压缩\"></a>1、关于图片的压缩</h2><p>不管是从网络还是本地的图片，加载都需要进行压缩，然后显示：</p>\n<p>用户要你压缩显示，会给我们什么？一个imageview，一个path，我们的职责就是压缩完成后显示上去。</p>\n<h3 id=\"1、本地图片的压缩\"><a href=\"#1、本地图片的压缩\" class=\"headerlink\" title=\"1、本地图片的压缩\"></a>1、本地图片的压缩</h3><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<p><strong>a、获得imageview想要显示的大小</strong></p>\n<p>想要压缩，我们第一步应该是获得imageview想要显示的大小，没大小肯定没办法压缩？</p>\n<p>那么如何获得imageview想要显示的大小呢？</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据ImageView获适当的压缩的宽和高 \n         *  \n         * @param imageView \n         * @return \n         */  \n        public static ImageSize getImageViewSize(ImageView imageView)  \n        {  \n\n            ImageSize imageSize = new ImageSize();  \n            DisplayMetrics displayMetrics = imageView.getContext().getResources()  \n                    .getDisplayMetrics();  \n\n            LayoutParams lp = imageView.getLayoutParams();  \n\n            int width = imageView.getWidth();// 获取imageview的实际宽度  \n            if (width &lt;= 0)  \n            {  \n                width = lp.width;// 获取imageview在layout中声明的宽度  \n            }  \n            if (width &lt;= 0)  \n            {  \n                // width = imageView.getMaxWidth();// 检查最大值  \n                width = getImageViewFieldValue(imageView, &quot;mMaxWidth&quot;);  \n            }  \n            if (width &lt;= 0)  \n            {  \n                width = displayMetrics.widthPixels;  \n            }  \n\n            int height = imageView.getHeight();// 获取imageview的实际高度  \n            if (height &lt;= 0)  \n            {  \n                height = lp.height;// 获取imageview在layout中声明的宽度  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = getImageViewFieldValue(imageView, &quot;mMaxHeight&quot;);// 检查最大值  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = displayMetrics.heightPixels;  \n            }  \n            imageSize.width = width;  \n            imageSize.height = height;  \n\n            return imageSize;  \n        }  \n\n        public static class ImageSize  \n        {  \n            int width;  \n            int height;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，我们拿到imageview以后：</span></p>\n<p>首先企图通过getWidth获取显示的宽；有些时候，这个getWidth返回的是0；</p>\n<p>那么我们再去看看它有没有在布局文件中书写宽；</p>\n<p>如果布局文件中也没有精确值，那么我们再去看看它有没有设置最大值；</p>\n<p>如果最大值也没设置，那么我们只有拿出我们的终极方案，使用我们的屏幕宽度；</p>\n<p>总之，不能让它任性，我们一定要拿到一个合适的显示值。</p>\n<p>可以看到这里或者最大宽度，我们用的反射，而不是getMaxWidth()；维萨呢，因为getMaxWidth竟然要API 16，我也是醉了；为了兼容性，我们采用反射的方案。反射的代码就不贴了。</p>\n<p><strong>b、设置合适的inSampleSize</strong></p>\n<p>我们获得想要显示的大小，为了什么，还不是为了和图片的真正的宽高做比较，拿到一个合适的inSampleSize，去对图片进行压缩么。</p>\n<p>那么首先应该是拿到图片的宽和高：</p>\n<pre class=\"brush:java;toolbar:false\"> // 获得图片的宽和高，并不把图片加载到内存中  \n        BitmapFactory.Options options = new BitmapFactory.Options();  \n        options.inJustDecodeBounds = true;  \n        BitmapFactory.decodeFile(path, options);</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这三行就成功获取图片真正的宽和高了，存在我们的options里面；</span></p>\n<p>然后我们就可以happy的去计算inSampleSize了：</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据需求的宽和高以及图片实际的宽和高计算SampleSize \n         *  \n         * @param options \n         * @param width \n         * @param height \n         * @return \n         */  \n        public static int caculateInSampleSize(Options options, int reqWidth,  \n                int reqHeight)  \n        {  \n            int width = options.outWidth;  \n            int height = options.outHeight;  \n\n            int inSampleSize = 1;  \n\n            if (width &gt; reqWidth || height &gt; reqHeight)  \n            {  \n                int widthRadio = Math.round(width * 1.0f / reqWidth);  \n                int heightRadio = Math.round(height * 1.0f / reqHeight);  \n\n                inSampleSize = Math.max(widthRadio, heightRadio);  \n            }  \n\n            return inSampleSize;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">options里面存了实际的宽和高；reqWidth和reqHeight就是我们之前得到的想要显示的大小；经过比较，得到一个合适的inSampleSize;</span></p>\n<p>有了inSampleSize:</p>\n<pre class=\"brush:java;toolbar:false\">    options.inSampleSize = ImageSizeUtil.caculateInSampleSize(options,  \n                    width, height);  \n\n            // 使用获得到的InSampleSize再次解析图片  \n            options.inJustDecodeBounds = false;  \n            Bitmap bitmap = BitmapFactory.decodeFile(path, options);  \n            return bitmap;</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">经过这几行，就完成图片的压缩了。</span></p>\n<p>上述是本地图片的压缩，那么如果是网络图片呢？</p>\n<h3 id=\"2、网络图片的压缩\"><a href=\"#2、网络图片的压缩\" class=\"headerlink\" title=\"2、网络图片的压缩\"></a>2、网络图片的压缩</h3><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<p><strong>a、直接下载存到sd卡，然后采用本地的压缩方案。这种方式当前是在硬盘缓存开启的情况下，如果没有开启呢？</strong></p>\n<p><strong>b、使用BitmapFactory.decodeStream(is, null, opts);</strong></p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据url下载图片在指定的文件 \n         *  \n         * @param urlStr \n         * @param file \n         * @return \n         */  \n        public static Bitmap downloadImgByUrl(String urlStr, ImageView imageview)  \n        {  \n            FileOutputStream fos = null;  \n            InputStream is = null;  \n            try  \n            {  \n                URL url = new URL(urlStr);  \n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();  \n                is = new BufferedInputStream(conn.getInputStream());  \n                is.mark(is.available());  \n\n                Options opts = new Options();  \n                opts.inJustDecodeBounds = true;  \n                Bitmap bitmap = BitmapFactory.decodeStream(is, null, opts);  \n\n                //获取imageview想要显示的宽和高  \n                ImageSize imageViewSize = ImageSizeUtil.getImageViewSize(imageview);  \n                opts.inSampleSize = ImageSizeUtil.caculateInSampleSize(opts,  \n                        imageViewSize.width, imageViewSize.height);  \n\n                opts.inJustDecodeBounds = false;  \n                is.reset();  \n                bitmap = BitmapFactory.decodeStream(is, null, opts);  \n\n                conn.disconnect();  \n                return bitmap;  \n\n            } catch (Exception e)  \n            {  \n                e.printStackTrace();  \n            } finally  \n            {  \n                try  \n                {  \n                    if (is != null)  \n                        is.close();  \n                } catch (IOException e)  \n                {  \n                }  \n\n                try  \n                {  \n                    if (fos != null)  \n                        fos.close();  \n                } catch (IOException e)  \n                {  \n                }  \n            }  \n\n            return null;  \n\n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">基本和本地压缩差不多，也是两次取样，当然需要注意一点，我们的is进行了包装，以便可以进行reset()；直接返回的is是不能使用两次的。</span></p>\n<p>到此，图片压缩说完了。</p>\n<h2 id=\"2、图片加载框架的架构\"><a href=\"#2、图片加载框架的架构\" class=\"headerlink\" title=\"2、图片加载框架的架构\"></a><a name=\"t6\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t6\"></a>2、图片加载框架的架构</h2><p>我们的图片压缩加载完了，那么就应该放入我们的LruCache，然后设置到我们的ImageView上。</p>\n<p>好了，接下来我们来说说我们的这个框架的架构；</p>\n<p>1、单例，包含一个LruCache用于管理我们的图片；</p>\n<p>2、任务队列，我们每来一次加载图片的请求，我们会封装成Task存入我们的TaskQueue;</p>\n<p>3、包含一个后台线程，这个线程在第一次初始化实例的时候启动，然后会一直在后台运行；任务呢？还记得我们有个任务队列么，有队列存任务，得有人干活呀；<br>所以，当每来一次加载图片请求的时候，我们同时发一个消息到后台线程，后台线程去使用线程池去TaskQueue去取一个任务执行；</p>\n<p>4、调度策略；3中说了，后台线程去TaskQueue去取一个任务，这个任务不是随便取的，有策略可以选择，一个是FIFO，一个是LIFO，我倾向于后者。</p>\n<p>好了，基本就这些结构，接下来看我们具体的实现。</p>\n<h1 id=\"3、具体的实现\"><a href=\"#3、具体的实现\" class=\"headerlink\" title=\"3、具体的实现\"></a><a name=\"t7\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t7\"></a>3、具体的实现</h1><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<h2 id=\"1、构造方法\"><a href=\"#1、构造方法\" class=\"headerlink\" title=\"1、构造方法\"></a><a name=\"t8\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t8\"></a>1、构造方法</h2><pre class=\"brush:java;toolbar:false\">    public static ImageLoader getInstance(int threadCount, Type type)  \n        {  \n            if (mInstance == null)  \n            {  \n                synchronized (ImageLoader.class)  \n                {  \n                    if (mInstance == null)  \n                    {  \n                        mInstance = new ImageLoader(threadCount, type);  \n                    }  \n                }  \n            }  \n            return mInstance;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这个就不用说了，重点看我们的构造方法</span></p>\n<pre class=\"brush:java;toolbar:false\">  /** \n     * 图片加载类 \n     *  \n     * @author zhy \n     *  \n     */  \n    public class ImageLoader  \n    {  \n        private static ImageLoader mInstance;  \n\n        /** \n         * 图片缓存的核心对象 \n         */  \n        private LruCache&lt;String, Bitmap&gt; mLruCache;  \n        /** \n         * 线程池 \n         */  \n        private ExecutorService mThreadPool;  \n        private static final int DEAFULT_THREAD_COUNT = 1;  \n        /** \n         * 队列的调度方式 \n         */  \n        private Type mType = Type.LIFO;  \n        /** \n         * 任务队列 \n         */  \n        private LinkedList&lt;Runnable&gt; mTaskQueue;  \n        /** \n         * 后台轮询线程 \n         */  \n        private Thread mPoolThread;  \n        private Handler mPoolThreadHandler;  \n        /** \n         * UI线程中的Handler \n         */  \n        private Handler mUIHandler;  \n\n        private Semaphore mSemaphorePoolThreadHandler = new Semaphore(0);  \n        private Semaphore mSemaphoreThreadPool;  \n\n        private boolean isDiskCacheEnable = true;  \n\n        private static final String TAG = &quot;ImageLoader&quot;;  \n\n        public enum Type  \n        {  \n            FIFO, LIFO;  \n        }  \n\n        private ImageLoader(int threadCount, Type type)  \n        {  \n            init(threadCount, type);  \n        }  \n\n        /** \n         * 初始化 \n         *  \n         * @param threadCount \n         * @param type \n         */  \n        private void init(int threadCount, Type type)  \n        {  \n            initBackThread();  \n\n            // 获取我们应用的最大可用内存  \n            int maxMemory = (int) Runtime.getRuntime().maxMemory();  \n            int cacheMemory = maxMemory / 8;  \n            mLruCache = new LruCache&lt;String, Bitmap&gt;(cacheMemory)  \n            {  \n                @Override  \n                protected int sizeOf(String key, Bitmap value)  \n                {  \n                    return value.getRowBytes() * value.getHeight();  \n                }  \n\n            };  \n\n            // 创建线程池  \n            mThreadPool = Executors.newFixedThreadPool(threadCount);  \n            mTaskQueue = new LinkedList&lt;Runnable&gt;();  \n            mType = type;  \n            mSemaphoreThreadPool = new Semaphore(threadCount);  \n        }  \n\n        /** \n         * 初始化后台轮询线程 \n         */  \n        private void initBackThread()  \n        {  \n            // 后台轮询线程  \n            mPoolThread = new Thread()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Looper.prepare();  \n                    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());  \n                            try  \n                            {  \n                                mSemaphoreThreadPool.acquire();  \n                            } catch (InterruptedException e)  \n                            {  \n                            }  \n                        }  \n                    };  \n                    // 释放一个信号量  \n                    mSemaphorePoolThreadHandler.release();  \n                    Looper.loop();  \n                };  \n            };  \n\n            mPoolThread.start();  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">在贴构造的时候，顺便贴出所有的成员变量；</span></p>\n<p>在构造中我们调用init，init中可以设置后台加载图片线程数量和加载策略；init中首先初始化后台线程initBackThread(),可以看<br>到这个后台线程，实际上是个Looper最终在那不断的loop，我们还初始化了一个mPoolThreadHandler用于发送消息到此线程；</p>\n<p>接下来就是初始化mLruCache  ， mThreadPool ，mTaskQueue 等；</p>\n<h2 id=\"2、loadImage\"><a href=\"#2、loadImage\" class=\"headerlink\" title=\"2、loadImage\"></a><a name=\"t9\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t9\"></a>2、loadImage</h2><p>构造完成以后，当然是使用了，用户调用loadImage传入(final String path, final ImageView imageView,final boolean isFromNet)就可以完成本地或者网络图片的加载。</p>\n<pre class=\"brush:java;toolbar:false\"> /** \n         * 根据path为imageview设置图片 \n         *  \n         * @param path \n         * @param imageView \n         */  \n        public void loadImage(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            imageView.setTag(path);  \n            if (mUIHandler == null)  \n            {  \n                mUIHandler = new Handler()  \n                {  \n                    public void handleMessage(Message msg)  \n                    {  \n                        // 获取得到图片，为imageview回调设置图片  \n                        ImgBeanHolder holder = (ImgBeanHolder) msg.obj;  \n                        Bitmap bm = holder.bitmap;  \n                        ImageView imageview = holder.imageView;  \n                        String path = holder.path;  \n                        // 将path与getTag存储路径进行比较  \n                        if (imageview.getTag().toString().equals(path))  \n                        {  \n                            imageview.setImageBitmap(bm);  \n                        }  \n                    };  \n                };  \n            }  \n\n            // 根据path在缓存中获取bitmap  \n            Bitmap bm = getBitmapFromLruCache(path);  \n\n            if (bm != null)  \n            {  \n                refreashBitmap(path, imageView, bm);  \n            } else  \n            {  \n                addTask(buildTask(path, imageView, isFromNet));  \n            }  \n\n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">首先我们为imageview.setTag；然后初始化一个mUIHandler，不用猜，这个mUIHandler用户更新我们的imageview，因为这个方法肯定是主线程调用的。</span></p>\n<p>然后调用：getBitmapFromLruCache(path);根据path在缓存中获取bitmap；如果找到那么直接去设置我们的图片；</p>\n<pre class=\"brush:java;toolbar:false\"> private void refreashBitmap(final String path, final ImageView imageView,  \n            Bitmap bm)  \n    {  \n        Message message = Message.obtain();  \n        ImgBeanHolder holder = new ImgBeanHolder();  \n        holder.bitmap = bm;  \n        holder.path = path;  \n        holder.imageView = imageView;  \n        message.obj = holder;  \n        mUIHandler.sendMessage(message);  \n    }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，如果找到图片，则直接使用UIHandler去发送一个消息，当然了携带了一些必要的参数，然后UIHandler的handleMessage中完成图片的设置；</span></p>\n<p>handleMessage中拿到path,bitmap,imageview；记得必须要：</p>\n<p>// 将path与getTag存储路径进行比较<br><span style=\"white-space:pre\"></span></p>\n<pre class=\"brush:java;toolbar:false\">if (imageview.getTag().toString().equals(path))\n{\nimageview.setImageBitmap(bm);\n}</pre>\n\n<p>否则会造成图片混乱。</p>\n<p>如果没找到，则通过buildTask去新建一个任务，在addTask到任务队列。</p>\n<p>buildTask就比较复杂了，因为还涉及到本地和网络，所以我们先看addTask代码：</p>\n<pre class=\"brush:java;toolbar:false\"> private synchronized void addTask(Runnable runnable)  \n        {  \n            mTaskQueue.add(runnable);  \n            // if(mPoolThreadHandler==null)wait();  \n            try  \n            {  \n                if (mPoolThreadHandler == null)  \n                    mSemaphorePoolThreadHandler.acquire();  \n            } catch (InterruptedException e)  \n            {  \n            }  \n            mPoolThreadHandler.sendEmptyMessage(0x110);  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">很简单，就是runnable加入TaskQueue，与此同时使用mPoolThreadHandler（这个handler还记得么，用于和我们后台线程交互。）去发送一个消息给后台线程，叫它去取出一个任务执行；具体代码：</span></p>\n<pre class=\"brush:java;toolbar:false\">    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">直接使用mThreadPool线程池，然后使用getTask去取一个任务。</span></p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 从任务队列取出一个方法 \n         *  \n         * @return \n         */  \n        private Runnable getTask()  \n        {  \n            if (mType == Type.FIFO)  \n            {  \n                return mTaskQueue.removeFirst();  \n            } else if (mType == Type.LIFO)  \n            {  \n                return mTaskQueue.removeLast();  \n            }  \n            return null;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">getTask代码也比较简单，就是根据Type从任务队列头或者尾进行取任务。</span></p>\n<p>现在你会不会好奇，任务里面到底什么代码？其实我们也就剩最后一段代码了buildTask</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据传入的参数，新建一个任务 \n         *  \n         * @param path \n         * @param imageView \n         * @param isFromNet \n         * @return \n         */  \n        private Runnable buildTask(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            return new Runnable()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Bitmap bm = null;  \n                    if (isFromNet)  \n                    {  \n                        File file = getDiskCacheDir(imageView.getContext(),  \n                                md5(path));  \n                        if (file.exists())// 如果在缓存文件中发现  \n                        {  \n                            Log.e(TAG, &quot;find image :&quot; + path + &quot; in disk cache .&quot;);  \n                            bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                    imageView);  \n                        } else  \n                        {  \n                            if (isDiskCacheEnable)// 检测是否开启硬盘缓存  \n                            {  \n                                boolean downloadState = DownloadImgUtils  \n                                        .downloadImgByUrl(path, file);  \n                                if (downloadState)// 如果下载成功  \n                                {  \n                                    Log.e(TAG,  \n                                            &quot;download image :&quot; + path  \n                                                    + &quot; to disk cache . path is &quot;  \n                                                    + file.getAbsolutePath());  \n                                    bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                            imageView);  \n                                }  \n                            } else  \n                            // 直接从网络加载  \n                            {  \n                                Log.e(TAG, &quot;load image :&quot; + path + &quot; to memory.&quot;);  \n                                bm = DownloadImgUtils.downloadImgByUrl(path,  \n                                        imageView);  \n                            }  \n                        }  \n                    } else  \n                    {  \n                        bm = loadImageFromLocal(path, imageView);  \n                    }  \n                    // 3、把图片加入到缓存  \n                    addBitmapToLruCache(path, bm);  \n                    refreashBitmap(path, imageView, bm);  \n                    mSemaphoreThreadPool.release();  \n                }  \n\n\n            };  \n        }  \n\n        private Bitmap loadImageFromLocal(final String path,  \n                final ImageView imageView)  \n        {  \n            Bitmap bm;  \n            // 加载图片  \n            // 图片的压缩  \n            // 1、获得图片需要显示的大小  \n            ImageSize imageSize = ImageSizeUtil.getImageViewSize(imageView);  \n            // 2、压缩图片  \n            bm = decodeSampledBitmapFromPath(path, imageSize.width,  \n                    imageSize.height);  \n            return bm;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">我们新建任务，说明在内存中没有找到缓存的bitmap；我们的任务就是去根据path加载压缩后的bitmap返回即可，然后加入LruCache，设置回调显示。</span></p>\n<p>首先我们判断是否是网络任务？</p>\n<p>如果是，首先去硬盘缓存中找一下，（硬盘中文件名为：根据path生成的md5为名称）。</p>\n<p>如果硬盘缓存中没有，那么去判断是否开启了硬盘缓存：</p>\n<p><span style=\"white-space:pre\"></span>开启了的话：下载图片，使用loadImageFromLocal本地加载图片的方式进行加载（压缩的代码前面已经详细说过）；</p>\n<pre><code>如果没有开启：则直接从网络获取（压缩获取的代码，前面详细说过）；\n</code></pre><p>如果不是网络图片：直接loadImageFromLocal本地加载图片的方式进行加载</p>\n<p>经过上面，就获得了bitmap；然后加入addBitmapToLruCache，refreashBitmap回调显示图片。</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 将图片加入LruCache \n         *  \n         * @param path \n         * @param bm \n         */  \n        protected void addBitmapToLruCache(String path, Bitmap bm)  \n        {  \n            if (getBitmapFromLruCache(path) == null)  \n            {  \n                if (bm != null)  \n                    mLruCache.put(path, bm);  \n            }  \n        }</pre>\n\n<p>到此，我们所有的代码就分析完成了；</p>\n<p>缓存的图片位置：在SD卡的Android/data/项目packageName/cache中：</p>\n<p><img src=\"/upload/2015/07/201507231437642625119761.png\" alt=\"20141211225817125.png\" title=\"201507231437642625119761.png\"></p>\n<p>不过有些地方需要注意：就是在代码中，你会看到一些信号量的身影：</p>\n<p>第一个：mSemaphorePoolThreadHandler = new Semaphore(0);<br>用于控制我们的mPoolThreadHandler的初始化完成，我们在使用mPoolThreadHandler会进行判空，如果为null，会通过<br>mSemaphorePoolThreadHandler.acquire()进行阻塞；当mPoolThreadHandler初始化结束，我们会调<br>用.release();解除阻塞。</p>\n<p>第二个：mSemaphoreThreadPool = new<br>Semaphore(threadCount);这个信号量的数量和我们加载图片的线程个数一致；每取一个任务去执行，我们会让信号量减一；每完成一个任<br>务，会让信号量+1，再去取任务；目的是什么呢？为什么当我们的任务到来时，如果此时在没有空闲线程，任务则一直添加到TaskQueue中，当线程完成<br>任务，可以根据策略去TaskQueue中去取任务，只有这样，我们的LIFO才有意义。</p>\n<p>到此，我们的图片加载框架就结束了，你可以尝试下加载本地，或者去加载网络大量的图片，拼一拼加载速度~~~</p>\n<h1 id=\"4、MainActivity\"><a href=\"#4、MainActivity\" class=\"headerlink\" title=\"4、MainActivity\"></a><a name=\"t10\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t10\"></a>4、MainActivity</h1><p>现在是使用的时刻~~</p>\n<p>我在MainActivity中，我使用了Fragment，下面我贴下Fragment和布局文件的代码，具体的，大家自己看代码：</p>\n<pre class=\"brush:java;toolbar:false\">   package com.example.demo_zhy_18_networkimageloader;  \n\n    import android.content.Context;  \n    import android.os.Bundle;  \n    import android.support.v4.app.Fragment;  \n    import android.util.Log;  \n    import android.view.LayoutInflater;  \n    import android.view.View;  \n    import android.view.ViewGroup;  \n    import android.widget.ArrayAdapter;  \n    import android.widget.GridView;  \n    import android.widget.ImageView;  \n\n    import com.zhy.utils.ImageLoader;  \n    import com.zhy.utils.ImageLoader.Type;  \n    import com.zhy.utils.Images;  \n\n    public class ListImgsFragment extends Fragment  \n    {  \n        private GridView mGridView;  \n        private String[] mUrlStrs = Images.imageThumbUrls;  \n        private ImageLoader mImageLoader;  \n\n        @Override  \n        public void onCreate(Bundle savedInstanceState)  \n        {  \n            super.onCreate(savedInstanceState);  \n            mImageLoader = ImageLoader.getInstance(3, Type.LIFO);  \n        }  \n\n        @Override  \n        public View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                Bundle savedInstanceState)  \n        {  \n            View view = inflater.inflate(R.layout.fragment_list_imgs, container,  \n                    false);  \n            mGridView = (GridView) view.findViewById(R.id.id_gridview);  \n            setUpAdapter();  \n            return view;  \n        }  \n\n        private void setUpAdapter()  \n        {  \n            if (getActivity() == null || mGridView == null)  \n                return;  \n\n            if (mUrlStrs != null)  \n            {  \n                mGridView.setAdapter(new ListImgItemAdaper(getActivity(), 0,  \n                        mUrlStrs));  \n            } else  \n            {  \n                mGridView.setAdapter(null);  \n            }  \n\n        }  \n\n        private class ListImgItemAdaper extends ArrayAdapter&lt;String&gt;  \n        {  \n\n            public ListImgItemAdaper(Context context, int resource, String[] datas)  \n            {  \n                super(getActivity(), 0, datas);  \n                Log.e(&quot;TAG&quot;, &quot;ListImgItemAdaper&quot;);  \n            }  \n\n            @Override  \n            public View getView(int position, View convertView, ViewGroup parent)  \n            {  \n                if (convertView == null)  \n                {  \n                    convertView = getActivity().getLayoutInflater().inflate(  \n                            R.layout.item_fragment_list_imgs, parent, false);  \n                }  \n                ImageView imageview = (ImageView) convertView  \n                        .findViewById(R.id.id_img);  \n                imageview.setImageResource(R.drawable.pictures_no);  \n                mImageLoader.loadImage(getItem(position), imageview, true);  \n                return convertView;  \n            }  \n\n        }  \n\n    }</pre>\n\n<p>可以看到我们在getView中，使用mImageLoader.loadImage一行即完成了图片的加载。</p>\n<p>fragment_list_imgs.xml</p>\n<pre class=\"brush:xml;toolbar:false;\"> &lt;GridView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n    android:id=&quot;@+id/id_gridview&quot;  \n    android:layout_width=&quot;match_parent&quot;  \n    android:layout_height=&quot;match_parent&quot;  \n    android:horizontalSpacing=&quot;3dp&quot;  \n    android:verticalSpacing=&quot;3dp&quot;  \n    android:numColumns=&quot;3&quot;  \n   &gt;  \n\n&lt;/GridView&gt;</pre>\n\n<p>item_fragment_list_imgs.xml</p>\n<pre class=\"brush:xml;toolbar:false\">    &lt;ImageView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n        xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n        android:id=&quot;@+id/id_img&quot;  \n        android:layout_width=&quot;match_parent&quot;  \n        android:layout_height=&quot;120dp&quot;  \n        android:scaleType=&quot;centerCrop&quot; &gt;  \n\n    &lt;/ImageView&gt;</pre>\n\n<p><strong><span style=\"font-size: 24px;\">源码下载：</span></strong><a href=\"http://pan.baidu.com/s/1mgjARkG\" target=\"_blank\" rel=\"external\"><strong><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1mgjARkG</span></strong></a></p>\n","excerpt":"<h1 id=\"1、概述\"><a href=\"#1、概述\" class=\"headerlink\" title=\"1、概述\"></a>1、概述</h1><p>优秀的图片加载框架不要太多，什么UIL , Volley<br>,Picasso,Imageloader等等。但是作为一名合格的程序猿，必须懂其中的实现原理，于是乎，今天我就带大家一起来设计一个加载网络、本地<br>的图片框架。有人可能会说，自己写会不会很渣，运行效率，内存溢出神马的。放心，我们拿demo说话，拼得就是速度，奏事这么任性。<br>","more":"<br>好了，如果你看过之前的博文，类似Android<br> Handler 异步消息处理机制的妙用 创建强大的图片加载类，可能会对接下来文章理解会有很大的帮助。没有的话，就跟我往下继续走吧，也不要去看了。</p>\n<p>关于加载本地图片，当然了，我手机图片比较少，7000来张：</p>\n<p>1、首先肯定不能内存溢出，但是尼玛现在像素那么高，怎么才能保证呢？我相信利用LruCache统一管理你的图片是个不二的选择，所有的图片从LruCache里面取，保证所有的图片的内存不会超过预设的空间。</p>\n<p>2、加载速度要刚刚的，我一用力，滑动到3000张的位置，你要是还在从第一张给我加载，尼玛，你以为我打dota呢。所以我们需要引入加载策略，我们不能FIFO，我们选择LIFO，当前呈现给用户的，最新加载；当前未呈现的，选择加载。</p>\n<p>3、使用方便。一般图片都会使用GridView作为控件，在getView里面进行图片加载，当然了为了不错乱，可能还需要用户去自己setTag，自<br>己写回调设置图片。当然了，我们不需要这么麻烦，一句话IoadImage(imageview,path）即可，剩下的请交给我们的图片加载框架处理。</p>\n<p>做到以上几点，关于本地的图片加载应该就木有什么问题了。</p>\n<p>关于加载网络图片，其实原理差不多，就多了个是否启用硬盘缓存的选项，如果启用了，加载时，先从内存中查找，然后从硬盘上找，最后去网络下载。下载完成后，别忘了写入硬盘，加入内存缓存。如果没有启用，那么就直接从网络压缩获取，加入内存即可。</p>\n<h1 id=\"2、效果图\"><a href=\"#2、效果图\" class=\"headerlink\" title=\"2、效果图\"></a><a name=\"t1\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t1\"></a>2、效果图</h1><p>终于扯完了，接下来，简单看个效果图，关于加载本地图片的效果图：可以从Android<br> 超高仿微信图片选择器 图片该这么加载这篇博客中下载Demo运行。</p>\n<p>下面演示一个网络加载图片的例子:</p>\n<p><img src=\"/upload/2015/07/201507231437642603106757.gif\" alt=\"20141211214442177.gif\" title=\"201507231437642603106757.gif\"></p>\n<p>80多张从网络加载的图片，可以看到我直接拖到最后，基本是呈现在用户眼前的最先加载，要是从第一张到80多，估计也是醉了。</p>\n<p>此外：图片来自老郭的博客，感谢！！！ps:如果你觉得图片不劲爆，Day Day Up找老郭去。</p>\n<h1 id=\"3、完全解析\"><a href=\"#3、完全解析\" class=\"headerlink\" title=\"3、完全解析\"></a>3、完全解析</h1><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<h2 id=\"1、关于图片的压缩\"><a href=\"#1、关于图片的压缩\" class=\"headerlink\" title=\"1、关于图片的压缩\"></a>1、关于图片的压缩</h2><p>不管是从网络还是本地的图片，加载都需要进行压缩，然后显示：</p>\n<p>用户要你压缩显示，会给我们什么？一个imageview，一个path，我们的职责就是压缩完成后显示上去。</p>\n<h3 id=\"1、本地图片的压缩\"><a href=\"#1、本地图片的压缩\" class=\"headerlink\" title=\"1、本地图片的压缩\"></a>1、本地图片的压缩</h3><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<p><strong>a、获得imageview想要显示的大小</strong></p>\n<p>想要压缩，我们第一步应该是获得imageview想要显示的大小，没大小肯定没办法压缩？</p>\n<p>那么如何获得imageview想要显示的大小呢？</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据ImageView获适当的压缩的宽和高 \n         *  \n         * @param imageView \n         * @return \n         */  \n        public static ImageSize getImageViewSize(ImageView imageView)  \n        {  \n\n            ImageSize imageSize = new ImageSize();  \n            DisplayMetrics displayMetrics = imageView.getContext().getResources()  \n                    .getDisplayMetrics();  \n\n            LayoutParams lp = imageView.getLayoutParams();  \n\n            int width = imageView.getWidth();// 获取imageview的实际宽度  \n            if (width &lt;= 0)  \n            {  \n                width = lp.width;// 获取imageview在layout中声明的宽度  \n            }  \n            if (width &lt;= 0)  \n            {  \n                // width = imageView.getMaxWidth();// 检查最大值  \n                width = getImageViewFieldValue(imageView, &quot;mMaxWidth&quot;);  \n            }  \n            if (width &lt;= 0)  \n            {  \n                width = displayMetrics.widthPixels;  \n            }  \n\n            int height = imageView.getHeight();// 获取imageview的实际高度  \n            if (height &lt;= 0)  \n            {  \n                height = lp.height;// 获取imageview在layout中声明的宽度  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = getImageViewFieldValue(imageView, &quot;mMaxHeight&quot;);// 检查最大值  \n            }  \n            if (height &lt;= 0)  \n            {  \n                height = displayMetrics.heightPixels;  \n            }  \n            imageSize.width = width;  \n            imageSize.height = height;  \n\n            return imageSize;  \n        }  \n\n        public static class ImageSize  \n        {  \n            int width;  \n            int height;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，我们拿到imageview以后：</span></p>\n<p>首先企图通过getWidth获取显示的宽；有些时候，这个getWidth返回的是0；</p>\n<p>那么我们再去看看它有没有在布局文件中书写宽；</p>\n<p>如果布局文件中也没有精确值，那么我们再去看看它有没有设置最大值；</p>\n<p>如果最大值也没设置，那么我们只有拿出我们的终极方案，使用我们的屏幕宽度；</p>\n<p>总之，不能让它任性，我们一定要拿到一个合适的显示值。</p>\n<p>可以看到这里或者最大宽度，我们用的反射，而不是getMaxWidth()；维萨呢，因为getMaxWidth竟然要API 16，我也是醉了；为了兼容性，我们采用反射的方案。反射的代码就不贴了。</p>\n<p><strong>b、设置合适的inSampleSize</strong></p>\n<p>我们获得想要显示的大小，为了什么，还不是为了和图片的真正的宽高做比较，拿到一个合适的inSampleSize，去对图片进行压缩么。</p>\n<p>那么首先应该是拿到图片的宽和高：</p>\n<pre class=\"brush:java;toolbar:false\"> // 获得图片的宽和高，并不把图片加载到内存中  \n        BitmapFactory.Options options = new BitmapFactory.Options();  \n        options.inJustDecodeBounds = true;  \n        BitmapFactory.decodeFile(path, options);</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这三行就成功获取图片真正的宽和高了，存在我们的options里面；</span></p>\n<p>然后我们就可以happy的去计算inSampleSize了：</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据需求的宽和高以及图片实际的宽和高计算SampleSize \n         *  \n         * @param options \n         * @param width \n         * @param height \n         * @return \n         */  \n        public static int caculateInSampleSize(Options options, int reqWidth,  \n                int reqHeight)  \n        {  \n            int width = options.outWidth;  \n            int height = options.outHeight;  \n\n            int inSampleSize = 1;  \n\n            if (width &gt; reqWidth || height &gt; reqHeight)  \n            {  \n                int widthRadio = Math.round(width * 1.0f / reqWidth);  \n                int heightRadio = Math.round(height * 1.0f / reqHeight);  \n\n                inSampleSize = Math.max(widthRadio, heightRadio);  \n            }  \n\n            return inSampleSize;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">options里面存了实际的宽和高；reqWidth和reqHeight就是我们之前得到的想要显示的大小；经过比较，得到一个合适的inSampleSize;</span></p>\n<p>有了inSampleSize:</p>\n<pre class=\"brush:java;toolbar:false\">    options.inSampleSize = ImageSizeUtil.caculateInSampleSize(options,  \n                    width, height);  \n\n            // 使用获得到的InSampleSize再次解析图片  \n            options.inJustDecodeBounds = false;  \n            Bitmap bitmap = BitmapFactory.decodeFile(path, options);  \n            return bitmap;</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">经过这几行，就完成图片的压缩了。</span></p>\n<p>上述是本地图片的压缩，那么如果是网络图片呢？</p>\n<h3 id=\"2、网络图片的压缩\"><a href=\"#2、网络图片的压缩\" class=\"headerlink\" title=\"2、网络图片的压缩\"></a>2、网络图片的压缩</h3><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<p><strong>a、直接下载存到sd卡，然后采用本地的压缩方案。这种方式当前是在硬盘缓存开启的情况下，如果没有开启呢？</strong></p>\n<p><strong>b、使用BitmapFactory.decodeStream(is, null, opts);</strong></p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据url下载图片在指定的文件 \n         *  \n         * @param urlStr \n         * @param file \n         * @return \n         */  \n        public static Bitmap downloadImgByUrl(String urlStr, ImageView imageview)  \n        {  \n            FileOutputStream fos = null;  \n            InputStream is = null;  \n            try  \n            {  \n                URL url = new URL(urlStr);  \n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();  \n                is = new BufferedInputStream(conn.getInputStream());  \n                is.mark(is.available());  \n\n                Options opts = new Options();  \n                opts.inJustDecodeBounds = true;  \n                Bitmap bitmap = BitmapFactory.decodeStream(is, null, opts);  \n\n                //获取imageview想要显示的宽和高  \n                ImageSize imageViewSize = ImageSizeUtil.getImageViewSize(imageview);  \n                opts.inSampleSize = ImageSizeUtil.caculateInSampleSize(opts,  \n                        imageViewSize.width, imageViewSize.height);  \n\n                opts.inJustDecodeBounds = false;  \n                is.reset();  \n                bitmap = BitmapFactory.decodeStream(is, null, opts);  \n\n                conn.disconnect();  \n                return bitmap;  \n\n            } catch (Exception e)  \n            {  \n                e.printStackTrace();  \n            } finally  \n            {  \n                try  \n                {  \n                    if (is != null)  \n                        is.close();  \n                } catch (IOException e)  \n                {  \n                }  \n\n                try  \n                {  \n                    if (fos != null)  \n                        fos.close();  \n                } catch (IOException e)  \n                {  \n                }  \n            }  \n\n            return null;  \n\n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">基本和本地压缩差不多，也是两次取样，当然需要注意一点，我们的is进行了包装，以便可以进行reset()；直接返回的is是不能使用两次的。</span></p>\n<p>到此，图片压缩说完了。</p>\n<h2 id=\"2、图片加载框架的架构\"><a href=\"#2、图片加载框架的架构\" class=\"headerlink\" title=\"2、图片加载框架的架构\"></a><a name=\"t6\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t6\"></a>2、图片加载框架的架构</h2><p>我们的图片压缩加载完了，那么就应该放入我们的LruCache，然后设置到我们的ImageView上。</p>\n<p>好了，接下来我们来说说我们的这个框架的架构；</p>\n<p>1、单例，包含一个LruCache用于管理我们的图片；</p>\n<p>2、任务队列，我们每来一次加载图片的请求，我们会封装成Task存入我们的TaskQueue;</p>\n<p>3、包含一个后台线程，这个线程在第一次初始化实例的时候启动，然后会一直在后台运行；任务呢？还记得我们有个任务队列么，有队列存任务，得有人干活呀；<br>所以，当每来一次加载图片请求的时候，我们同时发一个消息到后台线程，后台线程去使用线程池去TaskQueue去取一个任务执行；</p>\n<p>4、调度策略；3中说了，后台线程去TaskQueue去取一个任务，这个任务不是随便取的，有策略可以选择，一个是FIFO，一个是LIFO，我倾向于后者。</p>\n<p>好了，基本就这些结构，接下来看我们具体的实现。</p>\n<h1 id=\"3、具体的实现\"><a href=\"#3、具体的实现\" class=\"headerlink\" title=\"3、具体的实现\"></a><a name=\"t7\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t7\"></a>3、具体的实现</h1><div style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\"><br></div>\n\n<h2 id=\"1、构造方法\"><a href=\"#1、构造方法\" class=\"headerlink\" title=\"1、构造方法\"></a><a name=\"t8\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t8\"></a>1、构造方法</h2><pre class=\"brush:java;toolbar:false\">    public static ImageLoader getInstance(int threadCount, Type type)  \n        {  \n            if (mInstance == null)  \n            {  \n                synchronized (ImageLoader.class)  \n                {  \n                    if (mInstance == null)  \n                    {  \n                        mInstance = new ImageLoader(threadCount, type);  \n                    }  \n                }  \n            }  \n            return mInstance;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">这个就不用说了，重点看我们的构造方法</span></p>\n<pre class=\"brush:java;toolbar:false\">  /** \n     * 图片加载类 \n     *  \n     * @author zhy \n     *  \n     */  \n    public class ImageLoader  \n    {  \n        private static ImageLoader mInstance;  \n\n        /** \n         * 图片缓存的核心对象 \n         */  \n        private LruCache&lt;String, Bitmap&gt; mLruCache;  \n        /** \n         * 线程池 \n         */  \n        private ExecutorService mThreadPool;  \n        private static final int DEAFULT_THREAD_COUNT = 1;  \n        /** \n         * 队列的调度方式 \n         */  \n        private Type mType = Type.LIFO;  \n        /** \n         * 任务队列 \n         */  \n        private LinkedList&lt;Runnable&gt; mTaskQueue;  \n        /** \n         * 后台轮询线程 \n         */  \n        private Thread mPoolThread;  \n        private Handler mPoolThreadHandler;  \n        /** \n         * UI线程中的Handler \n         */  \n        private Handler mUIHandler;  \n\n        private Semaphore mSemaphorePoolThreadHandler = new Semaphore(0);  \n        private Semaphore mSemaphoreThreadPool;  \n\n        private boolean isDiskCacheEnable = true;  \n\n        private static final String TAG = &quot;ImageLoader&quot;;  \n\n        public enum Type  \n        {  \n            FIFO, LIFO;  \n        }  \n\n        private ImageLoader(int threadCount, Type type)  \n        {  \n            init(threadCount, type);  \n        }  \n\n        /** \n         * 初始化 \n         *  \n         * @param threadCount \n         * @param type \n         */  \n        private void init(int threadCount, Type type)  \n        {  \n            initBackThread();  \n\n            // 获取我们应用的最大可用内存  \n            int maxMemory = (int) Runtime.getRuntime().maxMemory();  \n            int cacheMemory = maxMemory / 8;  \n            mLruCache = new LruCache&lt;String, Bitmap&gt;(cacheMemory)  \n            {  \n                @Override  \n                protected int sizeOf(String key, Bitmap value)  \n                {  \n                    return value.getRowBytes() * value.getHeight();  \n                }  \n\n            };  \n\n            // 创建线程池  \n            mThreadPool = Executors.newFixedThreadPool(threadCount);  \n            mTaskQueue = new LinkedList&lt;Runnable&gt;();  \n            mType = type;  \n            mSemaphoreThreadPool = new Semaphore(threadCount);  \n        }  \n\n        /** \n         * 初始化后台轮询线程 \n         */  \n        private void initBackThread()  \n        {  \n            // 后台轮询线程  \n            mPoolThread = new Thread()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Looper.prepare();  \n                    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());  \n                            try  \n                            {  \n                                mSemaphoreThreadPool.acquire();  \n                            } catch (InterruptedException e)  \n                            {  \n                            }  \n                        }  \n                    };  \n                    // 释放一个信号量  \n                    mSemaphorePoolThreadHandler.release();  \n                    Looper.loop();  \n                };  \n            };  \n\n            mPoolThread.start();  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">在贴构造的时候，顺便贴出所有的成员变量；</span></p>\n<p>在构造中我们调用init，init中可以设置后台加载图片线程数量和加载策略；init中首先初始化后台线程initBackThread(),可以看<br>到这个后台线程，实际上是个Looper最终在那不断的loop，我们还初始化了一个mPoolThreadHandler用于发送消息到此线程；</p>\n<p>接下来就是初始化mLruCache  ， mThreadPool ，mTaskQueue 等；</p>\n<h2 id=\"2、loadImage\"><a href=\"#2、loadImage\" class=\"headerlink\" title=\"2、loadImage\"></a><a name=\"t9\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t9\"></a>2、loadImage</h2><p>构造完成以后，当然是使用了，用户调用loadImage传入(final String path, final ImageView imageView,final boolean isFromNet)就可以完成本地或者网络图片的加载。</p>\n<pre class=\"brush:java;toolbar:false\"> /** \n         * 根据path为imageview设置图片 \n         *  \n         * @param path \n         * @param imageView \n         */  \n        public void loadImage(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            imageView.setTag(path);  \n            if (mUIHandler == null)  \n            {  \n                mUIHandler = new Handler()  \n                {  \n                    public void handleMessage(Message msg)  \n                    {  \n                        // 获取得到图片，为imageview回调设置图片  \n                        ImgBeanHolder holder = (ImgBeanHolder) msg.obj;  \n                        Bitmap bm = holder.bitmap;  \n                        ImageView imageview = holder.imageView;  \n                        String path = holder.path;  \n                        // 将path与getTag存储路径进行比较  \n                        if (imageview.getTag().toString().equals(path))  \n                        {  \n                            imageview.setImageBitmap(bm);  \n                        }  \n                    };  \n                };  \n            }  \n\n            // 根据path在缓存中获取bitmap  \n            Bitmap bm = getBitmapFromLruCache(path);  \n\n            if (bm != null)  \n            {  \n                refreashBitmap(path, imageView, bm);  \n            } else  \n            {  \n                addTask(buildTask(path, imageView, isFromNet));  \n            }  \n\n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">首先我们为imageview.setTag；然后初始化一个mUIHandler，不用猜，这个mUIHandler用户更新我们的imageview，因为这个方法肯定是主线程调用的。</span></p>\n<p>然后调用：getBitmapFromLruCache(path);根据path在缓存中获取bitmap；如果找到那么直接去设置我们的图片；</p>\n<pre class=\"brush:java;toolbar:false\"> private void refreashBitmap(final String path, final ImageView imageView,  \n            Bitmap bm)  \n    {  \n        Message message = Message.obtain();  \n        ImgBeanHolder holder = new ImgBeanHolder();  \n        holder.bitmap = bm;  \n        holder.path = path;  \n        holder.imageView = imageView;  \n        message.obj = holder;  \n        mUIHandler.sendMessage(message);  \n    }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">可以看到，如果找到图片，则直接使用UIHandler去发送一个消息，当然了携带了一些必要的参数，然后UIHandler的handleMessage中完成图片的设置；</span></p>\n<p>handleMessage中拿到path,bitmap,imageview；记得必须要：</p>\n<p>// 将path与getTag存储路径进行比较<br><span style=\"white-space:pre\"></span></p>\n<pre class=\"brush:java;toolbar:false\">if (imageview.getTag().toString().equals(path))\n{\nimageview.setImageBitmap(bm);\n}</pre>\n\n<p>否则会造成图片混乱。</p>\n<p>如果没找到，则通过buildTask去新建一个任务，在addTask到任务队列。</p>\n<p>buildTask就比较复杂了，因为还涉及到本地和网络，所以我们先看addTask代码：</p>\n<pre class=\"brush:java;toolbar:false\"> private synchronized void addTask(Runnable runnable)  \n        {  \n            mTaskQueue.add(runnable);  \n            // if(mPoolThreadHandler==null)wait();  \n            try  \n            {  \n                if (mPoolThreadHandler == null)  \n                    mSemaphorePoolThreadHandler.acquire();  \n            } catch (InterruptedException e)  \n            {  \n            }  \n            mPoolThreadHandler.sendEmptyMessage(0x110);  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">很简单，就是runnable加入TaskQueue，与此同时使用mPoolThreadHandler（这个handler还记得么，用于和我们后台线程交互。）去发送一个消息给后台线程，叫它去取出一个任务执行；具体代码：</span></p>\n<pre class=\"brush:java;toolbar:false\">    mPoolThreadHandler = new Handler()  \n                    {  \n                        @Override  \n                        public void handleMessage(Message msg)  \n                        {  \n                            // 线程池去取出一个任务进行执行  \n                            mThreadPool.execute(getTask());</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">直接使用mThreadPool线程池，然后使用getTask去取一个任务。</span></p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 从任务队列取出一个方法 \n         *  \n         * @return \n         */  \n        private Runnable getTask()  \n        {  \n            if (mType == Type.FIFO)  \n            {  \n                return mTaskQueue.removeFirst();  \n            } else if (mType == Type.LIFO)  \n            {  \n                return mTaskQueue.removeLast();  \n            }  \n            return null;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">getTask代码也比较简单，就是根据Type从任务队列头或者尾进行取任务。</span></p>\n<p>现在你会不会好奇，任务里面到底什么代码？其实我们也就剩最后一段代码了buildTask</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 根据传入的参数，新建一个任务 \n         *  \n         * @param path \n         * @param imageView \n         * @param isFromNet \n         * @return \n         */  \n        private Runnable buildTask(final String path, final ImageView imageView,  \n                final boolean isFromNet)  \n        {  \n            return new Runnable()  \n            {  \n                @Override  \n                public void run()  \n                {  \n                    Bitmap bm = null;  \n                    if (isFromNet)  \n                    {  \n                        File file = getDiskCacheDir(imageView.getContext(),  \n                                md5(path));  \n                        if (file.exists())// 如果在缓存文件中发现  \n                        {  \n                            Log.e(TAG, &quot;find image :&quot; + path + &quot; in disk cache .&quot;);  \n                            bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                    imageView);  \n                        } else  \n                        {  \n                            if (isDiskCacheEnable)// 检测是否开启硬盘缓存  \n                            {  \n                                boolean downloadState = DownloadImgUtils  \n                                        .downloadImgByUrl(path, file);  \n                                if (downloadState)// 如果下载成功  \n                                {  \n                                    Log.e(TAG,  \n                                            &quot;download image :&quot; + path  \n                                                    + &quot; to disk cache . path is &quot;  \n                                                    + file.getAbsolutePath());  \n                                    bm = loadImageFromLocal(file.getAbsolutePath(),  \n                                            imageView);  \n                                }  \n                            } else  \n                            // 直接从网络加载  \n                            {  \n                                Log.e(TAG, &quot;load image :&quot; + path + &quot; to memory.&quot;);  \n                                bm = DownloadImgUtils.downloadImgByUrl(path,  \n                                        imageView);  \n                            }  \n                        }  \n                    } else  \n                    {  \n                        bm = loadImageFromLocal(path, imageView);  \n                    }  \n                    // 3、把图片加入到缓存  \n                    addBitmapToLruCache(path, bm);  \n                    refreashBitmap(path, imageView, bm);  \n                    mSemaphoreThreadPool.release();  \n                }  \n\n\n            };  \n        }  \n\n        private Bitmap loadImageFromLocal(final String path,  \n                final ImageView imageView)  \n        {  \n            Bitmap bm;  \n            // 加载图片  \n            // 图片的压缩  \n            // 1、获得图片需要显示的大小  \n            ImageSize imageSize = ImageSizeUtil.getImageViewSize(imageView);  \n            // 2、压缩图片  \n            bm = decodeSampledBitmapFromPath(path, imageSize.width,  \n                    imageSize.height);  \n            return bm;  \n        }</pre>\n\n<p><span style=\"color:rgb(51,51,51); font-family:Arial; font-size:14px; line-height:26px\">我们新建任务，说明在内存中没有找到缓存的bitmap；我们的任务就是去根据path加载压缩后的bitmap返回即可，然后加入LruCache，设置回调显示。</span></p>\n<p>首先我们判断是否是网络任务？</p>\n<p>如果是，首先去硬盘缓存中找一下，（硬盘中文件名为：根据path生成的md5为名称）。</p>\n<p>如果硬盘缓存中没有，那么去判断是否开启了硬盘缓存：</p>\n<p><span style=\"white-space:pre\"></span>开启了的话：下载图片，使用loadImageFromLocal本地加载图片的方式进行加载（压缩的代码前面已经详细说过）；</p>\n<pre><code>如果没有开启：则直接从网络获取（压缩获取的代码，前面详细说过）；\n</code></pre><p>如果不是网络图片：直接loadImageFromLocal本地加载图片的方式进行加载</p>\n<p>经过上面，就获得了bitmap；然后加入addBitmapToLruCache，refreashBitmap回调显示图片。</p>\n<pre class=\"brush:java;toolbar:false\">    /** \n         * 将图片加入LruCache \n         *  \n         * @param path \n         * @param bm \n         */  \n        protected void addBitmapToLruCache(String path, Bitmap bm)  \n        {  \n            if (getBitmapFromLruCache(path) == null)  \n            {  \n                if (bm != null)  \n                    mLruCache.put(path, bm);  \n            }  \n        }</pre>\n\n<p>到此，我们所有的代码就分析完成了；</p>\n<p>缓存的图片位置：在SD卡的Android/data/项目packageName/cache中：</p>\n<p><img src=\"/upload/2015/07/201507231437642625119761.png\" alt=\"20141211225817125.png\" title=\"201507231437642625119761.png\"></p>\n<p>不过有些地方需要注意：就是在代码中，你会看到一些信号量的身影：</p>\n<p>第一个：mSemaphorePoolThreadHandler = new Semaphore(0);<br>用于控制我们的mPoolThreadHandler的初始化完成，我们在使用mPoolThreadHandler会进行判空，如果为null，会通过<br>mSemaphorePoolThreadHandler.acquire()进行阻塞；当mPoolThreadHandler初始化结束，我们会调<br>用.release();解除阻塞。</p>\n<p>第二个：mSemaphoreThreadPool = new<br>Semaphore(threadCount);这个信号量的数量和我们加载图片的线程个数一致；每取一个任务去执行，我们会让信号量减一；每完成一个任<br>务，会让信号量+1，再去取任务；目的是什么呢？为什么当我们的任务到来时，如果此时在没有空闲线程，任务则一直添加到TaskQueue中，当线程完成<br>任务，可以根据策略去TaskQueue中去取任务，只有这样，我们的LIFO才有意义。</p>\n<p>到此，我们的图片加载框架就结束了，你可以尝试下加载本地，或者去加载网络大量的图片，拼一拼加载速度~~~</p>\n<h1 id=\"4、MainActivity\"><a href=\"#4、MainActivity\" class=\"headerlink\" title=\"4、MainActivity\"></a><a name=\"t10\"></a><a target=\"_blank\" style=\"color:rgb(51,102,153)\" name=\"t10\"></a>4、MainActivity</h1><p>现在是使用的时刻~~</p>\n<p>我在MainActivity中，我使用了Fragment，下面我贴下Fragment和布局文件的代码，具体的，大家自己看代码：</p>\n<pre class=\"brush:java;toolbar:false\">   package com.example.demo_zhy_18_networkimageloader;  \n\n    import android.content.Context;  \n    import android.os.Bundle;  \n    import android.support.v4.app.Fragment;  \n    import android.util.Log;  \n    import android.view.LayoutInflater;  \n    import android.view.View;  \n    import android.view.ViewGroup;  \n    import android.widget.ArrayAdapter;  \n    import android.widget.GridView;  \n    import android.widget.ImageView;  \n\n    import com.zhy.utils.ImageLoader;  \n    import com.zhy.utils.ImageLoader.Type;  \n    import com.zhy.utils.Images;  \n\n    public class ListImgsFragment extends Fragment  \n    {  \n        private GridView mGridView;  \n        private String[] mUrlStrs = Images.imageThumbUrls;  \n        private ImageLoader mImageLoader;  \n\n        @Override  \n        public void onCreate(Bundle savedInstanceState)  \n        {  \n            super.onCreate(savedInstanceState);  \n            mImageLoader = ImageLoader.getInstance(3, Type.LIFO);  \n        }  \n\n        @Override  \n        public View onCreateView(LayoutInflater inflater, ViewGroup container,  \n                Bundle savedInstanceState)  \n        {  \n            View view = inflater.inflate(R.layout.fragment_list_imgs, container,  \n                    false);  \n            mGridView = (GridView) view.findViewById(R.id.id_gridview);  \n            setUpAdapter();  \n            return view;  \n        }  \n\n        private void setUpAdapter()  \n        {  \n            if (getActivity() == null || mGridView == null)  \n                return;  \n\n            if (mUrlStrs != null)  \n            {  \n                mGridView.setAdapter(new ListImgItemAdaper(getActivity(), 0,  \n                        mUrlStrs));  \n            } else  \n            {  \n                mGridView.setAdapter(null);  \n            }  \n\n        }  \n\n        private class ListImgItemAdaper extends ArrayAdapter&lt;String&gt;  \n        {  \n\n            public ListImgItemAdaper(Context context, int resource, String[] datas)  \n            {  \n                super(getActivity(), 0, datas);  \n                Log.e(&quot;TAG&quot;, &quot;ListImgItemAdaper&quot;);  \n            }  \n\n            @Override  \n            public View getView(int position, View convertView, ViewGroup parent)  \n            {  \n                if (convertView == null)  \n                {  \n                    convertView = getActivity().getLayoutInflater().inflate(  \n                            R.layout.item_fragment_list_imgs, parent, false);  \n                }  \n                ImageView imageview = (ImageView) convertView  \n                        .findViewById(R.id.id_img);  \n                imageview.setImageResource(R.drawable.pictures_no);  \n                mImageLoader.loadImage(getItem(position), imageview, true);  \n                return convertView;  \n            }  \n\n        }  \n\n    }</pre>\n\n<p>可以看到我们在getView中，使用mImageLoader.loadImage一行即完成了图片的加载。</p>\n<p>fragment_list_imgs.xml</p>\n<pre class=\"brush:xml;toolbar:false;\"> &lt;GridView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n    android:id=&quot;@+id/id_gridview&quot;  \n    android:layout_width=&quot;match_parent&quot;  \n    android:layout_height=&quot;match_parent&quot;  \n    android:horizontalSpacing=&quot;3dp&quot;  \n    android:verticalSpacing=&quot;3dp&quot;  \n    android:numColumns=&quot;3&quot;  \n   &gt;  \n\n&lt;/GridView&gt;</pre>\n\n<p>item_fragment_list_imgs.xml</p>\n<pre class=\"brush:xml;toolbar:false\">    &lt;ImageView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;  \n        xmlns:tools=&quot;http://schemas.android.com/tools&quot;  \n        android:id=&quot;@+id/id_img&quot;  \n        android:layout_width=&quot;match_parent&quot;  \n        android:layout_height=&quot;120dp&quot;  \n        android:scaleType=&quot;centerCrop&quot; &gt;  \n\n    &lt;/ImageView&gt;</pre>\n\n<p><strong><span style=\"font-size: 24px;\">源码下载：</span></strong><a href=\"http://pan.baidu.com/s/1mgjARkG\"><strong><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1mgjARkG</span></strong></a></p>"},{"title":"Android 自动换行流式布局的多行多列RadioGroup","date":"2015-07-12T15:05:56.000Z","_content":"<!-- more -->\n![04155106-9f598b9f5ed34195ab7482d69729fb26.png](/upload/2015/07/201507121436713650204443.png \"201507121436713650204443.png\")\n\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.RadioGroup;\n/**\n * 流式布局的RadioGroup\n */\npublic class FlowRadioGroup extends RadioGroup {\n    \n    public FlowRadioGroup(Context context) {\n        super(context);\n    }\n    public FlowRadioGroup(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        int childCount = getChildCount();\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int index = 0; index &lt; childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                // 此处增加onlayout中的换行判断，用于计算所需的高度\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i &lt; childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}</pre>","source":"_posts/Android-自动换行流式布局的多行多列RadioGroup.md","raw":"---\ntitle: Android 自动换行流式布局的多行多列RadioGroup\ncategories:\n- 文章\ndate: 2015-07-12 23:05:56\n---\n<!-- more -->\n![04155106-9f598b9f5ed34195ab7482d69729fb26.png](/upload/2015/07/201507121436713650204443.png \"201507121436713650204443.png\")\n\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.RadioGroup;\n/**\n * 流式布局的RadioGroup\n */\npublic class FlowRadioGroup extends RadioGroup {\n    \n    public FlowRadioGroup(Context context) {\n        super(context);\n    }\n    public FlowRadioGroup(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        int childCount = getChildCount();\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int index = 0; index &lt; childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                // 此处增加onlayout中的换行判断，用于计算所需的高度\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i &lt; childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}</pre>","slug":"Android-自动换行流式布局的多行多列RadioGroup","published":1,"updated":"2016-03-18T04:03:24.299Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylu000hc4ubbhb042y3","content":"<a id=\"more\"></a>\n<p><img src=\"/upload/2015/07/201507121436713650204443.png\" alt=\"04155106-9f598b9f5ed34195ab7482d69729fb26.png\" title=\"201507121436713650204443.png\"></p>\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.RadioGroup;\n/**\n * 流式布局的RadioGroup\n */\npublic class FlowRadioGroup extends RadioGroup {\n\n    public FlowRadioGroup(Context context) {\n        super(context);\n    }\n    public FlowRadioGroup(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        int childCount = getChildCount();\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int index = 0; index &lt; childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                // 此处增加onlayout中的换行判断，用于计算所需的高度\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i &lt; childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}</pre>","excerpt":"","more":"<p><img src=\"/upload/2015/07/201507121436713650204443.png\" alt=\"04155106-9f598b9f5ed34195ab7482d69729fb26.png\" title=\"201507121436713650204443.png\"></p>\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.View;\nimport android.widget.RadioGroup;\n/**\n * 流式布局的RadioGroup\n */\npublic class FlowRadioGroup extends RadioGroup {\n\n    public FlowRadioGroup(Context context) {\n        super(context);\n    }\n    public FlowRadioGroup(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxWidth = MeasureSpec.getSize(widthMeasureSpec);\n        int childCount = getChildCount();\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int index = 0; index &lt; childCount; index++) {\n            final View child = getChildAt(index);\n            if (child.getVisibility() != View.GONE) {\n                child.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n                // 此处增加onlayout中的换行判断，用于计算所需的高度\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n            }\n        }\n        // 设置容器所需的宽度和高度\n        setMeasuredDimension(maxWidth, y);\n    }\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        final int childCount = getChildCount();\n        int maxWidth = r - l;\n        int x = 0;\n        int y = 0;\n        int row = 0;\n        for (int i = 0; i &lt; childCount; i++) {\n            final View child = this.getChildAt(i);\n            if (child.getVisibility() != View.GONE) {\n                int width = child.getMeasuredWidth();\n                int height = child.getMeasuredHeight();\n                x += width;\n                y = row * height + height;\n                if (x &gt; maxWidth) {\n                    x = width;\n                    row++;\n                    y = row * height + height;\n                }\n                child.layout(x - width, y - height, x, y);\n            }\n        }\n    }\n}</pre>"},{"title":"Android高性能开发框架《KJFrameForAndroid》","date":"2015-06-17T12:29:20.000Z","_content":"\nKJFrameForAndroid 又叫KJLibrary，是一个帮助快速开发的框架。使用KJFrameForAndroid，你可以只用一行代码就完成http请求、网络图片加载、数据库数据保存或读取。\nKJFrameForAndroid 包含了几乎全部Android开发中必须的工具类。\nKJFrameForAndroid 参考了许多国际上著名的Android框架如Volley、sync-http，上手使用门槛更低，更全面的http请求，考虑周全的bitmap网络加载，完善的功能且不受混淆影响...\nKJFrameForAndroid 最低兼容android 3.0\n<!-- more -->\n很多朋友在问，KJFrameForAndroid与xUtils、afinal、thinkAndroid这类框架有什么区别，在你看过了这类框架的源代码后就会很直观的发现：**KJFrameForAndroid的项目结构与代码更加直观明了易懂，项目demo与API文档更加齐全，更关键的是使用起来更加简单易用，容易上手。**\n\n===========================各模块介绍======================\n**UILibrary模块**\nUILibrary包含两个部分Widget(控件)、Topology(Android框架结构继承链)\n\nUILibrary -&gt; Widget控件部分 \n主要封装了常用的UI控件，为了不让项目jar包过大，我们只引入了开发中一定会用到的控件，例如：可上下拉的KJListView、可上下拉的\nKJScrollView、可以双指缩放双击缩放双指旋转的ScaleImageView、等等......更多内容请自行查看项目文件中\norg.kymjs.aframe.widget包下的内容\nUILibrary -&gt; Topology拓扑部分 \n包含一个使用IOC设计思想的控件初始化方式：可通过注解的方式进行UI绑定，与设置监听，在Activity和Fragment中均可以通过一行代码绑\n定控件并实现点击监听；还包含了在目前应用开发中常见的布局界面，如侧滑效果，高效的底部TAB导航，3D效果的切换。同时UILibrary为开发者定\n义了完善的BaseActivity和BaseFragment，开发者只需手动继承就可以获得Topology部分的全部功能。\n\n**BitmapLibrary模块**\n一行代码实现网络图片加载（可以是imageview或任何View）：kjb.display(view, &quot;http://xxx.xxx.xxx&quot;);\n任何View(ImageView设置src，普通View设置bg)加载图片的时候都无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象，同时无需考虑图片加载过程中出现的OOM。默认使用内存lru算法+磁盘lru算法缓存图片\n\n**HttpLibrary模块**\n可以一行代码实现Http请求：kjh.urlPost(&quot;http://www.eoeandroid.com&quot;, params, callback);\n还可以一行代码实现文件或图片的上传与下载。 kjh.download( url, params, callback);\nKJLibrary默认对所有Http通信的数据做了缓存处理，缓存时间为5分钟。这么做的目的不仅是为了节省用户手机流量，同时是为了减少服务器压力\nHttpLibrary模块使用HttpClient与HttpUrlConnection两种实现方式实现网络通信、数据上传、多线程断点下载。\n\n**DBLibrary模块**\n可以一行代码对数据库进行增删改查等操作：kjdb.update(); kjdb.add(); .......\n包含了android中的orm框架，使用了线程池对sqlite进行操作，一行代码就可以进行增删改查。支持一对多，多对一等查询。\n\ngithub项目地址：\n[https://github.com/kymjs/KJFrameForAndroid](https://github.com/kymjs/KJFrameForAndroid)\n备用项目地址：\n[http://git.oschina.net/kymjs/KJFrameForAndroid](http://git.oschina.net/kymjs/KJFrameForAndroid)","source":"_posts/Android高性能开发框架《KJFrameForAndroid》.md","raw":"---\ntitle: Android高性能开发框架《KJFrameForAndroid》\ncategories:\n- 开源项目\ndate: 2015-06-17 20:29:20\n---\n\nKJFrameForAndroid 又叫KJLibrary，是一个帮助快速开发的框架。使用KJFrameForAndroid，你可以只用一行代码就完成http请求、网络图片加载、数据库数据保存或读取。\nKJFrameForAndroid 包含了几乎全部Android开发中必须的工具类。\nKJFrameForAndroid 参考了许多国际上著名的Android框架如Volley、sync-http，上手使用门槛更低，更全面的http请求，考虑周全的bitmap网络加载，完善的功能且不受混淆影响...\nKJFrameForAndroid 最低兼容android 3.0\n<!-- more -->\n很多朋友在问，KJFrameForAndroid与xUtils、afinal、thinkAndroid这类框架有什么区别，在你看过了这类框架的源代码后就会很直观的发现：**KJFrameForAndroid的项目结构与代码更加直观明了易懂，项目demo与API文档更加齐全，更关键的是使用起来更加简单易用，容易上手。**\n\n===========================各模块介绍======================\n**UILibrary模块**\nUILibrary包含两个部分Widget(控件)、Topology(Android框架结构继承链)\n\nUILibrary -&gt; Widget控件部分 \n主要封装了常用的UI控件，为了不让项目jar包过大，我们只引入了开发中一定会用到的控件，例如：可上下拉的KJListView、可上下拉的\nKJScrollView、可以双指缩放双击缩放双指旋转的ScaleImageView、等等......更多内容请自行查看项目文件中\norg.kymjs.aframe.widget包下的内容\nUILibrary -&gt; Topology拓扑部分 \n包含一个使用IOC设计思想的控件初始化方式：可通过注解的方式进行UI绑定，与设置监听，在Activity和Fragment中均可以通过一行代码绑\n定控件并实现点击监听；还包含了在目前应用开发中常见的布局界面，如侧滑效果，高效的底部TAB导航，3D效果的切换。同时UILibrary为开发者定\n义了完善的BaseActivity和BaseFragment，开发者只需手动继承就可以获得Topology部分的全部功能。\n\n**BitmapLibrary模块**\n一行代码实现网络图片加载（可以是imageview或任何View）：kjb.display(view, &quot;http://xxx.xxx.xxx&quot;);\n任何View(ImageView设置src，普通View设置bg)加载图片的时候都无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象，同时无需考虑图片加载过程中出现的OOM。默认使用内存lru算法+磁盘lru算法缓存图片\n\n**HttpLibrary模块**\n可以一行代码实现Http请求：kjh.urlPost(&quot;http://www.eoeandroid.com&quot;, params, callback);\n还可以一行代码实现文件或图片的上传与下载。 kjh.download( url, params, callback);\nKJLibrary默认对所有Http通信的数据做了缓存处理，缓存时间为5分钟。这么做的目的不仅是为了节省用户手机流量，同时是为了减少服务器压力\nHttpLibrary模块使用HttpClient与HttpUrlConnection两种实现方式实现网络通信、数据上传、多线程断点下载。\n\n**DBLibrary模块**\n可以一行代码对数据库进行增删改查等操作：kjdb.update(); kjdb.add(); .......\n包含了android中的orm框架，使用了线程池对sqlite进行操作，一行代码就可以进行增删改查。支持一对多，多对一等查询。\n\ngithub项目地址：\n[https://github.com/kymjs/KJFrameForAndroid](https://github.com/kymjs/KJFrameForAndroid)\n备用项目地址：\n[http://git.oschina.net/kymjs/KJFrameForAndroid](http://git.oschina.net/kymjs/KJFrameForAndroid)","slug":"Android高性能开发框架《KJFrameForAndroid》","published":1,"updated":"2016-03-18T04:02:25.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylw000mc4ubni8z8ygv","content":"<p>KJFrameForAndroid 又叫KJLibrary，是一个帮助快速开发的框架。使用KJFrameForAndroid，你可以只用一行代码就完成http请求、网络图片加载、数据库数据保存或读取。<br>KJFrameForAndroid 包含了几乎全部Android开发中必须的工具类。<br>KJFrameForAndroid 参考了许多国际上著名的Android框架如Volley、sync-http，上手使用门槛更低，更全面的http请求，考虑周全的bitmap网络加载，完善的功能且不受混淆影响…<br>KJFrameForAndroid 最低兼容android 3.0<br><a id=\"more\"></a><br>很多朋友在问，KJFrameForAndroid与xUtils、afinal、thinkAndroid这类框架有什么区别，在你看过了这类框架的源代码后就会很直观的发现：<strong>KJFrameForAndroid的项目结构与代码更加直观明了易懂，项目demo与API文档更加齐全，更关键的是使用起来更加简单易用，容易上手。</strong></p>\n<p>===========================各模块介绍======================<br><strong>UILibrary模块</strong><br>UILibrary包含两个部分Widget(控件)、Topology(Android框架结构继承链)</p>\n<p>UILibrary -&gt; Widget控件部分<br>主要封装了常用的UI控件，为了不让项目jar包过大，我们只引入了开发中一定会用到的控件，例如：可上下拉的KJListView、可上下拉的<br>KJScrollView、可以双指缩放双击缩放双指旋转的ScaleImageView、等等……更多内容请自行查看项目文件中<br>org.kymjs.aframe.widget包下的内容<br>UILibrary -&gt; Topology拓扑部分<br>包含一个使用IOC设计思想的控件初始化方式：可通过注解的方式进行UI绑定，与设置监听，在Activity和Fragment中均可以通过一行代码绑<br>定控件并实现点击监听；还包含了在目前应用开发中常见的布局界面，如侧滑效果，高效的底部TAB导航，3D效果的切换。同时UILibrary为开发者定<br>义了完善的BaseActivity和BaseFragment，开发者只需手动继承就可以获得Topology部分的全部功能。</p>\n<p><strong>BitmapLibrary模块</strong><br>一行代码实现网络图片加载（可以是imageview或任何View）：kjb.display(view, &quot;<a href=\"http://xxx.xxx.xxx&amp;quot\" target=\"_blank\" rel=\"external\">http://xxx.xxx.xxx&amp;quot</a>;);<br>任何View(ImageView设置src，普通View设置bg)加载图片的时候都无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象，同时无需考虑图片加载过程中出现的OOM。默认使用内存lru算法+磁盘lru算法缓存图片</p>\n<p><strong>HttpLibrary模块</strong><br>可以一行代码实现Http请求：kjh.urlPost(&quot;<a href=\"http://www.eoeandroid.com&amp;quot\" target=\"_blank\" rel=\"external\">http://www.eoeandroid.com&amp;quot</a>;, params, callback);<br>还可以一行代码实现文件或图片的上传与下载。 kjh.download( url, params, callback);<br>KJLibrary默认对所有Http通信的数据做了缓存处理，缓存时间为5分钟。这么做的目的不仅是为了节省用户手机流量，同时是为了减少服务器压力<br>HttpLibrary模块使用HttpClient与HttpUrlConnection两种实现方式实现网络通信、数据上传、多线程断点下载。</p>\n<p><strong>DBLibrary模块</strong><br>可以一行代码对数据库进行增删改查等操作：kjdb.update(); kjdb.add(); …….<br>包含了android中的orm框架，使用了线程池对sqlite进行操作，一行代码就可以进行增删改查。支持一对多，多对一等查询。</p>\n<p>github项目地址：<br><a href=\"https://github.com/kymjs/KJFrameForAndroid\" target=\"_blank\" rel=\"external\">https://github.com/kymjs/KJFrameForAndroid</a><br>备用项目地址：<br><a href=\"http://git.oschina.net/kymjs/KJFrameForAndroid\" target=\"_blank\" rel=\"external\">http://git.oschina.net/kymjs/KJFrameForAndroid</a></p>\n","excerpt":"<p>KJFrameForAndroid 又叫KJLibrary，是一个帮助快速开发的框架。使用KJFrameForAndroid，你可以只用一行代码就完成http请求、网络图片加载、数据库数据保存或读取。<br>KJFrameForAndroid 包含了几乎全部Android开发中必须的工具类。<br>KJFrameForAndroid 参考了许多国际上著名的Android框架如Volley、sync-http，上手使用门槛更低，更全面的http请求，考虑周全的bitmap网络加载，完善的功能且不受混淆影响…<br>KJFrameForAndroid 最低兼容android 3.0<br>","more":"<br>很多朋友在问，KJFrameForAndroid与xUtils、afinal、thinkAndroid这类框架有什么区别，在你看过了这类框架的源代码后就会很直观的发现：<strong>KJFrameForAndroid的项目结构与代码更加直观明了易懂，项目demo与API文档更加齐全，更关键的是使用起来更加简单易用，容易上手。</strong></p>\n<p>===========================各模块介绍======================<br><strong>UILibrary模块</strong><br>UILibrary包含两个部分Widget(控件)、Topology(Android框架结构继承链)</p>\n<p>UILibrary -&gt; Widget控件部分<br>主要封装了常用的UI控件，为了不让项目jar包过大，我们只引入了开发中一定会用到的控件，例如：可上下拉的KJListView、可上下拉的<br>KJScrollView、可以双指缩放双击缩放双指旋转的ScaleImageView、等等……更多内容请自行查看项目文件中<br>org.kymjs.aframe.widget包下的内容<br>UILibrary -&gt; Topology拓扑部分<br>包含一个使用IOC设计思想的控件初始化方式：可通过注解的方式进行UI绑定，与设置监听，在Activity和Fragment中均可以通过一行代码绑<br>定控件并实现点击监听；还包含了在目前应用开发中常见的布局界面，如侧滑效果，高效的底部TAB导航，3D效果的切换。同时UILibrary为开发者定<br>义了完善的BaseActivity和BaseFragment，开发者只需手动继承就可以获得Topology部分的全部功能。</p>\n<p><strong>BitmapLibrary模块</strong><br>一行代码实现网络图片加载（可以是imageview或任何View）：kjb.display(view, &quot;<a href=\"http://xxx.xxx.xxx&amp;quot\">http://xxx.xxx.xxx&amp;quot</a>;);<br>任何View(ImageView设置src，普通View设置bg)加载图片的时候都无需考虑图片加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象，同时无需考虑图片加载过程中出现的OOM。默认使用内存lru算法+磁盘lru算法缓存图片</p>\n<p><strong>HttpLibrary模块</strong><br>可以一行代码实现Http请求：kjh.urlPost(&quot;<a href=\"http://www.eoeandroid.com&amp;quot\">http://www.eoeandroid.com&amp;quot</a>;, params, callback);<br>还可以一行代码实现文件或图片的上传与下载。 kjh.download( url, params, callback);<br>KJLibrary默认对所有Http通信的数据做了缓存处理，缓存时间为5分钟。这么做的目的不仅是为了节省用户手机流量，同时是为了减少服务器压力<br>HttpLibrary模块使用HttpClient与HttpUrlConnection两种实现方式实现网络通信、数据上传、多线程断点下载。</p>\n<p><strong>DBLibrary模块</strong><br>可以一行代码对数据库进行增删改查等操作：kjdb.update(); kjdb.add(); …….<br>包含了android中的orm框架，使用了线程池对sqlite进行操作，一行代码就可以进行增删改查。支持一对多，多对一等查询。</p>\n<p>github项目地址：<br><a href=\"https://github.com/kymjs/KJFrameForAndroid\">https://github.com/kymjs/KJFrameForAndroid</a><br>备用项目地址：<br><a href=\"http://git.oschina.net/kymjs/KJFrameForAndroid\">http://git.oschina.net/kymjs/KJFrameForAndroid</a></p>"},{"title":"Android涉及到的设计模式","date":"2015-06-29T02:43:37.000Z","_content":"\n<div id=\"article_content\" class=\"article_content\">\n\n1、适配器模式：ListView或GridView的Adapter\n\n简介：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\n \n\n2、建造者模式：AlertDialog.Builder\n\n简介：可以分步地构造每一部分。\n<!-- more -->\n \n\n3、命令模式：Handler.post后Handler.handleMessage\n\n简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\n \n\n4、享元模式：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n\n简介：运用共享技术有效地支持大量细粒度的对象。\n\n \n\n5、迭代器模式：如通过Hashtable.elements方法可以得到一个Enumeration，然后通过这个Enumeration访问Hashtable中的数据，而不用关心Hashtable中的数据存放方式。\n\n简介：提供一个方法顺序访问数据集合中的所有数据而又不暴露对象的内部表示。\n\n \n\n6、备忘录模式：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心\n\n简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\n \n\n7、观察者模式：我们可以通过BaseAdapter.registerDataSetObserver和\nBaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个\nDataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通\n过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知\nDataSetObserver的实现类。事件通知也是观察者模式\n\n简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\n \n\n8、原型模式：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我\n们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的\nBitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了\n\n简介：在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n\n \n\n9、代理模式：类似于ios开发的delegate委托模式，所有的AIDL都一个代理模式的例子。假设一个Activity \nA去绑定一个Service \nS，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n\n简介：为其他对象提供一种代理以控制对这个对象的访问。\n\n \n\n10、状态模式：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n\n<span style=\"color:#000000\">简介：状态发生改变时，行为改变。</span>\n\n \n\n11、策略模式：\n\n举例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略\n的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换\n使用。\n\n简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\n \n\n12、调解者模式\n\n简介：一个对象的某个操作需要调用N个对象的M个方法来完成时，把这些调用过程封装起来，就成了一个调解者\n\n举例：如Resource.getDrawable方法的实现逻辑是这样的：创建一个缓存来存放所有已经加载过的，如果getDrawable中传\n入的id所对应的Drawable以前没有被加载过，那么它就会根据id所对应的资源类型，分别调用XML解析器生成，或者通过读取包中的图片资源文件来\n创建Drawable。\n\n而Resource.getDrawable把涉及到多个对象、多个逻辑的操作封装成一个方法，就实现了一个调解者的角色。\n\n \n\n13、抽象工厂模式\n\nDAO与Service的使用\n</div>","source":"_posts/Android涉及到的设计模式.md","raw":"---\ntitle: Android涉及到的设计模式\ncategories:\n- 文章\ntags:\n- 设计模式\ndate: 2015-06-29 10:43:37\n---\n\n<div id=\"article_content\" class=\"article_content\">\n\n1、适配器模式：ListView或GridView的Adapter\n\n简介：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。\n\n \n\n2、建造者模式：AlertDialog.Builder\n\n简介：可以分步地构造每一部分。\n<!-- more -->\n \n\n3、命令模式：Handler.post后Handler.handleMessage\n\n简介：把请求封装成一个对象发送出去，方便定制、排队、取消。\n\n \n\n4、享元模式：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。\n\n简介：运用共享技术有效地支持大量细粒度的对象。\n\n \n\n5、迭代器模式：如通过Hashtable.elements方法可以得到一个Enumeration，然后通过这个Enumeration访问Hashtable中的数据，而不用关心Hashtable中的数据存放方式。\n\n简介：提供一个方法顺序访问数据集合中的所有数据而又不暴露对象的内部表示。\n\n \n\n6、备忘录模式：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心\n\n简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。\n\n \n\n7、观察者模式：我们可以通过BaseAdapter.registerDataSetObserver和\nBaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个\nDataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通\n过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知\nDataSetObserver的实现类。事件通知也是观察者模式\n\n简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。\n\n \n\n8、原型模式：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我\n们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的\nBitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了\n\n简介：在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。\n\n \n\n9、代理模式：类似于ios开发的delegate委托模式，所有的AIDL都一个代理模式的例子。假设一个Activity \nA去绑定一个Service \nS，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。\n\n简介：为其他对象提供一种代理以控制对这个对象的访问。\n\n \n\n10、状态模式：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。\n\n<span style=\"color:#000000\">简介：状态发生改变时，行为改变。</span>\n\n \n\n11、策略模式：\n\n举例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略\n的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换\n使用。\n\n简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。\n\n \n\n12、调解者模式\n\n简介：一个对象的某个操作需要调用N个对象的M个方法来完成时，把这些调用过程封装起来，就成了一个调解者\n\n举例：如Resource.getDrawable方法的实现逻辑是这样的：创建一个缓存来存放所有已经加载过的，如果getDrawable中传\n入的id所对应的Drawable以前没有被加载过，那么它就会根据id所对应的资源类型，分别调用XML解析器生成，或者通过读取包中的图片资源文件来\n创建Drawable。\n\n而Resource.getDrawable把涉及到多个对象、多个逻辑的操作封装成一个方法，就实现了一个调解者的角色。\n\n \n\n13、抽象工厂模式\n\nDAO与Service的使用\n</div>","slug":"Android涉及到的设计模式","published":1,"updated":"2016-03-18T04:02:59.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmylx000oc4ubcowto49u","content":"<div id=\"article_content\" class=\"article_content\"><br><br>1、适配器模式：ListView或GridView的Adapter<br><br>简介：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br><br><br><br>2、建造者模式：AlertDialog.Builder<br><br>简介：可以分步地构造每一部分。<br><a id=\"more\"></a><br><br><br>3、命令模式：Handler.post后Handler.handleMessage<br><br>简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br><br><br><br>4、享元模式：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br><br>简介：运用共享技术有效地支持大量细粒度的对象。<br><br><br><br>5、迭代器模式：如通过Hashtable.elements方法可以得到一个Enumeration，然后通过这个Enumeration访问Hashtable中的数据，而不用关心Hashtable中的数据存放方式。<br><br>简介：提供一个方法顺序访问数据集合中的所有数据而又不暴露对象的内部表示。<br><br><br><br>6、备忘录模式：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心<br><br>简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br><br><br><br>7、观察者模式：我们可以通过BaseAdapter.registerDataSetObserver和<br>BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个<br>DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通<br>过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知<br>DataSetObserver的实现类。事件通知也是观察者模式<br><br>简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br><br><br><br>8、原型模式：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我<br>们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的<br>Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了<br><br>简介：在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br><br><br><br>9、代理模式：类似于ios开发的delegate委托模式，所有的AIDL都一个代理模式的例子。假设一个Activity<br>A去绑定一个Service<br>S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br><br>简介：为其他对象提供一种代理以控制对这个对象的访问。<br><br><br><br>10、状态模式：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br><br><span style=\"color:#000000\">简介：状态发生改变时，行为改变。</span><br><br><br><br>11、策略模式：<br><br>举例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略<br>的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换<br>使用。<br><br>简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br><br><br><br>12、调解者模式<br><br>简介：一个对象的某个操作需要调用N个对象的M个方法来完成时，把这些调用过程封装起来，就成了一个调解者<br><br>举例：如Resource.getDrawable方法的实现逻辑是这样的：创建一个缓存来存放所有已经加载过的，如果getDrawable中传<br>入的id所对应的Drawable以前没有被加载过，那么它就会根据id所对应的资源类型，分别调用XML解析器生成，或者通过读取包中的图片资源文件来<br>创建Drawable。<br><br>而Resource.getDrawable把涉及到多个对象、多个逻辑的操作封装成一个方法，就实现了一个调解者的角色。<br><br><br><br>13、抽象工厂模式<br><br>DAO与Service的使用<br></div>","excerpt":"<div id=\"article_content\" class=\"article_content\"><br><br>1、适配器模式：ListView或GridView的Adapter<br><br>简介：不同的数据提供者使用一个适配器来向一个相同的客户提供服务。<br><br><br><br>2、建造者模式：AlertDialog.Builder<br><br>简介：可以分步地构造每一部分。<br>","more":"<br><br><br>3、命令模式：Handler.post后Handler.handleMessage<br><br>简介：把请求封装成一个对象发送出去，方便定制、排队、取消。<br><br><br><br>4、享元模式：Message.obtainMessage通过重用Message对象来避免大量的Message对象被频繁的创建和销毁。<br><br>简介：运用共享技术有效地支持大量细粒度的对象。<br><br><br><br>5、迭代器模式：如通过Hashtable.elements方法可以得到一个Enumeration，然后通过这个Enumeration访问Hashtable中的数据，而不用关心Hashtable中的数据存放方式。<br><br>简介：提供一个方法顺序访问数据集合中的所有数据而又不暴露对象的内部表示。<br><br><br><br>6、备忘录模式：Activity的onSaveInstanceState和onRestoreInstanceState就是通过Bundle这种序列化的数据结构来存储Activity的状态，至于其中存储的数据结构，这两个方法不用关心<br><br>简介：不需要了解对象的内部结构的情况下备份对象的状态，方便以后恢复。<br><br><br><br>7、观察者模式：我们可以通过BaseAdapter.registerDataSetObserver和<br>BaseAdapter.unregisterDataSetObserver两方法来向BaseAdater注册、注销一个<br>DataSetObserver。这个过程中，DataSetObserver就是一个观察者，它一旦发现BaseAdapter内部数据有变量，就会通<br>过回调方法DataSetObserver.onChanged和DataSetObserver.onInvalidated来通知<br>DataSetObserver的实现类。事件通知也是观察者模式<br><br>简介：一个对象发生改变时，所有信赖于它的对象自动做相应改变。<br><br><br><br>8、原型模式：比如我们需要一张Bitmap的几种不同格式：ARGB_8888、RGB_565、ARGB_4444、ALAPHA_8等。那我<br>们就可以先创建一个ARGB_8888的Bitmap作为原型，在它的基础上，通过调用Bitmap.copy(Config)来创建出其它几种格式的<br>Bitmap。另外一个例子就是Java中所有对象都有的一个名字叫clone的方法，已经原型模式的代名词了<br><br>简介：在系统中要创建大量的对象，这些对象之间具有几乎完全相同的功能，只是在细节上有一点儿差别。<br><br><br><br>9、代理模式：类似于ios开发的delegate委托模式，所有的AIDL都一个代理模式的例子。假设一个Activity<br>A去绑定一个Service<br>S，那么A调用S中的每一个方法其实都是通过系统的Binder机制的中转，然后调用S中的对应方法来做到的。Binder机制就起到了代理的作用。<br><br>简介：为其他对象提供一种代理以控制对这个对象的访问。<br><br><br><br>10、状态模式：View.onVisibilityChanged方法，就是提供了一个状态模式的实现，允许在View的visibility发生改变时，引发执行onVisibilityChanged方法中的动作。<br><br><span style=\"color:#000000\">简介：状态发生改变时，行为改变。</span><br><br><br><br>11、策略模式：<br><br>举例：Java.util.List就是定义了一个增（add）、删（remove）、改（set）、查（indexOf）策略，至于实现这个策略<br>的ArrayList、LinkedList等类，只是在具体实现时采用了不同的算法。但因为它们策略一样，不考虑速度的情况下，使用时完全可以互相替换<br>使用。<br><br>简介：定义了一系列封装了算法、行为的对象，他们可以相互替换。<br><br><br><br>12、调解者模式<br><br>简介：一个对象的某个操作需要调用N个对象的M个方法来完成时，把这些调用过程封装起来，就成了一个调解者<br><br>举例：如Resource.getDrawable方法的实现逻辑是这样的：创建一个缓存来存放所有已经加载过的，如果getDrawable中传<br>入的id所对应的Drawable以前没有被加载过，那么它就会根据id所对应的资源类型，分别调用XML解析器生成，或者通过读取包中的图片资源文件来<br>创建Drawable。<br><br>而Resource.getDrawable把涉及到多个对象、多个逻辑的操作封装成一个方法，就实现了一个调解者的角色。<br><br><br><br>13、抽象工厂模式<br><br>DAO与Service的使用<br></div>"},{"title":"EditSpinner 一款结合EditText和Spinner的开源控件","toc":true,"date":"2016-02-28T10:05:09.000Z","_content":"<!-- more -->\n<span style=\"font-size: 20px;\">效果演示：</span>\n\n![201602281456654040118978.gif](/upload/2016/02/201602281456654040118978.gif \"201602281456654040118978.gif\")\n\n项目地址：[https://github.com/wangtao2132/EditSpinner](https://github.com/wangtao2132/EditSpinner)\n\n<span style=\"font-size: 20px;\">项目介绍：</span>\n\nEditSpinner是一款结合EditText和Spinner的控件，可以自行输入和下拉选择，类似于AutoCompleteTextView\n\n使用说明：\n<pre class=\"brush:java;toolbar:false\">&lt;cn.mandroid.widget.editspinner.EditSpinner\n    android:id=&quot;@+id/editSpinner1&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    app:Background=&quot;@drawable/bg_view_frame&quot;\n    app:hint=&quot;EditSpinner Test&quot;\n    app:rightImage=&quot;@drawable/ic_expand_more_black&quot; /&gt;</pre><pre class=\"brush:java;toolbar:false\">spinner1 = (EditSpinner) findViewById(R.id.editSpinner1);\n//设置控件右侧图片资源，默认资源为R.drawable.ic_expand_more_black\nspinner1.setRightImageResource(R.drawable.ic_expand_more_black);\n//设置控件Hint\nspinner1.setHint(&quot;EditSpinner&quot;);\n//设置下拉列表数据（List&lt;String&gt;）\nspinner2.setItemData(list);</pre>","source":"_posts/EditSpinner-一款结合EditText和Spinner的开源控件.md","raw":"---\ntitle: EditSpinner 一款结合EditText和Spinner的开源控件\ncategories:\n- 开源控件\ntags: \n- EditSpinner\ntoc: true\ndate: 2016-02-28 18:05:09\n---\n<!-- more -->\n<span style=\"font-size: 20px;\">效果演示：</span>\n\n![201602281456654040118978.gif](/upload/2016/02/201602281456654040118978.gif \"201602281456654040118978.gif\")\n\n项目地址：[https://github.com/wangtao2132/EditSpinner](https://github.com/wangtao2132/EditSpinner)\n\n<span style=\"font-size: 20px;\">项目介绍：</span>\n\nEditSpinner是一款结合EditText和Spinner的控件，可以自行输入和下拉选择，类似于AutoCompleteTextView\n\n使用说明：\n<pre class=\"brush:java;toolbar:false\">&lt;cn.mandroid.widget.editspinner.EditSpinner\n    android:id=&quot;@+id/editSpinner1&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    app:Background=&quot;@drawable/bg_view_frame&quot;\n    app:hint=&quot;EditSpinner Test&quot;\n    app:rightImage=&quot;@drawable/ic_expand_more_black&quot; /&gt;</pre><pre class=\"brush:java;toolbar:false\">spinner1 = (EditSpinner) findViewById(R.id.editSpinner1);\n//设置控件右侧图片资源，默认资源为R.drawable.ic_expand_more_black\nspinner1.setRightImageResource(R.drawable.ic_expand_more_black);\n//设置控件Hint\nspinner1.setHint(&quot;EditSpinner&quot;);\n//设置下拉列表数据（List&lt;String&gt;）\nspinner2.setItemData(list);</pre>","slug":"EditSpinner-一款结合EditText和Spinner的开源控件","published":1,"updated":"2016-03-18T04:04:55.305Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyly000sc4ubjnte5hzi","content":"<a id=\"more\"></a>\n<p><span style=\"font-size: 20px;\">效果演示：</span></p>\n<p><img src=\"/upload/2016/02/201602281456654040118978.gif\" alt=\"201602281456654040118978.gif\" title=\"201602281456654040118978.gif\"></p>\n<p>项目地址：<a href=\"https://github.com/wangtao2132/EditSpinner\" target=\"_blank\" rel=\"external\">https://github.com/wangtao2132/EditSpinner</a></p>\n<p><span style=\"font-size: 20px;\">项目介绍：</span></p>\n<p>EditSpinner是一款结合EditText和Spinner的控件，可以自行输入和下拉选择，类似于AutoCompleteTextView</p>\n<p>使用说明：</p>\n<pre class=\"brush:java;toolbar:false\">&lt;cn.mandroid.widget.editspinner.EditSpinner\n    android:id=&quot;@+id/editSpinner1&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    app:Background=&quot;@drawable/bg_view_frame&quot;\n    app:hint=&quot;EditSpinner Test&quot;\n    app:rightImage=&quot;@drawable/ic_expand_more_black&quot; /&gt;</pre><pre class=\"brush:java;toolbar:false\">spinner1 = (EditSpinner) findViewById(R.id.editSpinner1);\n//设置控件右侧图片资源，默认资源为R.drawable.ic_expand_more_black\nspinner1.setRightImageResource(R.drawable.ic_expand_more_black);\n//设置控件Hint\nspinner1.setHint(&quot;EditSpinner&quot;);\n//设置下拉列表数据（List&lt;String&gt;）\nspinner2.setItemData(list);</pre>","excerpt":"","more":"<p><span style=\"font-size: 20px;\">效果演示：</span></p>\n<p><img src=\"/upload/2016/02/201602281456654040118978.gif\" alt=\"201602281456654040118978.gif\" title=\"201602281456654040118978.gif\"></p>\n<p>项目地址：<a href=\"https://github.com/wangtao2132/EditSpinner\">https://github.com/wangtao2132/EditSpinner</a></p>\n<p><span style=\"font-size: 20px;\">项目介绍：</span></p>\n<p>EditSpinner是一款结合EditText和Spinner的控件，可以自行输入和下拉选择，类似于AutoCompleteTextView</p>\n<p>使用说明：</p>\n<pre class=\"brush:java;toolbar:false\">&lt;cn.mandroid.widget.editspinner.EditSpinner\n    android:id=&quot;@+id/editSpinner1&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    app:Background=&quot;@drawable/bg_view_frame&quot;\n    app:hint=&quot;EditSpinner Test&quot;\n    app:rightImage=&quot;@drawable/ic_expand_more_black&quot; /&gt;</pre><pre class=\"brush:java;toolbar:false\">spinner1 = (EditSpinner) findViewById(R.id.editSpinner1);\n//设置控件右侧图片资源，默认资源为R.drawable.ic_expand_more_black\nspinner1.setRightImageResource(R.drawable.ic_expand_more_black);\n//设置控件Hint\nspinner1.setHint(&quot;EditSpinner&quot;);\n//设置下拉列表数据（List&lt;String&gt;）\nspinner2.setItemData(list);</pre>"},{"title":"ListItemFold ListView折叠效果","date":"2015-07-28T01:51:10.000Z","_content":"\n![4p17082262AU268.gif](/upload/2015/07/201507281438048301122567.gif \"201507281438048301122567.gif\")\n<!-- more -->\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1qW1JQd2</span>](http://pan.baidu.com/s/1qW1JQd2)<span style=\"font-size: 24px;\"></span>","source":"_posts/ListItemFold-ListView折叠效果.md","raw":"---\ntitle: ListItemFold ListView折叠效果\ncategories:\n- 开源控件\ntags: \n- ListItemFold\ndate: 2015-07-28 09:51:10\n---\n\n![4p17082262AU268.gif](/upload/2015/07/201507281438048301122567.gif \"201507281438048301122567.gif\")\n<!-- more -->\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px;\">http://pan.baidu.com/s/1qW1JQd2</span>](http://pan.baidu.com/s/1qW1JQd2)<span style=\"font-size: 24px;\"></span>","slug":"ListItemFold-ListView折叠效果","published":1,"updated":"2016-03-18T04:04:46.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmym0000vc4ub4g2k0cvm","content":"<p><img src=\"/upload/2015/07/201507281438048301122567.gif\" alt=\"4p17082262AU268.gif\" title=\"201507281438048301122567.gif\"><br><a id=\"more\"></a><br><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1qW1JQd2\" target=\"_blank\" rel=\"external\"><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1qW1JQd2</span></a><span style=\"font-size: 24px;\"></span></p>\n","excerpt":"<p><img src=\"/upload/2015/07/201507281438048301122567.gif\" alt=\"4p17082262AU268.gif\" title=\"201507281438048301122567.gif\"><br>","more":"<br><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1qW1JQd2\"><span style=\"font-size: 24px;\">http://pan.baidu.com/s/1qW1JQd2</span></a><span style=\"font-size: 24px;\"></span></p>"},{"title":"RadioButton自定义样式底部导航","date":"2015-06-16T16:47:59.000Z","_content":"\n<span style=\"font-size: 24px;\">先上效果：</span>\n\n<span style=\"font-size: 20px;\">![QQ截图20150617010130.png](/upload/2015/06/201506171434474172281858.png \"201506171434474172281858.png\")</span>\n<!-- more -->\n<span style=\"font-size: 24px;\">布局文件<span style=\"color: rgb(255, 0, 0);\">_main.xml_</span>：</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_centerHorizontal=&quot;true&quot;\n        android:layout_centerVertical=&quot;true&quot;\n        android:text=&quot;@string/hello_world&quot; /&gt;\n&lt;!—设置底部导航栏 --&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot; &gt;\n&lt;!—引用底部导航栏的布局文件 --&gt;\n        &lt;include\n            android:id=&quot;@+id/footbar_layout_ly&quot;\n            layout=&quot;@layout/footbar_layout&quot; /&gt;\n    &lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;</pre></span>\n\n<span style=\"font-size: 20px;\"></span>\n\n<span style=\"font-size: 24px;\">底部导航栏布局文件<span style=\"color: rgb(255, 0, 0);\">_footbar_layout.xml_</span>：</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;60dp&quot;\n    android:background=&quot;#ffffff&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;RadioGroup\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n        android:orientation=&quot;horizontal&quot; &gt;\n \n        &lt;RadioButton\n             &lt;!--radiobutton样式，在文章下面有说明。下同--&gt;\n            style=&quot;@style/radio_button_style&quot;\n            &lt;!--导航栏图标，下同--&gt;\n            android:drawableTop=&quot;@drawable/bottom&quot;  \n            &lt;!--导航文字，下同--&gt;\n            android:text=&quot;文字&quot; /&gt;\n        &lt;RadioButton\n            style=&quot;@style/radio_button_style&quot;\n            android:drawableTop=&quot;@drawable/bottom&quot;\n            android:text=&quot;文字&quot; /&gt;\n        &lt;RadioButton\n            style=&quot;@style/radio_button_style&quot;\n            android:drawableTop=&quot;@drawable/bottom&quot;\n            android:text=&quot;文字&quot; /&gt;\n    &lt;/RadioGroup&gt;\n&lt;/LinearLayout&gt;</pre></span>\n\n<span style=\"font-size: 24px;\">在styles.xml中添加<span style=\"color: rgb(255, 0, 0);\">radio_button_style</span>名称的布局:</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;resources&gt;\n    &lt;style name=&quot;navigation_bottom_radio&quot;&gt;\n        &lt;!-- 内部组件的排列 --&gt;\n        &lt;item name=&quot;android:gravity&quot;&gt;center_horizontal&lt;/item&gt;\n        &lt;!-- 背景样式 --&gt;\n        &lt;item name=&quot;android:background&quot;&gt;@drawable/style_navigation_radio&lt;/item&gt;\n        &lt;!-- 宽度 --&gt;\n        &lt;item name=&quot;android:layout_width&quot;&gt;fill_parent&lt;/item&gt;\n        &lt;!-- 高度 --&gt;\n        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;\n        &lt;!-- 设置RadioButton的原来图片为空 --&gt;\n        &lt;item name=&quot;android:button&quot;&gt;@null&lt;/item&gt;\n        &lt;!-- 与其他组件宽度占相同比重 --&gt;\n        &lt;item name=&quot;android:layout_weight&quot;&gt;1.0&lt;/item&gt;\n        &lt;!-- 底部的空隙 --&gt;\n        &lt;item name=&quot;android:paddingBottom&quot;&gt;2.0dip&lt;/item&gt;\n        &lt;!-- 顶部的空隙 --&gt;\n        &lt;item name=&quot;android:paddingTop&quot;&gt;2.0dip&lt;/item&gt;\n        &lt;!-- 文字的大小 --&gt;\n        &lt;item name=&quot;android:textSize&quot;&gt;11dip&lt;/item&gt;\n        &lt;!-- 文字的颜色 --&gt;\n        &lt;item name=&quot;android:textColor&quot;&gt;@color/white&lt;/item&gt;\n    &lt;/style&gt;\n&lt;/resources&gt;</pre></span>\n\n<span style=\"font-size: 24px;\">在res\\drawable目录下添加每个Radio的背景的样式<span style=\"color: rgb(255, 0, 0);\">_style_navigation_radio.xml_</span></span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:xml;toolbar:false\">   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;\n    &lt;!-- 选中 --&gt;\n    &lt;item android:drawable=&quot;@drawable/选中时的背景图&quot; android:state_checked=&quot;true&quot;/&gt;\n&lt;/selector&gt;</pre></span>\n\n ","source":"_posts/RadioButton自定义样式底部导航.md","raw":"---\ntitle: RadioButton自定义样式底部导航\ncategories:\n- 文章\ntags: \n- 底部导航\ndate: 2015-06-17 00:47:59\n---\n\n<span style=\"font-size: 24px;\">先上效果：</span>\n\n<span style=\"font-size: 20px;\">![QQ截图20150617010130.png](/upload/2015/06/201506171434474172281858.png \"201506171434474172281858.png\")</span>\n<!-- more -->\n<span style=\"font-size: 24px;\">布局文件<span style=\"color: rgb(255, 0, 0);\">_main.xml_</span>：</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_centerHorizontal=&quot;true&quot;\n        android:layout_centerVertical=&quot;true&quot;\n        android:text=&quot;@string/hello_world&quot; /&gt;\n&lt;!—设置底部导航栏 --&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot; &gt;\n&lt;!—引用底部导航栏的布局文件 --&gt;\n        &lt;include\n            android:id=&quot;@+id/footbar_layout_ly&quot;\n            layout=&quot;@layout/footbar_layout&quot; /&gt;\n    &lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;</pre></span>\n\n<span style=\"font-size: 20px;\"></span>\n\n<span style=\"font-size: 24px;\">底部导航栏布局文件<span style=\"color: rgb(255, 0, 0);\">_footbar_layout.xml_</span>：</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;60dp&quot;\n    android:background=&quot;#ffffff&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;RadioGroup\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n        android:orientation=&quot;horizontal&quot; &gt;\n \n        &lt;RadioButton\n             &lt;!--radiobutton样式，在文章下面有说明。下同--&gt;\n            style=&quot;@style/radio_button_style&quot;\n            &lt;!--导航栏图标，下同--&gt;\n            android:drawableTop=&quot;@drawable/bottom&quot;  \n            &lt;!--导航文字，下同--&gt;\n            android:text=&quot;文字&quot; /&gt;\n        &lt;RadioButton\n            style=&quot;@style/radio_button_style&quot;\n            android:drawableTop=&quot;@drawable/bottom&quot;\n            android:text=&quot;文字&quot; /&gt;\n        &lt;RadioButton\n            style=&quot;@style/radio_button_style&quot;\n            android:drawableTop=&quot;@drawable/bottom&quot;\n            android:text=&quot;文字&quot; /&gt;\n    &lt;/RadioGroup&gt;\n&lt;/LinearLayout&gt;</pre></span>\n\n<span style=\"font-size: 24px;\">在styles.xml中添加<span style=\"color: rgb(255, 0, 0);\">radio_button_style</span>名称的布局:</span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;resources&gt;\n    &lt;style name=&quot;navigation_bottom_radio&quot;&gt;\n        &lt;!-- 内部组件的排列 --&gt;\n        &lt;item name=&quot;android:gravity&quot;&gt;center_horizontal&lt;/item&gt;\n        &lt;!-- 背景样式 --&gt;\n        &lt;item name=&quot;android:background&quot;&gt;@drawable/style_navigation_radio&lt;/item&gt;\n        &lt;!-- 宽度 --&gt;\n        &lt;item name=&quot;android:layout_width&quot;&gt;fill_parent&lt;/item&gt;\n        &lt;!-- 高度 --&gt;\n        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;\n        &lt;!-- 设置RadioButton的原来图片为空 --&gt;\n        &lt;item name=&quot;android:button&quot;&gt;@null&lt;/item&gt;\n        &lt;!-- 与其他组件宽度占相同比重 --&gt;\n        &lt;item name=&quot;android:layout_weight&quot;&gt;1.0&lt;/item&gt;\n        &lt;!-- 底部的空隙 --&gt;\n        &lt;item name=&quot;android:paddingBottom&quot;&gt;2.0dip&lt;/item&gt;\n        &lt;!-- 顶部的空隙 --&gt;\n        &lt;item name=&quot;android:paddingTop&quot;&gt;2.0dip&lt;/item&gt;\n        &lt;!-- 文字的大小 --&gt;\n        &lt;item name=&quot;android:textSize&quot;&gt;11dip&lt;/item&gt;\n        &lt;!-- 文字的颜色 --&gt;\n        &lt;item name=&quot;android:textColor&quot;&gt;@color/white&lt;/item&gt;\n    &lt;/style&gt;\n&lt;/resources&gt;</pre></span>\n\n<span style=\"font-size: 24px;\">在res\\drawable目录下添加每个Radio的背景的样式<span style=\"color: rgb(255, 0, 0);\">_style_navigation_radio.xml_</span></span>\n<span style=\"font-size: 20px;\"><pre class=\"brush:xml;toolbar:false\">   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;\n    &lt;!-- 选中 --&gt;\n    &lt;item android:drawable=&quot;@drawable/选中时的背景图&quot; android:state_checked=&quot;true&quot;/&gt;\n&lt;/selector&gt;</pre></span>\n\n ","slug":"RadioButton自定义样式底部导航","published":1,"updated":"2016-03-18T04:04:43.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmym3000zc4ub2k2av0d4","content":"<p><span style=\"font-size: 24px;\">先上效果：</span></p>\n<p><span style=\"font-size: 20px;\"><img src=\"/upload/2015/06/201506171434474172281858.png\" alt=\"QQ截图20150617010130.png\" title=\"201506171434474172281858.png\"></span><br><a id=\"more\"></a><br><span style=\"font-size: 24px;\">布局文件<span style=\"color: rgb(255, 0, 0);\"><em>main.xml</em></span>：</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    xmlns:tools=&quot;<a href=\"http://schemas.android.com/tools&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/tools&amp;quot</a>;<br>    android:layout_width=&quot;match_parent&quot;<br>    android:layout_height=&quot;match_parent&quot;<br>    tools:context=&quot;.MainActivity&quot; &gt;<br>    &lt;TextView<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_centerHorizontal=&quot;true&quot;<br>        android:layout_centerVertical=&quot;true&quot;<br>        android:text=&quot;@string/hello_world&quot; /&gt;<br>&lt;!—设置底部导航栏 –&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_alignParentBottom=&quot;true&quot; &gt;<br>&lt;!—引用底部导航栏的布局文件 –&gt;<br>        &lt;include<br>            android:id=&quot;@+id/footbar_layout_ly&quot;<br>            layout=&quot;@layout/footbar_layout&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;</pre></span></p>\n<p><span style=\"font-size: 20px;\"></span></p>\n<p><span style=\"font-size: 24px;\">底部导航栏布局文件<span style=\"color: rgb(255, 0, 0);\">_footbar<em>layout.xml</em></span>：</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;60dp&quot;<br>    android:background=&quot;#ffffff&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;RadioGroup<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;match_parent&quot;<br>        android:orientation=&quot;horizontal&quot; &gt;</pre></span></p>\n<pre><code>    &amp;lt;RadioButton\n         &amp;lt;!--radiobutton样式，在文章下面有说明。下同--&amp;gt;\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        &amp;lt;!--导航栏图标，下同--&amp;gt;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;  \n        &amp;lt;!--导航文字，下同--&amp;gt;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n    &amp;lt;RadioButton\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n    &amp;lt;RadioButton\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n&amp;lt;/RadioGroup&amp;gt;\n</code></pre><p>&lt;/LinearLayout&gt;</p>\n<p><span style=\"font-size: 24px;\">在styles.xml中添加<span style=\"color: rgb(255, 0, 0);\">radio_button_style</span>名称的布局:</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;resources&gt;<br>    &lt;style name=&quot;navigation_bottom_radio&quot;&gt;<br>        &lt;!– 内部组件的排列 –&gt;<br>        &lt;item name=&quot;android:gravity&quot;&gt;center_horizontal&lt;/item&gt;<br>        &lt;!– 背景样式 –&gt;<br>        &lt;item name=&quot;android:background&quot;&gt;@drawable/style_navigation_radio&lt;/item&gt;<br>        &lt;!– 宽度 –&gt;<br>        &lt;item name=&quot;android:layout_width&quot;&gt;fill_parent&lt;/item&gt;<br>        &lt;!– 高度 –&gt;<br>        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;<br>        &lt;!– 设置RadioButton的原来图片为空 –&gt;<br>        &lt;item name=&quot;android:button&quot;&gt;@null&lt;/item&gt;<br>        &lt;!– 与其他组件宽度占相同比重 –&gt;<br>        &lt;item name=&quot;android:layout_weight&quot;&gt;1.0&lt;/item&gt;<br>        &lt;!– 底部的空隙 –&gt;<br>        &lt;item name=&quot;android:paddingBottom&quot;&gt;2.0dip&lt;/item&gt;<br>        &lt;!– 顶部的空隙 –&gt;<br>        &lt;item name=&quot;android:paddingTop&quot;&gt;2.0dip&lt;/item&gt;<br>        &lt;!– 文字的大小 –&gt;<br>        &lt;item name=&quot;android:textSize&quot;&gt;11dip&lt;/item&gt;<br>        &lt;!– 文字的颜色 –&gt;<br>        &lt;item name=&quot;android:textColor&quot;&gt;@color/white&lt;/item&gt;<br>    &lt;/style&gt;<br>&lt;/resources&gt;</pre></span></p>\n<p><span style=\"font-size: 24px;\">在res\\drawable目录下添加每个Radio的背景的样式<span style=\"color: rgb(255, 0, 0);\">_style_navigation<em>radio.xml</em></span></span><br><span style=\"font-size: 20px;\"><pre class=\"brush:xml;toolbar:false\">   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;selector xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&quot;&amp;gt\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&quot;&amp;gt</a>;<br>    &lt;!– 选中 –&gt;<br>    &lt;item android:drawable=&quot;@drawable/选中时的背景图&quot; android:state_checked=&quot;true&quot;/&gt;<br>&lt;/selector&gt;</pre></span></p>\n","excerpt":"<p><span style=\"font-size: 24px;\">先上效果：</span></p>\n<p><span style=\"font-size: 20px;\"><img src=\"/upload/2015/06/201506171434474172281858.png\" alt=\"QQ截图20150617010130.png\" title=\"201506171434474172281858.png\"></span><br>","more":"<br><span style=\"font-size: 24px;\">布局文件<span style=\"color: rgb(255, 0, 0);\"><em>main.xml</em></span>：</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    xmlns:tools=&quot;<a href=\"http://schemas.android.com/tools&amp;quot\">http://schemas.android.com/tools&amp;quot</a>;<br>    android:layout_width=&quot;match_parent&quot;<br>    android:layout_height=&quot;match_parent&quot;<br>    tools:context=&quot;.MainActivity&quot; &gt;<br>    &lt;TextView<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_centerHorizontal=&quot;true&quot;<br>        android:layout_centerVertical=&quot;true&quot;<br>        android:text=&quot;@string/hello_world&quot; /&gt;<br>&lt;!—设置底部导航栏 –&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_alignParentBottom=&quot;true&quot; &gt;<br>&lt;!—引用底部导航栏的布局文件 –&gt;<br>        &lt;include<br>            android:id=&quot;@+id/footbar_layout_ly&quot;<br>            layout=&quot;@layout/footbar_layout&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;</pre></span></p>\n<p><span style=\"font-size: 20px;\"></span></p>\n<p><span style=\"font-size: 24px;\">底部导航栏布局文件<span style=\"color: rgb(255, 0, 0);\">_footbar<em>layout.xml</em></span>：</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;60dp&quot;<br>    android:background=&quot;#ffffff&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;RadioGroup<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;match_parent&quot;<br>        android:orientation=&quot;horizontal&quot; &gt;</p>\n<pre><code>    &amp;lt;RadioButton\n         &amp;lt;!--radiobutton样式，在文章下面有说明。下同--&amp;gt;\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        &amp;lt;!--导航栏图标，下同--&amp;gt;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;  \n        &amp;lt;!--导航文字，下同--&amp;gt;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n    &amp;lt;RadioButton\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n    &amp;lt;RadioButton\n        style=&amp;quot;@style/radio_button_style&amp;quot;\n        android:drawableTop=&amp;quot;@drawable/bottom&amp;quot;\n        android:text=&amp;quot;文字&amp;quot; /&amp;gt;\n&amp;lt;/RadioGroup&amp;gt;\n</code></pre><p>&lt;/LinearLayout&gt;</pre></span></p>\n<p><span style=\"font-size: 24px;\">在styles.xml中添加<span style=\"color: rgb(255, 0, 0);\">radio_button_style</span>名称的布局:</span><br><span style=\"font-size: 20px;\"><pre class=\"brush:java;toolbar:false\">&lt;resources&gt;<br>    &lt;style name=&quot;navigation_bottom_radio&quot;&gt;<br>        &lt;!– 内部组件的排列 –&gt;<br>        &lt;item name=&quot;android:gravity&quot;&gt;center_horizontal&lt;/item&gt;<br>        &lt;!– 背景样式 –&gt;<br>        &lt;item name=&quot;android:background&quot;&gt;@drawable/style_navigation_radio&lt;/item&gt;<br>        &lt;!– 宽度 –&gt;<br>        &lt;item name=&quot;android:layout_width&quot;&gt;fill_parent&lt;/item&gt;<br>        &lt;!– 高度 –&gt;<br>        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;<br>        &lt;!– 设置RadioButton的原来图片为空 –&gt;<br>        &lt;item name=&quot;android:button&quot;&gt;@null&lt;/item&gt;<br>        &lt;!– 与其他组件宽度占相同比重 –&gt;<br>        &lt;item name=&quot;android:layout_weight&quot;&gt;1.0&lt;/item&gt;<br>        &lt;!– 底部的空隙 –&gt;<br>        &lt;item name=&quot;android:paddingBottom&quot;&gt;2.0dip&lt;/item&gt;<br>        &lt;!– 顶部的空隙 –&gt;<br>        &lt;item name=&quot;android:paddingTop&quot;&gt;2.0dip&lt;/item&gt;<br>        &lt;!– 文字的大小 –&gt;<br>        &lt;item name=&quot;android:textSize&quot;&gt;11dip&lt;/item&gt;<br>        &lt;!– 文字的颜色 –&gt;<br>        &lt;item name=&quot;android:textColor&quot;&gt;@color/white&lt;/item&gt;<br>    &lt;/style&gt;<br>&lt;/resources&gt;</pre></span></p>\n<p><span style=\"font-size: 24px;\">在res\\drawable目录下添加每个Radio的背景的样式<span style=\"color: rgb(255, 0, 0);\">_style_navigation<em>radio.xml</em></span></span><br><span style=\"font-size: 20px;\"><pre class=\"brush:xml;toolbar:false\">   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;selector xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&quot;&amp;gt\">http://schemas.android.com/apk/res/android&quot;&amp;gt</a>;<br>    &lt;!– 选中 –&gt;<br>    &lt;item android:drawable=&quot;@drawable/选中时的背景图&quot; android:state_checked=&quot;true&quot;/&gt;<br>&lt;/selector&gt;</pre></span></p>"},{"title":"StickyListHeaders 仿QQ好友列表 ExpandableListView父列表滑动到顶端固定不动","date":"2015-06-17T12:24:04.000Z","_content":"\n![](https://raw.githubusercontent.com/emilsjolander/StickyListHeaders/master/demo.gif)\n<!-- more -->\nGroupName滑动到顶端时会固定不动直到另外一个GroupName到达顶端的ExpandListView，支持快速滑动，支持Android2.3及以上\n\n项目地址：[<span style=\"color: rgb(255, 0, 0);\">https://github.com/emilsjolander/StickyListHeaders</span>](https://github.com/emilsjolander/StickyListHeaders)","source":"_posts/StickyListHeaders-仿QQ好友列表-ExpandableListView父列表滑动到顶端固定不动.md","raw":"---\ntitle: StickyListHeaders 仿QQ好友列表 ExpandableListView父列表滑动到顶端固定不动\ncategories:\n- 文章\ntags: \n- ExpandableListView\n- 顶端不动\ndate: 2015-06-17 20:24:04\n---\n\n![](https://raw.githubusercontent.com/emilsjolander/StickyListHeaders/master/demo.gif)\n<!-- more -->\nGroupName滑动到顶端时会固定不动直到另外一个GroupName到达顶端的ExpandListView，支持快速滑动，支持Android2.3及以上\n\n项目地址：[<span style=\"color: rgb(255, 0, 0);\">https://github.com/emilsjolander/StickyListHeaders</span>](https://github.com/emilsjolander/StickyListHeaders)","slug":"StickyListHeaders-仿QQ好友列表-ExpandableListView父列表滑动到顶端固定不动","published":1,"updated":"2016-03-18T04:04:40.482Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmym50012c4ub8x7dgeo5","content":"<p><img src=\"https://raw.githubusercontent.com/emilsjolander/StickyListHeaders/master/demo.gif\" alt=\"\"><br><a id=\"more\"></a><br>GroupName滑动到顶端时会固定不动直到另外一个GroupName到达顶端的ExpandListView，支持快速滑动，支持Android2.3及以上</p>\n<p>项目地址：<a href=\"https://github.com/emilsjolander/StickyListHeaders\" target=\"_blank\" rel=\"external\"><span style=\"color: rgb(255, 0, 0);\">https://github.com/emilsjolander/StickyListHeaders</span></a></p>\n","excerpt":"<p><img src=\"https://raw.githubusercontent.com/emilsjolander/StickyListHeaders/master/demo.gif\" alt=\"\"><br>","more":"<br>GroupName滑动到顶端时会固定不动直到另外一个GroupName到达顶端的ExpandListView，支持快速滑动，支持Android2.3及以上</p>\n<p>项目地址：<a href=\"https://github.com/emilsjolander/StickyListHeaders\"><span style=\"color: rgb(255, 0, 0);\">https://github.com/emilsjolander/StickyListHeaders</span></a></p>"},{"title":"android Adapter优化之终极版","date":"2015-08-25T06:09:09.000Z","_content":"\n移动开发中个人认为最重要的就是应用的用户体验度,其中最重要的就是流畅度,而Android的Adapter优化就是很重要的一个方面,下面的代码就是一个Adapter的优化,当然从网上学习了很多大神写的代码,贴出来分享,大家共同进步,有什么好的建议可以留言评论\n<!-- more -->\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.SparseArray;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport java.util.ArrayList;\npublic abstract class BaseArrayListAdapter&lt;T&gt; extends BaseAdapter {\n    protected ArrayList&lt;T&gt; data;\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return (data == null) ? 0 : data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return getViewHolder(convertView, parent, position).getConvertView();\n    }\n    public abstract ViewHolder getViewHolder(View convertView,\n        ViewGroup parent, int position);\n    static class ViewHolder {\n        private final SparseArray&lt;View&gt; views;\n        private View convertView;\n        private ViewHolder(Context mContext, View convertView) {\n            this.views = new SparseArray&lt;View&gt;();\n            this.convertView = convertView;\n            convertView.setTag(this);\n        }\n        public static ViewHolder get(Context mContext, View convertView,\n            ViewGroup parent, int resId) {\n            if (convertView == null) {\n                LayoutInflater factory = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                convertView = factory.inflate(resId, parent, false); //\n                return new ViewHolder(mContext, convertView);\n            }\n            return (ViewHolder) convertView.getTag();\n        }\n        @SuppressWarnings(&quot;unchecked&quot;)\n        public &lt;T extends View&gt; T findViewById(int resourceId) {\n            View view = views.get(resourceId);\n            if (view == null) {\n                view = convertView.findViewById(resourceId);\n                views.put(resourceId, view);\n            }\n            return (T) view;\n        }\n        public View getConvertView() {\n            return convertView;\n        }\n        public void setConvertView(View convertView) {\n            this.convertView = convertView;\n        }\n    }\n}</pre>","source":"_posts/android-Adapter优化之终极版.md","raw":"---\ntitle: android Adapter优化之终极版\ncategories:\n- 文章\ntags:\n- Adapter\ndate: 2015-08-25 14:09:09\n---\n\n移动开发中个人认为最重要的就是应用的用户体验度,其中最重要的就是流畅度,而Android的Adapter优化就是很重要的一个方面,下面的代码就是一个Adapter的优化,当然从网上学习了很多大神写的代码,贴出来分享,大家共同进步,有什么好的建议可以留言评论\n<!-- more -->\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.SparseArray;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport java.util.ArrayList;\npublic abstract class BaseArrayListAdapter&lt;T&gt; extends BaseAdapter {\n    protected ArrayList&lt;T&gt; data;\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return (data == null) ? 0 : data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return getViewHolder(convertView, parent, position).getConvertView();\n    }\n    public abstract ViewHolder getViewHolder(View convertView,\n        ViewGroup parent, int position);\n    static class ViewHolder {\n        private final SparseArray&lt;View&gt; views;\n        private View convertView;\n        private ViewHolder(Context mContext, View convertView) {\n            this.views = new SparseArray&lt;View&gt;();\n            this.convertView = convertView;\n            convertView.setTag(this);\n        }\n        public static ViewHolder get(Context mContext, View convertView,\n            ViewGroup parent, int resId) {\n            if (convertView == null) {\n                LayoutInflater factory = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                convertView = factory.inflate(resId, parent, false); //\n                return new ViewHolder(mContext, convertView);\n            }\n            return (ViewHolder) convertView.getTag();\n        }\n        @SuppressWarnings(&quot;unchecked&quot;)\n        public &lt;T extends View&gt; T findViewById(int resourceId) {\n            View view = views.get(resourceId);\n            if (view == null) {\n                view = convertView.findViewById(resourceId);\n                views.put(resourceId, view);\n            }\n            return (T) view;\n        }\n        public View getConvertView() {\n            return convertView;\n        }\n        public void setConvertView(View convertView) {\n            this.convertView = convertView;\n        }\n    }\n}</pre>","slug":"android-Adapter优化之终极版","published":1,"updated":"2016-03-18T04:01:01.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmym70016c4ubnfqk6g1f","content":"<p>移动开发中个人认为最重要的就是应用的用户体验度,其中最重要的就是流畅度,而Android的Adapter优化就是很重要的一个方面,下面的代码就是一个Adapter的优化,当然从网上学习了很多大神写的代码,贴出来分享,大家共同进步,有什么好的建议可以留言评论<br><a id=\"more\"></a></p>\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.SparseArray;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport java.util.ArrayList;\npublic abstract class BaseArrayListAdapter&lt;T&gt; extends BaseAdapter {\n    protected ArrayList&lt;T&gt; data;\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return (data == null) ? 0 : data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return getViewHolder(convertView, parent, position).getConvertView();\n    }\n    public abstract ViewHolder getViewHolder(View convertView,\n        ViewGroup parent, int position);\n    static class ViewHolder {\n        private final SparseArray&lt;View&gt; views;\n        private View convertView;\n        private ViewHolder(Context mContext, View convertView) {\n            this.views = new SparseArray&lt;View&gt;();\n            this.convertView = convertView;\n            convertView.setTag(this);\n        }\n        public static ViewHolder get(Context mContext, View convertView,\n            ViewGroup parent, int resId) {\n            if (convertView == null) {\n                LayoutInflater factory = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                convertView = factory.inflate(resId, parent, false); //\n                return new ViewHolder(mContext, convertView);\n            }\n            return (ViewHolder) convertView.getTag();\n        }\n        @SuppressWarnings(&quot;unchecked&quot;)\n        public &lt;T extends View&gt; T findViewById(int resourceId) {\n            View view = views.get(resourceId);\n            if (view == null) {\n                view = convertView.findViewById(resourceId);\n                views.put(resourceId, view);\n            }\n            return (T) view;\n        }\n        public View getConvertView() {\n            return convertView;\n        }\n        public void setConvertView(View convertView) {\n            this.convertView = convertView;\n        }\n    }\n}</pre>","excerpt":"<p>移动开发中个人认为最重要的就是应用的用户体验度,其中最重要的就是流畅度,而Android的Adapter优化就是很重要的一个方面,下面的代码就是一个Adapter的优化,当然从网上学习了很多大神写的代码,贴出来分享,大家共同进步,有什么好的建议可以留言评论<br>","more":"</p>\n<pre class=\"brush:java;toolbar:false\">import android.content.Context;\nimport android.util.SparseArray;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport java.util.ArrayList;\npublic abstract class BaseArrayListAdapter&lt;T&gt; extends BaseAdapter {\n    protected ArrayList&lt;T&gt; data;\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return (data == null) ? 0 : data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return getViewHolder(convertView, parent, position).getConvertView();\n    }\n    public abstract ViewHolder getViewHolder(View convertView,\n        ViewGroup parent, int position);\n    static class ViewHolder {\n        private final SparseArray&lt;View&gt; views;\n        private View convertView;\n        private ViewHolder(Context mContext, View convertView) {\n            this.views = new SparseArray&lt;View&gt;();\n            this.convertView = convertView;\n            convertView.setTag(this);\n        }\n        public static ViewHolder get(Context mContext, View convertView,\n            ViewGroup parent, int resId) {\n            if (convertView == null) {\n                LayoutInflater factory = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                convertView = factory.inflate(resId, parent, false); //\n                return new ViewHolder(mContext, convertView);\n            }\n            return (ViewHolder) convertView.getTag();\n        }\n        @SuppressWarnings(&quot;unchecked&quot;)\n        public &lt;T extends View&gt; T findViewById(int resourceId) {\n            View view = views.get(resourceId);\n            if (view == null) {\n                view = convertView.findViewById(resourceId);\n                views.put(resourceId, view);\n            }\n            return (T) view;\n        }\n        public View getConvertView() {\n            return convertView;\n        }\n        public void setConvertView(View convertView) {\n            this.convertView = convertView;\n        }\n    }\n}</pre>"},{"title":"ViewHolder的简洁写法","date":"2015-06-24T07:57:04.000Z","_content":"<!-- more -->\n<pre class=\"brush:java;toolbar:false\">public class ViewHolder {\n    // I added a generic return type to reduce the casting noise in client code\n    @SuppressWarnings(&quot;unchecked&quot;)\n    public static &lt;T extends View&gt; T get(View view, int id) {\n        SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();\n        if (viewHolder == null) {\n            viewHolder = new SparseArray&lt;View&gt;();\n            view.setTag(viewHolder);\n        }\n        View childView = viewHolder.get(id);\n        if (childView == null) {\n            childView = view.findViewById(id);\n            viewHolder.put(id, childView);\n        }\n        return (T) childView;\n    }\n}</pre>\n\n<span style=\"color:#333333\"><span style=\"font-family:Arial\">ViewHolder这么写（只提供一个静态方法，其实可以加一个私有构造函数防止外部实例化），代码很简单，看过就明白了</span></span>\n<pre class=\"brush:java;toolbar:false\">public View getView(int position, View convertView, ViewGroup parent)\n {\n    if (convertView == null) {\n        convertView = LayoutInflater.from(context)\n          .inflate(R.layout.banana_phone, parent, false);\n    }\n    ImageView bananaView = ViewHolder.get(convertView, R.id.banana);\n    TextView phoneView = ViewHolder.get(convertView, R.id.phone);\n    BananaPhone bananaPhone = getItem(position);\n    phoneView.setText(bananaPhone.getPhone());\n    bananaView.setImageResource(bananaPhone.getBanana());\n    return convertView;\n}</pre>","source":"_posts/ViewHolder的简洁写法.md","raw":"---\ntitle: ViewHolder的简洁写法\ncategories:\n- 文章\ntags: \n- ViewHolder\n- ListView\ndate: 2015-06-24 15:57:04\n---\n<!-- more -->\n<pre class=\"brush:java;toolbar:false\">public class ViewHolder {\n    // I added a generic return type to reduce the casting noise in client code\n    @SuppressWarnings(&quot;unchecked&quot;)\n    public static &lt;T extends View&gt; T get(View view, int id) {\n        SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();\n        if (viewHolder == null) {\n            viewHolder = new SparseArray&lt;View&gt;();\n            view.setTag(viewHolder);\n        }\n        View childView = viewHolder.get(id);\n        if (childView == null) {\n            childView = view.findViewById(id);\n            viewHolder.put(id, childView);\n        }\n        return (T) childView;\n    }\n}</pre>\n\n<span style=\"color:#333333\"><span style=\"font-family:Arial\">ViewHolder这么写（只提供一个静态方法，其实可以加一个私有构造函数防止外部实例化），代码很简单，看过就明白了</span></span>\n<pre class=\"brush:java;toolbar:false\">public View getView(int position, View convertView, ViewGroup parent)\n {\n    if (convertView == null) {\n        convertView = LayoutInflater.from(context)\n          .inflate(R.layout.banana_phone, parent, false);\n    }\n    ImageView bananaView = ViewHolder.get(convertView, R.id.banana);\n    TextView phoneView = ViewHolder.get(convertView, R.id.phone);\n    BananaPhone bananaPhone = getItem(position);\n    phoneView.setText(bananaPhone.getPhone());\n    bananaView.setImageResource(bananaPhone.getBanana());\n    return convertView;\n}</pre>","slug":"ViewHolder的简洁写法","published":1,"updated":"2016-03-18T04:04:30.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmym90019c4ubef7tc542","content":"<a id=\"more\"></a>\n<pre class=\"brush:java;toolbar:false\">public class ViewHolder {\n    // I added a generic return type to reduce the casting noise in client code\n    @SuppressWarnings(&quot;unchecked&quot;)\n    public static &lt;T extends View&gt; T get(View view, int id) {\n        SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();\n        if (viewHolder == null) {\n            viewHolder = new SparseArray&lt;View&gt;();\n            view.setTag(viewHolder);\n        }\n        View childView = viewHolder.get(id);\n        if (childView == null) {\n            childView = view.findViewById(id);\n            viewHolder.put(id, childView);\n        }\n        return (T) childView;\n    }\n}</pre>\n\n<p><span style=\"color:#333333\"><span style=\"font-family:Arial\">ViewHolder这么写（只提供一个静态方法，其实可以加一个私有构造函数防止外部实例化），代码很简单，看过就明白了</span></span></p>\n<pre class=\"brush:java;toolbar:false\">public View getView(int position, View convertView, ViewGroup parent)\n {\n    if (convertView == null) {\n        convertView = LayoutInflater.from(context)\n          .inflate(R.layout.banana_phone, parent, false);\n    }\n    ImageView bananaView = ViewHolder.get(convertView, R.id.banana);\n    TextView phoneView = ViewHolder.get(convertView, R.id.phone);\n    BananaPhone bananaPhone = getItem(position);\n    phoneView.setText(bananaPhone.getPhone());\n    bananaView.setImageResource(bananaPhone.getBanana());\n    return convertView;\n}</pre>","excerpt":"","more":"<pre class=\"brush:java;toolbar:false\">public class ViewHolder {\n    // I added a generic return type to reduce the casting noise in client code\n    @SuppressWarnings(&quot;unchecked&quot;)\n    public static &lt;T extends View&gt; T get(View view, int id) {\n        SparseArray&lt;View&gt; viewHolder = (SparseArray&lt;View&gt;) view.getTag();\n        if (viewHolder == null) {\n            viewHolder = new SparseArray&lt;View&gt;();\n            view.setTag(viewHolder);\n        }\n        View childView = viewHolder.get(id);\n        if (childView == null) {\n            childView = view.findViewById(id);\n            viewHolder.put(id, childView);\n        }\n        return (T) childView;\n    }\n}</pre>\n\n<p><span style=\"color:#333333\"><span style=\"font-family:Arial\">ViewHolder这么写（只提供一个静态方法，其实可以加一个私有构造函数防止外部实例化），代码很简单，看过就明白了</span></span></p>\n<pre class=\"brush:java;toolbar:false\">public View getView(int position, View convertView, ViewGroup parent)\n {\n    if (convertView == null) {\n        convertView = LayoutInflater.from(context)\n          .inflate(R.layout.banana_phone, parent, false);\n    }\n    ImageView bananaView = ViewHolder.get(convertView, R.id.banana);\n    TextView phoneView = ViewHolder.get(convertView, R.id.phone);\n    BananaPhone bananaPhone = getItem(position);\n    phoneView.setText(bananaPhone.getPhone());\n    bananaView.setImageResource(bananaPhone.getBanana());\n    return convertView;\n}</pre>"},{"title":"android XML布局参数大全","date":"2015-07-10T15:39:38.000Z","_content":"<!-- more -->\n第一类:属性值为true或false\nandroid:layout_centerHrizontal  水平居中\nandroid:layout_centerVertical   垂直居中\nandroid:layout_centerInparent    相对于父元素完全居中\nandroid:layout_alignParentBottom 贴紧父元素的下边缘\nandroid:layout_alignParentLeft   贴紧父元素的左边缘\nandroid:layout_alignParentRight  贴紧父元素的右边缘\nandroid:layout_alignParentTop    贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物\n第二类：属性值必须为id的引用名”\nandroid:layout_below      在某元素的下方\nandroid:layout_above      在某元素的的上方\nandroid:layout_toLeftOf   在某元素的左边\nandroid:layout_toRightOf  在某元素的右边\nandroid:layout_alignTop   本元素的上边缘和某元素的的上边缘对齐\nandroid:layout_alignLeft  本元素的左边缘和某元素的的左边缘对齐\nandroid:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐\nandroid:layout_alignRight  本元素的右边缘和某元素的的右边缘对齐\n第三类：属性值为具体的像素值，如30dip，40px\nandroid:layout_marginBottom       离某元素底边缘的距离\nandroid:layout_marginLeft         离某元素左边缘的距离\nandroid:layout_marginRight        离某元素右边缘的距离\nandroid:layout_marginTop          离某元素上边缘的距离\nEditText的android:hint  设置EditText为空时输入框内的提示信息。\nandroid:gravity　\nandroid:gravity属性是对该view 内容的限定．比如一个button 上面的text.  你可以设置该text 在view的靠左，靠右等位置．以button为例，android:gravity=&quot;right&quot;则button上面的文字靠右\nandroid:layout_gravity\nandroid:layout_gravity\n 是用来设置该view相对与起父view 的位置．比如一个button \n在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 \n例，android:layout_gravity=&quot;right&quot;则button靠右\nandroid:scaleType：\nandroid:scaleType是控制图片如何resized/moved来匹对ImageView的size。ImageView.ScaleType / android:scaleType值的意义区别：\nCENTER /center  按图片的原来size居中显示，当图片长/宽超过View的长/宽，则截取图片的居中部分显示\nCENTER_CROP / centerCrop  按比例扩大图片的size居中显示，使得图片长(宽)等于或大于View的长(宽)\nCENTER_INSIDE / centerInside  将图片的内容完整居中显示，通过按比例缩小或原来的size使得图片长/宽等于或小于View的长/宽\nFIT_CENTER / fitCenter  把图片按比例扩大/缩小到View的宽度，居中显示\nFIT_END / fitEnd   把图片按比例扩大/缩小到View的宽度，显示在View的下部分位置\nFIT_START / fitStart  把图片按比例扩大/缩小到View的宽度，显示在View的上部分位置\nFIT_XY / fitXY  把图片不按比例扩大/缩小到View的大小显示\nMATRIX / matrix 用矩阵来绘制，动态缩小放大图片来显示。\n** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\nandroid:id\n为控件指定相应的ID\nandroid:text\n指定控件当中显示的文字，需要注意的是，这里尽量使用strings.xml文件当中的字符串\nandroid:gravity\n指定View组件的对齐方式，比如说居中，居右等位置 这里指的是控件中的文本位置并不是控件本身\nandroid:layout_gravity\n指定Container组件的对齐方式．比如一个button 在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 例，android:layout_gravity=&quot;right&quot;则button靠右\nandroid:textSize\n指定控件当中字体的大小\nandroid:background\n指定该控件所使用的背景色，RGB命名法\nandroid:width\n指定控件的宽度\nandroid:height\n指定控件的高度\nandroid:layout_width\n指定Container组件的宽度\nandroid:layout_height\n指定Container组件的高度\nandroid:layout_weight\nView中很重要的属性，按比例划分空间\nandroid:padding*\n指定控件的内边距，也就是说控件当中的内容\nandroid:sigleLine\n如果设置为真的话，则控件的内容在同一行中进行显示\nandroid:scaleType\n是控制图片如何resized/moved来匹对ImageView的siz\nandroid:layout_centerHrizontal\n水平居中\nandroid:layout_centerVertical\n垂直居中\nandroid:layout_centerInparent\n相对于父元素完全居中\nandroid:layout_alignParentBottom\n贴紧父元素的下边缘\nandroid:layout_alignParentLeft\n贴紧父元素的左边缘\nandroid:layout_alignParentRight\n贴紧父元素的右边缘\nandroid:layout_alignParentTop\n贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing\n如果对应的兄弟元素找不到的话就以父元素做参照物\nandroid:layout_below\n在某元素的下方\nandroid:layout_above\n在某元素的的上方\nandroid:layout_toLeftOf\n在某元素的左边\nandroid:layout_toRightOf\n在某元素的右边\nandroid:layout_alignTop\n本元素的上边缘和某元素的的上边缘对齐\nandroid:layout_alignLeft\n本元素的左边缘和某元素的的左边缘对齐\nandroid:layout_alignBottom\n本元素的下边缘和某元素的的下边缘对齐\nandroid:layout_alignRight\n本元素的右边缘和某元素的的右边缘对齐\nandroid:layout_marginBottom\n离某元素底边缘的距离\nandroid:layout_marginLeft\n离某元素左边缘的距离\nandroid:layout_marginRight\n离某元素右边缘的距离\nandroid:layout_marginTop\n离某元素上边缘的距离\nandroid:paddingLeft\n本元素内容离本元素右边缘的距离\nandroid:paddingRight\n本元素内容离本元素上边缘的距离\nandroid:hint\n设置EditText为空时输入框内的提示信息\nandroid:LinearLayout\n它确定了LinearLayout的方向，其值可以为vertical，表示垂直布局horizontal， 表示水平布局\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------\nandroid:interpolator\n可\n 能有很多人不理解它的用法，文档里说的也不太清楚，其实很简单，看下面：interpolator定义一个动画的变化率（the rate of \nchange）。这使得基本的动画效果(alpha, scale, translate, \nrotate）得以加速，减速，重复等。用通俗的一点的话理解就是：动画的进度使用 Interpolator 控制。interpolator \n定义了动画的变化速度，可以实现匀速、正加速、负加速、无规则变加速等。Interpolator 是基类，封装了所有 Interpolator \n的共同方法，它只有一个方法，即 getInterpolation (float input)，该方法 maps a point on the \ntimeline to a multiplier to be applied to the transformations of an \nanimation。Android 提供了几个 Interpolator 子类，实现了不同的速度曲线，如下：\nAccelerateDecelerateInterpolator        在动画开始与介绍的地方速率改变比较慢，在中间的时侯加速\nAccelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始加速\nCycleInterpolator        动画循环播放特定的次数，速率改变沿着正弦曲线\nDecelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始减速\nLinearInterpolator        在动画的以均匀的速率改变\n对于 LinearInterpolator ，变化率是个常数，即 f (x) = x.\npublic float getInterpolation(float input) {\nreturn input;\n}\nInterpolator其他的几个子类，也都是按照特定的算法，实现了对变化率。还可以定义自己的 Interpolator 子类，实现抛物线、自由落体等物理效果。","source":"_posts/android-XML布局参数大全.md","raw":"---\ntitle: android XML布局参数大全\ncategories:\n- 文章\ndate: 2015-07-10 23:39:38\n---\n<!-- more -->\n第一类:属性值为true或false\nandroid:layout_centerHrizontal  水平居中\nandroid:layout_centerVertical   垂直居中\nandroid:layout_centerInparent    相对于父元素完全居中\nandroid:layout_alignParentBottom 贴紧父元素的下边缘\nandroid:layout_alignParentLeft   贴紧父元素的左边缘\nandroid:layout_alignParentRight  贴紧父元素的右边缘\nandroid:layout_alignParentTop    贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物\n第二类：属性值必须为id的引用名”\nandroid:layout_below      在某元素的下方\nandroid:layout_above      在某元素的的上方\nandroid:layout_toLeftOf   在某元素的左边\nandroid:layout_toRightOf  在某元素的右边\nandroid:layout_alignTop   本元素的上边缘和某元素的的上边缘对齐\nandroid:layout_alignLeft  本元素的左边缘和某元素的的左边缘对齐\nandroid:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐\nandroid:layout_alignRight  本元素的右边缘和某元素的的右边缘对齐\n第三类：属性值为具体的像素值，如30dip，40px\nandroid:layout_marginBottom       离某元素底边缘的距离\nandroid:layout_marginLeft         离某元素左边缘的距离\nandroid:layout_marginRight        离某元素右边缘的距离\nandroid:layout_marginTop          离某元素上边缘的距离\nEditText的android:hint  设置EditText为空时输入框内的提示信息。\nandroid:gravity　\nandroid:gravity属性是对该view 内容的限定．比如一个button 上面的text.  你可以设置该text 在view的靠左，靠右等位置．以button为例，android:gravity=&quot;right&quot;则button上面的文字靠右\nandroid:layout_gravity\nandroid:layout_gravity\n 是用来设置该view相对与起父view 的位置．比如一个button \n在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 \n例，android:layout_gravity=&quot;right&quot;则button靠右\nandroid:scaleType：\nandroid:scaleType是控制图片如何resized/moved来匹对ImageView的size。ImageView.ScaleType / android:scaleType值的意义区别：\nCENTER /center  按图片的原来size居中显示，当图片长/宽超过View的长/宽，则截取图片的居中部分显示\nCENTER_CROP / centerCrop  按比例扩大图片的size居中显示，使得图片长(宽)等于或大于View的长(宽)\nCENTER_INSIDE / centerInside  将图片的内容完整居中显示，通过按比例缩小或原来的size使得图片长/宽等于或小于View的长/宽\nFIT_CENTER / fitCenter  把图片按比例扩大/缩小到View的宽度，居中显示\nFIT_END / fitEnd   把图片按比例扩大/缩小到View的宽度，显示在View的下部分位置\nFIT_START / fitStart  把图片按比例扩大/缩小到View的宽度，显示在View的上部分位置\nFIT_XY / fitXY  把图片不按比例扩大/缩小到View的大小显示\nMATRIX / matrix 用矩阵来绘制，动态缩小放大图片来显示。\n** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\nandroid:id\n为控件指定相应的ID\nandroid:text\n指定控件当中显示的文字，需要注意的是，这里尽量使用strings.xml文件当中的字符串\nandroid:gravity\n指定View组件的对齐方式，比如说居中，居右等位置 这里指的是控件中的文本位置并不是控件本身\nandroid:layout_gravity\n指定Container组件的对齐方式．比如一个button 在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 例，android:layout_gravity=&quot;right&quot;则button靠右\nandroid:textSize\n指定控件当中字体的大小\nandroid:background\n指定该控件所使用的背景色，RGB命名法\nandroid:width\n指定控件的宽度\nandroid:height\n指定控件的高度\nandroid:layout_width\n指定Container组件的宽度\nandroid:layout_height\n指定Container组件的高度\nandroid:layout_weight\nView中很重要的属性，按比例划分空间\nandroid:padding*\n指定控件的内边距，也就是说控件当中的内容\nandroid:sigleLine\n如果设置为真的话，则控件的内容在同一行中进行显示\nandroid:scaleType\n是控制图片如何resized/moved来匹对ImageView的siz\nandroid:layout_centerHrizontal\n水平居中\nandroid:layout_centerVertical\n垂直居中\nandroid:layout_centerInparent\n相对于父元素完全居中\nandroid:layout_alignParentBottom\n贴紧父元素的下边缘\nandroid:layout_alignParentLeft\n贴紧父元素的左边缘\nandroid:layout_alignParentRight\n贴紧父元素的右边缘\nandroid:layout_alignParentTop\n贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing\n如果对应的兄弟元素找不到的话就以父元素做参照物\nandroid:layout_below\n在某元素的下方\nandroid:layout_above\n在某元素的的上方\nandroid:layout_toLeftOf\n在某元素的左边\nandroid:layout_toRightOf\n在某元素的右边\nandroid:layout_alignTop\n本元素的上边缘和某元素的的上边缘对齐\nandroid:layout_alignLeft\n本元素的左边缘和某元素的的左边缘对齐\nandroid:layout_alignBottom\n本元素的下边缘和某元素的的下边缘对齐\nandroid:layout_alignRight\n本元素的右边缘和某元素的的右边缘对齐\nandroid:layout_marginBottom\n离某元素底边缘的距离\nandroid:layout_marginLeft\n离某元素左边缘的距离\nandroid:layout_marginRight\n离某元素右边缘的距离\nandroid:layout_marginTop\n离某元素上边缘的距离\nandroid:paddingLeft\n本元素内容离本元素右边缘的距离\nandroid:paddingRight\n本元素内容离本元素上边缘的距离\nandroid:hint\n设置EditText为空时输入框内的提示信息\nandroid:LinearLayout\n它确定了LinearLayout的方向，其值可以为vertical，表示垂直布局horizontal， 表示水平布局\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------\nandroid:interpolator\n可\n 能有很多人不理解它的用法，文档里说的也不太清楚，其实很简单，看下面：interpolator定义一个动画的变化率（the rate of \nchange）。这使得基本的动画效果(alpha, scale, translate, \nrotate）得以加速，减速，重复等。用通俗的一点的话理解就是：动画的进度使用 Interpolator 控制。interpolator \n定义了动画的变化速度，可以实现匀速、正加速、负加速、无规则变加速等。Interpolator 是基类，封装了所有 Interpolator \n的共同方法，它只有一个方法，即 getInterpolation (float input)，该方法 maps a point on the \ntimeline to a multiplier to be applied to the transformations of an \nanimation。Android 提供了几个 Interpolator 子类，实现了不同的速度曲线，如下：\nAccelerateDecelerateInterpolator        在动画开始与介绍的地方速率改变比较慢，在中间的时侯加速\nAccelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始加速\nCycleInterpolator        动画循环播放特定的次数，速率改变沿着正弦曲线\nDecelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始减速\nLinearInterpolator        在动画的以均匀的速率改变\n对于 LinearInterpolator ，变化率是个常数，即 f (x) = x.\npublic float getInterpolation(float input) {\nreturn input;\n}\nInterpolator其他的几个子类，也都是按照特定的算法，实现了对变化率。还可以定义自己的 Interpolator 子类，实现抛物线、自由落体等物理效果。","slug":"android-XML布局参数大全","published":1,"updated":"2016-03-18T04:01:12.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymb001cc4ub3gontm92","content":"<a id=\"more\"></a>\n<p>第一类:属性值为true或false<br>android:layout_centerHrizontal  水平居中<br>android:layout_centerVertical   垂直居中<br>android:layout_centerInparent    相对于父元素完全居中<br>android:layout_alignParentBottom 贴紧父元素的下边缘<br>android:layout_alignParentLeft   贴紧父元素的左边缘<br>android:layout_alignParentRight  贴紧父元素的右边缘<br>android:layout_alignParentTop    贴紧父元素的上边缘<br>android:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物<br>第二类：属性值必须为id的引用名”<br>android:layout_below      在某元素的下方<br>android:layout_above      在某元素的的上方<br>android:layout_toLeftOf   在某元素的左边<br>android:layout_toRightOf  在某元素的右边<br>android:layout_alignTop   本元素的上边缘和某元素的的上边缘对齐<br>android:layout_alignLeft  本元素的左边缘和某元素的的左边缘对齐<br>android:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐<br>android:layout_alignRight  本元素的右边缘和某元素的的右边缘对齐<br>第三类：属性值为具体的像素值，如30dip，40px<br>android:layout_marginBottom       离某元素底边缘的距离<br>android:layout_marginLeft         离某元素左边缘的距离<br>android:layout_marginRight        离某元素右边缘的距离<br>android:layout_marginTop          离某元素上边缘的距离<br>EditText的android:hint  设置EditText为空时输入框内的提示信息。<br>android:gravity　<br>android:gravity属性是对该view 内容的限定．比如一个button 上面的text.  你可以设置该text 在view的靠左，靠右等位置．以button为例，android:gravity=&quot;right&quot;则button上面的文字靠右<br>android:layout_gravity<br>android:layout_gravity<br> 是用来设置该view相对与起父view 的位置．比如一个button<br>在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为<br>例，android:layout_gravity=&quot;right&quot;则button靠右<br>android:scaleType：<br>android:scaleType是控制图片如何resized/moved来匹对ImageView的size。ImageView.ScaleType / android:scaleType值的意义区别：<br>CENTER /center  按图片的原来size居中显示，当图片长/宽超过View的长/宽，则截取图片的居中部分显示<br>CENTER_CROP / centerCrop  按比例扩大图片的size居中显示，使得图片长(宽)等于或大于View的长(宽)<br>CENTER_INSIDE / centerInside  将图片的内容完整居中显示，通过按比例缩小或原来的size使得图片长/宽等于或小于View的长/宽<br>FIT_CENTER / fitCenter  把图片按比例扩大/缩小到View的宽度，居中显示<br>FIT_END / fitEnd   把图片按比例扩大/缩小到View的宽度，显示在View的下部分位置<br>FIT_START / fitStart  把图片按比例扩大/缩小到View的宽度，显示在View的上部分位置<br>FIT_XY / fitXY  把图片不按比例扩大/缩小到View的大小显示<br>MATRIX / matrix 用矩阵来绘制，动态缩小放大图片来显示。</p>\n<h2 id=\"要注意一点，Drawable文件夹里面的图片命名是不能大写的。\"><a href=\"#要注意一点，Drawable文件夹里面的图片命名是不能大写的。\" class=\"headerlink\" title=\"** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。\"></a>** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。</h2><p>android:id<br>为控件指定相应的ID<br>android:text<br>指定控件当中显示的文字，需要注意的是，这里尽量使用strings.xml文件当中的字符串<br>android:gravity<br>指定View组件的对齐方式，比如说居中，居右等位置 这里指的是控件中的文本位置并不是控件本身<br>android:layout_gravity<br>指定Container组件的对齐方式．比如一个button 在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 例，android:layout_gravity=&quot;right&quot;则button靠右<br>android:textSize<br>指定控件当中字体的大小<br>android:background<br>指定该控件所使用的背景色，RGB命名法<br>android:width<br>指定控件的宽度<br>android:height<br>指定控件的高度<br>android:layout_width<br>指定Container组件的宽度<br>android:layout_height<br>指定Container组件的高度<br>android:layout_weight<br>View中很重要的属性，按比例划分空间<br>android:padding*<br>指定控件的内边距，也就是说控件当中的内容<br>android:sigleLine<br>如果设置为真的话，则控件的内容在同一行中进行显示<br>android:scaleType<br>是控制图片如何resized/moved来匹对ImageView的siz<br>android:layout_centerHrizontal<br>水平居中<br>android:layout_centerVertical<br>垂直居中<br>android:layout_centerInparent<br>相对于父元素完全居中<br>android:layout_alignParentBottom<br>贴紧父元素的下边缘<br>android:layout_alignParentLeft<br>贴紧父元素的左边缘<br>android:layout_alignParentRight<br>贴紧父元素的右边缘<br>android:layout_alignParentTop<br>贴紧父元素的上边缘<br>android:layout_alignWithParentIfMissing<br>如果对应的兄弟元素找不到的话就以父元素做参照物<br>android:layout_below<br>在某元素的下方<br>android:layout_above<br>在某元素的的上方<br>android:layout_toLeftOf<br>在某元素的左边<br>android:layout_toRightOf<br>在某元素的右边<br>android:layout_alignTop<br>本元素的上边缘和某元素的的上边缘对齐<br>android:layout_alignLeft<br>本元素的左边缘和某元素的的左边缘对齐<br>android:layout_alignBottom<br>本元素的下边缘和某元素的的下边缘对齐<br>android:layout_alignRight<br>本元素的右边缘和某元素的的右边缘对齐<br>android:layout_marginBottom<br>离某元素底边缘的距离<br>android:layout_marginLeft<br>离某元素左边缘的距离<br>android:layout_marginRight<br>离某元素右边缘的距离<br>android:layout_marginTop<br>离某元素上边缘的距离<br>android:paddingLeft<br>本元素内容离本元素右边缘的距离<br>android:paddingRight<br>本元素内容离本元素上边缘的距离<br>android:hint<br>设置EditText为空时输入框内的提示信息<br>android:LinearLayout<br>它确定了LinearLayout的方向，其值可以为vertical，表示垂直布局horizontal， 表示水平布局</p>\n<hr>\n<p>android:interpolator<br>可<br> 能有很多人不理解它的用法，文档里说的也不太清楚，其实很简单，看下面：interpolator定义一个动画的变化率（the rate of<br>change）。这使得基本的动画效果(alpha, scale, translate,<br>rotate）得以加速，减速，重复等。用通俗的一点的话理解就是：动画的进度使用 Interpolator 控制。interpolator<br>定义了动画的变化速度，可以实现匀速、正加速、负加速、无规则变加速等。Interpolator 是基类，封装了所有 Interpolator<br>的共同方法，它只有一个方法，即 getInterpolation (float input)，该方法 maps a point on the<br>timeline to a multiplier to be applied to the transformations of an<br>animation。Android 提供了几个 Interpolator 子类，实现了不同的速度曲线，如下：<br>AccelerateDecelerateInterpolator        在动画开始与介绍的地方速率改变比较慢，在中间的时侯加速<br>AccelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始加速<br>CycleInterpolator        动画循环播放特定的次数，速率改变沿着正弦曲线<br>DecelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始减速<br>LinearInterpolator        在动画的以均匀的速率改变<br>对于 LinearInterpolator ，变化率是个常数，即 f (x) = x.<br>public float getInterpolation(float input) {<br>return input;<br>}<br>Interpolator其他的几个子类，也都是按照特定的算法，实现了对变化率。还可以定义自己的 Interpolator 子类，实现抛物线、自由落体等物理效果。</p>\n","excerpt":"","more":"<p>第一类:属性值为true或false<br>android:layout_centerHrizontal  水平居中<br>android:layout_centerVertical   垂直居中<br>android:layout_centerInparent    相对于父元素完全居中<br>android:layout_alignParentBottom 贴紧父元素的下边缘<br>android:layout_alignParentLeft   贴紧父元素的左边缘<br>android:layout_alignParentRight  贴紧父元素的右边缘<br>android:layout_alignParentTop    贴紧父元素的上边缘<br>android:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物<br>第二类：属性值必须为id的引用名”<br>android:layout_below      在某元素的下方<br>android:layout_above      在某元素的的上方<br>android:layout_toLeftOf   在某元素的左边<br>android:layout_toRightOf  在某元素的右边<br>android:layout_alignTop   本元素的上边缘和某元素的的上边缘对齐<br>android:layout_alignLeft  本元素的左边缘和某元素的的左边缘对齐<br>android:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐<br>android:layout_alignRight  本元素的右边缘和某元素的的右边缘对齐<br>第三类：属性值为具体的像素值，如30dip，40px<br>android:layout_marginBottom       离某元素底边缘的距离<br>android:layout_marginLeft         离某元素左边缘的距离<br>android:layout_marginRight        离某元素右边缘的距离<br>android:layout_marginTop          离某元素上边缘的距离<br>EditText的android:hint  设置EditText为空时输入框内的提示信息。<br>android:gravity　<br>android:gravity属性是对该view 内容的限定．比如一个button 上面的text.  你可以设置该text 在view的靠左，靠右等位置．以button为例，android:gravity=&quot;right&quot;则button上面的文字靠右<br>android:layout_gravity<br>android:layout_gravity<br> 是用来设置该view相对与起父view 的位置．比如一个button<br>在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为<br>例，android:layout_gravity=&quot;right&quot;则button靠右<br>android:scaleType：<br>android:scaleType是控制图片如何resized/moved来匹对ImageView的size。ImageView.ScaleType / android:scaleType值的意义区别：<br>CENTER /center  按图片的原来size居中显示，当图片长/宽超过View的长/宽，则截取图片的居中部分显示<br>CENTER_CROP / centerCrop  按比例扩大图片的size居中显示，使得图片长(宽)等于或大于View的长(宽)<br>CENTER_INSIDE / centerInside  将图片的内容完整居中显示，通过按比例缩小或原来的size使得图片长/宽等于或小于View的长/宽<br>FIT_CENTER / fitCenter  把图片按比例扩大/缩小到View的宽度，居中显示<br>FIT_END / fitEnd   把图片按比例扩大/缩小到View的宽度，显示在View的下部分位置<br>FIT_START / fitStart  把图片按比例扩大/缩小到View的宽度，显示在View的上部分位置<br>FIT_XY / fitXY  把图片不按比例扩大/缩小到View的大小显示<br>MATRIX / matrix 用矩阵来绘制，动态缩小放大图片来显示。</p>\n<h2 id=\"要注意一点，Drawable文件夹里面的图片命名是不能大写的。\"><a href=\"#要注意一点，Drawable文件夹里面的图片命名是不能大写的。\" class=\"headerlink\" title=\"** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。\"></a>** 要注意一点，Drawable文件夹里面的图片命名是不能大写的。</h2><p>android:id<br>为控件指定相应的ID<br>android:text<br>指定控件当中显示的文字，需要注意的是，这里尽量使用strings.xml文件当中的字符串<br>android:gravity<br>指定View组件的对齐方式，比如说居中，居右等位置 这里指的是控件中的文本位置并不是控件本身<br>android:layout_gravity<br>指定Container组件的对齐方式．比如一个button 在linearlayout里，你想把该button放在靠左、靠右等位置就可以通过该属性设置．以button为 例，android:layout_gravity=&quot;right&quot;则button靠右<br>android:textSize<br>指定控件当中字体的大小<br>android:background<br>指定该控件所使用的背景色，RGB命名法<br>android:width<br>指定控件的宽度<br>android:height<br>指定控件的高度<br>android:layout_width<br>指定Container组件的宽度<br>android:layout_height<br>指定Container组件的高度<br>android:layout_weight<br>View中很重要的属性，按比例划分空间<br>android:padding*<br>指定控件的内边距，也就是说控件当中的内容<br>android:sigleLine<br>如果设置为真的话，则控件的内容在同一行中进行显示<br>android:scaleType<br>是控制图片如何resized/moved来匹对ImageView的siz<br>android:layout_centerHrizontal<br>水平居中<br>android:layout_centerVertical<br>垂直居中<br>android:layout_centerInparent<br>相对于父元素完全居中<br>android:layout_alignParentBottom<br>贴紧父元素的下边缘<br>android:layout_alignParentLeft<br>贴紧父元素的左边缘<br>android:layout_alignParentRight<br>贴紧父元素的右边缘<br>android:layout_alignParentTop<br>贴紧父元素的上边缘<br>android:layout_alignWithParentIfMissing<br>如果对应的兄弟元素找不到的话就以父元素做参照物<br>android:layout_below<br>在某元素的下方<br>android:layout_above<br>在某元素的的上方<br>android:layout_toLeftOf<br>在某元素的左边<br>android:layout_toRightOf<br>在某元素的右边<br>android:layout_alignTop<br>本元素的上边缘和某元素的的上边缘对齐<br>android:layout_alignLeft<br>本元素的左边缘和某元素的的左边缘对齐<br>android:layout_alignBottom<br>本元素的下边缘和某元素的的下边缘对齐<br>android:layout_alignRight<br>本元素的右边缘和某元素的的右边缘对齐<br>android:layout_marginBottom<br>离某元素底边缘的距离<br>android:layout_marginLeft<br>离某元素左边缘的距离<br>android:layout_marginRight<br>离某元素右边缘的距离<br>android:layout_marginTop<br>离某元素上边缘的距离<br>android:paddingLeft<br>本元素内容离本元素右边缘的距离<br>android:paddingRight<br>本元素内容离本元素上边缘的距离<br>android:hint<br>设置EditText为空时输入框内的提示信息<br>android:LinearLayout<br>它确定了LinearLayout的方向，其值可以为vertical，表示垂直布局horizontal， 表示水平布局</p>\n<hr>\n<p>android:interpolator<br>可<br> 能有很多人不理解它的用法，文档里说的也不太清楚，其实很简单，看下面：interpolator定义一个动画的变化率（the rate of<br>change）。这使得基本的动画效果(alpha, scale, translate,<br>rotate）得以加速，减速，重复等。用通俗的一点的话理解就是：动画的进度使用 Interpolator 控制。interpolator<br>定义了动画的变化速度，可以实现匀速、正加速、负加速、无规则变加速等。Interpolator 是基类，封装了所有 Interpolator<br>的共同方法，它只有一个方法，即 getInterpolation (float input)，该方法 maps a point on the<br>timeline to a multiplier to be applied to the transformations of an<br>animation。Android 提供了几个 Interpolator 子类，实现了不同的速度曲线，如下：<br>AccelerateDecelerateInterpolator        在动画开始与介绍的地方速率改变比较慢，在中间的时侯加速<br>AccelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始加速<br>CycleInterpolator        动画循环播放特定的次数，速率改变沿着正弦曲线<br>DecelerateInterpolator        在动画开始的地方速率改变比较慢，然后开始减速<br>LinearInterpolator        在动画的以均匀的速率改变<br>对于 LinearInterpolator ，变化率是个常数，即 f (x) = x.<br>public float getInterpolation(float input) {<br>return input;<br>}<br>Interpolator其他的几个子类，也都是按照特定的算法，实现了对变化率。还可以定义自己的 Interpolator 子类，实现抛物线、自由落体等物理效果。</p>"},{"title":"android万能适配器的BaseAdapter的使用","date":"2015-06-12T09:47:42.000Z","_content":"\nAndroid BaseAdapter(基础适配器）的用法，适配器的作用主要是用来给诸如(Spinner、ListView、GridView)来填充数据的。而(Spinner、\nListView、GridView)都有自己的适配器。\n<!-- more -->\n但是BaseAdapter对他们是通用的，首\n先我们看一下API文档：[**baseAdapter**](/doc/reference/android/widget/BaseAdapter.html)\n\n我们看到Android BaseAdapter已经实现了ListAdapter和SpinnerAdapter的接口，而GridView的适配器是实现了ListAdapter接口，只不过是二维的。所以说BaseAdapter对他们三者来说是通用的。\n\n就是我们定义一个类(如：MyAdapter)而这个类继承BaseAdapter.因为它是implements了ListAdapter和SpinnerAdapter的接口，所以要实现里面的方法，代码如下(未作任何改动的）：\n<div class=\"container\"><div class=\"line number1 index0 alt2\"></div><div class=\"line number25 index24 alt2\"><pre class=\"brush:java;toolbar:false\">private class MyAdapter extendsBaseAdapter {\n    @Override\n    public int getCount() {                   \n        // TODO Auto-generated method stub\n        return 0;\n    }\n \n    @Override\n    public Object getItem(int arg0) {\n        // TODO Auto-generated method stub\n        return null;\n    }\n \n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return 0;\n    }\n \n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}</pre></div></div>","source":"_posts/android万能适配器的BaseAdapter的使用.md","raw":"---\ntitle: android万能适配器的BaseAdapter的使用\ncategories:\n- 文章\ntags:\n- Adapter\ndate: 2015-06-12 17:47:42\n---\n\nAndroid BaseAdapter(基础适配器）的用法，适配器的作用主要是用来给诸如(Spinner、ListView、GridView)来填充数据的。而(Spinner、\nListView、GridView)都有自己的适配器。\n<!-- more -->\n但是BaseAdapter对他们是通用的，首\n先我们看一下API文档：[**baseAdapter**](/doc/reference/android/widget/BaseAdapter.html)\n\n我们看到Android BaseAdapter已经实现了ListAdapter和SpinnerAdapter的接口，而GridView的适配器是实现了ListAdapter接口，只不过是二维的。所以说BaseAdapter对他们三者来说是通用的。\n\n就是我们定义一个类(如：MyAdapter)而这个类继承BaseAdapter.因为它是implements了ListAdapter和SpinnerAdapter的接口，所以要实现里面的方法，代码如下(未作任何改动的）：\n<div class=\"container\"><div class=\"line number1 index0 alt2\"></div><div class=\"line number25 index24 alt2\"><pre class=\"brush:java;toolbar:false\">private class MyAdapter extendsBaseAdapter {\n    @Override\n    public int getCount() {                   \n        // TODO Auto-generated method stub\n        return 0;\n    }\n \n    @Override\n    public Object getItem(int arg0) {\n        // TODO Auto-generated method stub\n        return null;\n    }\n \n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return 0;\n    }\n \n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        return null;\n    }\n}</pre></div></div>","slug":"android万能适配器的BaseAdapter的使用","published":1,"updated":"2016-03-18T04:03:18.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymc001gc4ubxac9fy70","content":"<p>Android BaseAdapter(基础适配器）的用法，适配器的作用主要是用来给诸如(Spinner、ListView、GridView)来填充数据的。而(Spinner、<br>ListView、GridView)都有自己的适配器。<br><a id=\"more\"></a><br>但是BaseAdapter对他们是通用的，首<br>先我们看一下API文档：<a href=\"/doc/reference/android/widget/BaseAdapter.html\"><strong>baseAdapter</strong></a></p>\n<p>我们看到Android BaseAdapter已经实现了ListAdapter和SpinnerAdapter的接口，而GridView的适配器是实现了ListAdapter接口，只不过是二维的。所以说BaseAdapter对他们三者来说是通用的。</p>\n<p>就是我们定义一个类(如：MyAdapter)而这个类继承BaseAdapter.因为它是implements了ListAdapter和SpinnerAdapter的接口，所以要实现里面的方法，代码如下(未作任何改动的）：</p>\n<div class=\"container\"><div class=\"line number1 index0 alt2\"></div><div class=\"line number25 index24 alt2\"><pre class=\"brush:java;toolbar:false\">private class MyAdapter extendsBaseAdapter {<br>    @Override<br>    public int getCount() {<br>        // TODO Auto-generated method stub<br>        return 0;<br>    }<br><br>    @Override<br>    public Object getItem(int arg0) {<br>        // TODO Auto-generated method stub<br>        return null;<br>    }<br><br>    @Override<br>    public long getItemId(int position) {<br>        // TODO Auto-generated method stub<br>        return 0;<br>    }<br><br>    @Override<br>    public View getView(int position, View convertView, ViewGroup parent) {<br>        // TODO Auto-generated method stub<br>        return null;<br>    }<br>}</pre></div></div>","excerpt":"<p>Android BaseAdapter(基础适配器）的用法，适配器的作用主要是用来给诸如(Spinner、ListView、GridView)来填充数据的。而(Spinner、<br>ListView、GridView)都有自己的适配器。<br>","more":"<br>但是BaseAdapter对他们是通用的，首<br>先我们看一下API文档：<a href=\"/doc/reference/android/widget/BaseAdapter.html\"><strong>baseAdapter</strong></a></p>\n<p>我们看到Android BaseAdapter已经实现了ListAdapter和SpinnerAdapter的接口，而GridView的适配器是实现了ListAdapter接口，只不过是二维的。所以说BaseAdapter对他们三者来说是通用的。</p>\n<p>就是我们定义一个类(如：MyAdapter)而这个类继承BaseAdapter.因为它是implements了ListAdapter和SpinnerAdapter的接口，所以要实现里面的方法，代码如下(未作任何改动的）：</p>\n<div class=\"container\"><div class=\"line number1 index0 alt2\"></div><div class=\"line number25 index24 alt2\"><pre class=\"brush:java;toolbar:false\">private class MyAdapter extendsBaseAdapter {<br>    @Override<br>    public int getCount() {<br>        // TODO Auto-generated method stub<br>        return 0;<br>    }<br><br>    @Override<br>    public Object getItem(int arg0) {<br>        // TODO Auto-generated method stub<br>        return null;<br>    }<br><br>    @Override<br>    public long getItemId(int position) {<br>        // TODO Auto-generated method stub<br>        return 0;<br>    }<br><br>    @Override<br>    public View getView(int position, View convertView, ViewGroup parent) {<br>        // TODO Auto-generated method stub<br>        return null;<br>    }<br>}</pre></div></div>"},{"title":"eclipse 4.3 android开发集成sdk adt 无须再次配置android环境","date":"2015-06-12T09:31:02.000Z","_content":"\n**Eclipse**是著名的跨平台的自由集成开发环境（IDE）。最初主要用来Java语言开发，但是目前亦有人通过插件使其作为其他计算机语言比如C++和Python的开发工具。\n\n![](/upload/2015/06/201506121434101916133811.png \"201506121434101916133811.png\")\n\nEclipse的本身只是一个框架平台，但是众多插件的支持使得Eclipse拥有其他功能相对固定的IDE软件很难具有的灵活性。许多软件开发商以Eclipse为框架开发自己的IDE。\n<!-- more -->\nEclipse\n最初是由IBM公司开发的替代商业软件Visual Age for \nJava的下一代IDE开发环境，2001年11月贡献给开源社区，现在它由非营利软件供应商联盟Eclipse基金会（Eclipse \nFoundation）管理。 2003年，Eclipse 3.0选择OSGi服务平台规范为运行时架构。 \n2007年6月，稳定版3.3发布。2008年6月发布代号为Ganymede的3.4版。\n\n![](/upload/2015/06/201506121434101916134723.png \"201506121434101916134723.png\")\n\n<span style=\"color: rgb(255, 0, 0);\">此版本已经配置好sdk和adt，解压后可直接使用</span>\n\n更多eclipse介绍请访问[：官方网址](http://www.eclipse.org/downloads/packages/eclipse-standard-432/keplersr2)\n\njava环境下载：[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n\n集成套件下载：[http://pan.baidu.com/s/1yL9ro](http://pan.baidu.com/s/1yL9ro)","source":"_posts/eclipse-4-3-android开发集成sdk-adt-无须再次配置android环境.md","raw":"---\ntitle: eclipse 4.3 android开发集成sdk adt 无须再次配置android环境\ncategories:\n- 文章\ndate: 2015-06-12 17:31:02\n---\n\n**Eclipse**是著名的跨平台的自由集成开发环境（IDE）。最初主要用来Java语言开发，但是目前亦有人通过插件使其作为其他计算机语言比如C++和Python的开发工具。\n\n![](/upload/2015/06/201506121434101916133811.png \"201506121434101916133811.png\")\n\nEclipse的本身只是一个框架平台，但是众多插件的支持使得Eclipse拥有其他功能相对固定的IDE软件很难具有的灵活性。许多软件开发商以Eclipse为框架开发自己的IDE。\n<!-- more -->\nEclipse\n最初是由IBM公司开发的替代商业软件Visual Age for \nJava的下一代IDE开发环境，2001年11月贡献给开源社区，现在它由非营利软件供应商联盟Eclipse基金会（Eclipse \nFoundation）管理。 2003年，Eclipse 3.0选择OSGi服务平台规范为运行时架构。 \n2007年6月，稳定版3.3发布。2008年6月发布代号为Ganymede的3.4版。\n\n![](/upload/2015/06/201506121434101916134723.png \"201506121434101916134723.png\")\n\n<span style=\"color: rgb(255, 0, 0);\">此版本已经配置好sdk和adt，解压后可直接使用</span>\n\n更多eclipse介绍请访问[：官方网址](http://www.eclipse.org/downloads/packages/eclipse-standard-432/keplersr2)\n\njava环境下载：[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n\n集成套件下载：[http://pan.baidu.com/s/1yL9ro](http://pan.baidu.com/s/1yL9ro)","slug":"eclipse-4-3-android开发集成sdk-adt-无须再次配置android环境","published":1,"updated":"2016-03-18T04:05:27.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyme001jc4ub9zj4s9sb","content":"<p><strong>Eclipse</strong>是著名的跨平台的自由集成开发环境（IDE）。最初主要用来Java语言开发，但是目前亦有人通过插件使其作为其他计算机语言比如C++和Python的开发工具。</p>\n<p><img src=\"/upload/2015/06/201506121434101916133811.png\" alt=\"\" title=\"201506121434101916133811.png\"></p>\n<p>Eclipse的本身只是一个框架平台，但是众多插件的支持使得Eclipse拥有其他功能相对固定的IDE软件很难具有的灵活性。许多软件开发商以Eclipse为框架开发自己的IDE。<br><a id=\"more\"></a><br>Eclipse<br>最初是由IBM公司开发的替代商业软件Visual Age for<br>Java的下一代IDE开发环境，2001年11月贡献给开源社区，现在它由非营利软件供应商联盟Eclipse基金会（Eclipse<br>Foundation）管理。 2003年，Eclipse 3.0选择OSGi服务平台规范为运行时架构。<br>2007年6月，稳定版3.3发布。2008年6月发布代号为Ganymede的3.4版。</p>\n<p><img src=\"/upload/2015/06/201506121434101916134723.png\" alt=\"\" title=\"201506121434101916134723.png\"></p>\n<p><span style=\"color: rgb(255, 0, 0);\">此版本已经配置好sdk和adt，解压后可直接使用</span></p>\n<p>更多eclipse介绍请访问<a href=\"http://www.eclipse.org/downloads/packages/eclipse-standard-432/keplersr2\" target=\"_blank\" rel=\"external\">：官方网址</a></p>\n<p>java环境下载：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"external\">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>\n<p>集成套件下载：<a href=\"http://pan.baidu.com/s/1yL9ro\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1yL9ro</a></p>\n","excerpt":"<p><strong>Eclipse</strong>是著名的跨平台的自由集成开发环境（IDE）。最初主要用来Java语言开发，但是目前亦有人通过插件使其作为其他计算机语言比如C++和Python的开发工具。</p>\n<p><img src=\"/upload/2015/06/201506121434101916133811.png\" alt=\"\" title=\"201506121434101916133811.png\"></p>\n<p>Eclipse的本身只是一个框架平台，但是众多插件的支持使得Eclipse拥有其他功能相对固定的IDE软件很难具有的灵活性。许多软件开发商以Eclipse为框架开发自己的IDE。<br>","more":"<br>Eclipse<br>最初是由IBM公司开发的替代商业软件Visual Age for<br>Java的下一代IDE开发环境，2001年11月贡献给开源社区，现在它由非营利软件供应商联盟Eclipse基金会（Eclipse<br>Foundation）管理。 2003年，Eclipse 3.0选择OSGi服务平台规范为运行时架构。<br>2007年6月，稳定版3.3发布。2008年6月发布代号为Ganymede的3.4版。</p>\n<p><img src=\"/upload/2015/06/201506121434101916134723.png\" alt=\"\" title=\"201506121434101916134723.png\"></p>\n<p><span style=\"color: rgb(255, 0, 0);\">此版本已经配置好sdk和adt，解压后可直接使用</span></p>\n<p>更多eclipse介绍请访问<a href=\"http://www.eclipse.org/downloads/packages/eclipse-standard-432/keplersr2\">：官方网址</a></p>\n<p>java环境下载：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>\n<p>集成套件下载：<a href=\"http://pan.baidu.com/s/1yL9ro\">http://pan.baidu.com/s/1yL9ro</a></p>"},{"title":"android开发中几种隐藏标题栏的方法","date":"2015-06-21T11:07:37.000Z","_content":"<!-- more -->\n<div class=\"content-list-text\">\n\n<span style=\"font-size: 24px;\"></span>\n\n<span style=\"font-size: 24px;\">1\\. <span style=\"font-size: 24px; color: rgb(255, 0, 0);\"><span style=\"font-size: 24px;\">推荐</span>！</span><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">（因为现在工程都默认的为AppTheme）</span>\n</span>\n\n在value/styles.xml里面添加自定义属性\n<pre class=\"brush:xml;toolbar:false\">&lt;resources xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;\n    &lt;!-- Application theme. --&gt;\n    &lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;\n       &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;\n&lt;/resources&gt;</pre></div><div class=\"content-list-media\"><div class=\"content-list-image clearfix\">\n\n<span class=\"exp-album-enter-mask\"></span>\n\n<span style=\"font-size: 24px;\">2.</span>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity{\n    @Override\n    protected void onCreate(Bundle savedInstanceState){\n        super.onCreate(savedInstanceState);\n        // 隐藏标题栏\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\n        // 隐藏状态栏\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n        WindowManager.LayoutParams.FLAG_FULLSCREEN);\n       //一定要放在setContentView()之前！\n        setContentView(R.layout.activity_main);\n    }\n}</pre>\n\n<span style=\"font-size: 24px;\">3.</span>\n\n<pre class=\"brush:xml;toolbar:false\">&lt;!-- Application theme. --&gt;\n&lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;\n    &lt;!-- All customizations that are NOT specific to a particular API-level can go here. --&gt;\n    &lt;!-- 隐藏状态栏 --&gt;\n    &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;\n    &lt;!-- 隐藏标题栏 --&gt;\n    &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;\n&lt;/style&gt;</pre>\n\n<span class=\"exp-album-enter-mask\"></span><span style=\"font-size: 24px;\">4.</span>\n\n</div></div><pre class=\"brush:xml;toolbar:false\">&lt;!-- 同时隐藏状态栏和标题栏  --&gt;\n&lt;activity\n    android:name=&quot;com.ysj.demo.MainActivity&quot;\n    android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;\n    android:label=&quot;@string/app_name&quot; &gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;\n        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;\n    &lt;/intent-filter&gt;\n&lt;/activity&gt;</pre>\n\n<span style=\"font-size: 24px;\">5.</span>打开项目文件AndroidManifest.xml ，打开Application选择TAB页，在页面下方的Application Nodes中点选择相应的类,   配置右侧的Theme属性。\n<div class=\"content-list-media\"><div class=\"content-list-image clearfix\">![d058ccbf6c81800ab49240c9b33533fa838b4786.jpg](/upload/2015/06/201506211434885529850695.jpg \"201506211434885529850695.jpg\")<span class=\"exp-album-enter-mask\"></span></div></div><div class=\"content-list-text\">\n\n在弹出选择框中点选&quot;system Resources&quot;，选择Theme.NoTitleBar项目，然后重新打开页面就行了。\n</div>\n\n![5366d0160924ab18767128f037fae6cd7a890b96.jpg](/upload/2015/06/201506211434885550436342.jpg \"201506211434885550436342.jpg\")","source":"_posts/android开发中几种隐藏标题栏的方法.md","raw":"---\ntitle: android开发中几种隐藏标题栏的方法\ncategories:\n- 文章\ndate: 2015-06-21 19:07:37\n---\n<!-- more -->\n<div class=\"content-list-text\">\n\n<span style=\"font-size: 24px;\"></span>\n\n<span style=\"font-size: 24px;\">1\\. <span style=\"font-size: 24px; color: rgb(255, 0, 0);\"><span style=\"font-size: 24px;\">推荐</span>！</span><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">（因为现在工程都默认的为AppTheme）</span>\n</span>\n\n在value/styles.xml里面添加自定义属性\n<pre class=\"brush:xml;toolbar:false\">&lt;resources xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;\n    &lt;!-- Application theme. --&gt;\n    &lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;\n       &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;\n&lt;/resources&gt;</pre></div><div class=\"content-list-media\"><div class=\"content-list-image clearfix\">\n\n<span class=\"exp-album-enter-mask\"></span>\n\n<span style=\"font-size: 24px;\">2.</span>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity{\n    @Override\n    protected void onCreate(Bundle savedInstanceState){\n        super.onCreate(savedInstanceState);\n        // 隐藏标题栏\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\n        // 隐藏状态栏\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n        WindowManager.LayoutParams.FLAG_FULLSCREEN);\n       //一定要放在setContentView()之前！\n        setContentView(R.layout.activity_main);\n    }\n}</pre>\n\n<span style=\"font-size: 24px;\">3.</span>\n\n<pre class=\"brush:xml;toolbar:false\">&lt;!-- Application theme. --&gt;\n&lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;\n    &lt;!-- All customizations that are NOT specific to a particular API-level can go here. --&gt;\n    &lt;!-- 隐藏状态栏 --&gt;\n    &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;\n    &lt;!-- 隐藏标题栏 --&gt;\n    &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;\n&lt;/style&gt;</pre>\n\n<span class=\"exp-album-enter-mask\"></span><span style=\"font-size: 24px;\">4.</span>\n\n</div></div><pre class=\"brush:xml;toolbar:false\">&lt;!-- 同时隐藏状态栏和标题栏  --&gt;\n&lt;activity\n    android:name=&quot;com.ysj.demo.MainActivity&quot;\n    android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;\n    android:label=&quot;@string/app_name&quot; &gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;\n        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;\n    &lt;/intent-filter&gt;\n&lt;/activity&gt;</pre>\n\n<span style=\"font-size: 24px;\">5.</span>打开项目文件AndroidManifest.xml ，打开Application选择TAB页，在页面下方的Application Nodes中点选择相应的类,   配置右侧的Theme属性。\n<div class=\"content-list-media\"><div class=\"content-list-image clearfix\">![d058ccbf6c81800ab49240c9b33533fa838b4786.jpg](/upload/2015/06/201506211434885529850695.jpg \"201506211434885529850695.jpg\")<span class=\"exp-album-enter-mask\"></span></div></div><div class=\"content-list-text\">\n\n在弹出选择框中点选&quot;system Resources&quot;，选择Theme.NoTitleBar项目，然后重新打开页面就行了。\n</div>\n\n![5366d0160924ab18767128f037fae6cd7a890b96.jpg](/upload/2015/06/201506211434885550436342.jpg \"201506211434885550436342.jpg\")","slug":"android开发中几种隐藏标题栏的方法","published":1,"updated":"2016-03-18T04:02:42.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymg001nc4ub3o96v17u","content":"<a id=\"more\"></a>\n<div class=\"content-list-text\"><br><br><span style=\"font-size: 24px;\"></span><br><br><span style=\"font-size: 24px;\">1. <span style=\"font-size: 24px; color: rgb(255, 0, 0);\"><span style=\"font-size: 24px;\">推荐</span>！</span><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">（因为现在工程都默认的为AppTheme）</span><br></span><br><br>在value/styles.xml里面添加自定义属性<br><pre class=\"brush:xml;toolbar:false\">&lt;resources xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&quot;&amp;gt\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&quot;&amp;gt</a>;<br>    &lt;!– Application theme. –&gt;<br>    &lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;<br>       &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;<br>&lt;/resources&gt;</pre></div><div class=\"content-list-media\"><div class=\"content-list-image clearfix\"><br><br><span class=\"exp-album-enter-mask\"></span><br><br><span style=\"font-size: 24px;\">2.</span><br><pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity{<br>    @Override<br>    protected void onCreate(Bundle savedInstanceState){<br>        super.onCreate(savedInstanceState);<br>        // 隐藏标题栏<br>        requestWindowFeature(Window.FEATURE_NO_TITLE);<br>        // 隐藏状态栏<br>        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,<br>        WindowManager.LayoutParams.FLAG_FULLSCREEN);<br>       //一定要放在setContentView()之前！<br>        setContentView(R.layout.activity_main);<br>    }<br>}</pre><br><br><span style=\"font-size: 24px;\">3.</span><br><br><pre class=\"brush:xml;toolbar:false\">&lt;!– Application theme. –&gt;<br>&lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;<br>    &lt;!– All customizations that are NOT specific to a particular API-level can go here. –&gt;<br>    &lt;!– 隐藏状态栏 –&gt;<br>    &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;<br>    &lt;!– 隐藏标题栏 –&gt;<br>    &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;<br>&lt;/style&gt;</pre><br><br><span class=\"exp-album-enter-mask\"></span><span style=\"font-size: 24px;\">4.</span><br><br></div></div><pre class=\"brush:xml;toolbar:false\">&lt;!– 同时隐藏状态栏和标题栏  –&gt;<br>&lt;activity<br>    android:name=&quot;com.ysj.demo.MainActivity&quot;<br>    android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;<br>    android:label=&quot;@string/app_name&quot; &gt;<br>    &lt;intent-filter&gt;<br>        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;<br>        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;<br>    &lt;/intent-filter&gt;<br>&lt;/activity&gt;</pre><br><br><span style=\"font-size: 24px;\">5.</span>打开项目文件AndroidManifest.xml ，打开Application选择TAB页，在页面下方的Application Nodes中点选择相应的类,   配置右侧的Theme属性。<br><div class=\"content-list-media\"><div class=\"content-list-image clearfix\"><img src=\"/upload/2015/06/201506211434885529850695.jpg\" alt=\"d058ccbf6c81800ab49240c9b33533fa838b4786.jpg\" title=\"201506211434885529850695.jpg\"><span class=\"exp-album-enter-mask\"></span></div></div><div class=\"content-list-text\"><br><br>在弹出选择框中点选&quot;system Resources&quot;，选择Theme.NoTitleBar项目，然后重新打开页面就行了。<br></div>\n\n<p><img src=\"/upload/2015/06/201506211434885550436342.jpg\" alt=\"5366d0160924ab18767128f037fae6cd7a890b96.jpg\" title=\"201506211434885550436342.jpg\"></p>\n","excerpt":"","more":"<div class=\"content-list-text\"><br><br><span style=\"font-size: 24px;\"></span><br><br><span style=\"font-size: 24px;\">1. <span style=\"font-size: 24px; color: rgb(255, 0, 0);\"><span style=\"font-size: 24px;\">推荐</span>！</span><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">（因为现在工程都默认的为AppTheme）</span><br></span><br><br>在value/styles.xml里面添加自定义属性<br><pre class=\"brush:xml;toolbar:false\">&lt;resources xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&quot;&amp;gt\">http://schemas.android.com/apk/res/android&quot;&amp;gt</a>;<br>    &lt;!– Application theme. –&gt;<br>    &lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;<br>       &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;<br>&lt;/resources&gt;</pre></div><div class=\"content-list-media\"><div class=\"content-list-image clearfix\"><br><br><span class=\"exp-album-enter-mask\"></span><br><br><span style=\"font-size: 24px;\">2.</span><br><pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity{<br>    @Override<br>    protected void onCreate(Bundle savedInstanceState){<br>        super.onCreate(savedInstanceState);<br>        // 隐藏标题栏<br>        requestWindowFeature(Window.FEATURE_NO_TITLE);<br>        // 隐藏状态栏<br>        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,<br>        WindowManager.LayoutParams.FLAG_FULLSCREEN);<br>       //一定要放在setContentView()之前！<br>        setContentView(R.layout.activity_main);<br>    }<br>}</pre><br><br><span style=\"font-size: 24px;\">3.</span><br><br><pre class=\"brush:xml;toolbar:false\">&lt;!– Application theme. –&gt;<br>&lt;style name=&quot;AppTheme&quot; parent=&quot;AppBaseTheme&quot;&gt;<br>    &lt;!– All customizations that are NOT specific to a particular API-level can go here. –&gt;<br>    &lt;!– 隐藏状态栏 –&gt;<br>    &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;<br>    &lt;!– 隐藏标题栏 –&gt;<br>    &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;<br>&lt;/style&gt;</pre><br><br><span class=\"exp-album-enter-mask\"></span><span style=\"font-size: 24px;\">4.</span><br><br></div></div><pre class=\"brush:xml;toolbar:false\">&lt;!– 同时隐藏状态栏和标题栏  –&gt;<br>&lt;activity<br>    android:name=&quot;com.ysj.demo.MainActivity&quot;<br>    android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;<br>    android:label=&quot;@string/app_name&quot; &gt;<br>    &lt;intent-filter&gt;<br>        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;<br>        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;<br>    &lt;/intent-filter&gt;<br>&lt;/activity&gt;</pre><br><br><span style=\"font-size: 24px;\">5.</span>打开项目文件AndroidManifest.xml ，打开Application选择TAB页，在页面下方的Application Nodes中点选择相应的类,   配置右侧的Theme属性。<br><div class=\"content-list-media\"><div class=\"content-list-image clearfix\"><img src=\"/upload/2015/06/201506211434885529850695.jpg\" alt=\"d058ccbf6c81800ab49240c9b33533fa838b4786.jpg\" title=\"201506211434885529850695.jpg\"><span class=\"exp-album-enter-mask\"></span></div></div><div class=\"content-list-text\"><br><br>在弹出选择框中点选&quot;system Resources&quot;，选择Theme.NoTitleBar项目，然后重新打开页面就行了。<br></div>\n\n<p><img src=\"/upload/2015/06/201506211434885550436342.jpg\" alt=\"5366d0160924ab18767128f037fae6cd7a890b96.jpg\" title=\"201506211434885550436342.jpg\"></p>"},{"title":"android退出所有的activity","date":"2015-06-22T13:35:41.000Z","_content":"<!-- more -->\n<span style=\"font-size: 20px;\"><span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);\">Android经典完美退出方法，使用单例模式创建一个Activity管理对象，该对象中有一个Activity容器（具体实现自己处理，使用LinkedList等）专门负责存储新开启的每一个Activity，并且容易理解、易于操作，非常不错！</span>\n <span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255); font-size: 14px;\">AppUtils类（储存每一个Activity，并实现关闭所有Activity的操作）</span></span>\n\n<pre class=\"brush:java;toolbar:false\">package com.cpic.jscx.android.utils; \n import android.app.Activity; \n import android.app.Application; \n import java.util.LinkedList; \n import java.util.List; \n public class AppUtils extends Application{ \n     private List&lt;Activity&gt; activityList = new LinkedList&lt;Activity&gt;(); \n     private static AppUtils instance; \n             private AppUtils() \n             { \n             } \n              //单例模式中获取唯一的app实例 \n              public static AppUtils getInstance() \n              { \n                             if(null == instance) \n                           { \n                              instance = new AppUtils(); \n                           } \n                  return instance;             \n              } \n              //添加Activity到容器中 \n              public void addActivity(Activity activity) \n              { \n                             activityList.add(activity); \n              } \n              //遍历所有Activity并finish \n              public void exit() \n              { \n                           for(Activity activity:activityList) \n                          { \n                            activity.finish(); \n                          } \n                            System.exit(0); \n             } \n }</pre>\n\nactivity实现：\n\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    private  AppUtils appUtils;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        appUtils=AppUtils.getInstance();\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public void onDestroy() {\n        appUtils.exit();\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>","source":"_posts/android退出所有的activity.md","raw":"---\ntitle: android退出所有的activity\ncategories:\n- 文章\ndate: 2015-06-22 21:35:41\n---\n<!-- more -->\n<span style=\"font-size: 20px;\"><span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);\">Android经典完美退出方法，使用单例模式创建一个Activity管理对象，该对象中有一个Activity容器（具体实现自己处理，使用LinkedList等）专门负责存储新开启的每一个Activity，并且容易理解、易于操作，非常不错！</span>\n <span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255); font-size: 14px;\">AppUtils类（储存每一个Activity，并实现关闭所有Activity的操作）</span></span>\n\n<pre class=\"brush:java;toolbar:false\">package com.cpic.jscx.android.utils; \n import android.app.Activity; \n import android.app.Application; \n import java.util.LinkedList; \n import java.util.List; \n public class AppUtils extends Application{ \n     private List&lt;Activity&gt; activityList = new LinkedList&lt;Activity&gt;(); \n     private static AppUtils instance; \n             private AppUtils() \n             { \n             } \n              //单例模式中获取唯一的app实例 \n              public static AppUtils getInstance() \n              { \n                             if(null == instance) \n                           { \n                              instance = new AppUtils(); \n                           } \n                  return instance;             \n              } \n              //添加Activity到容器中 \n              public void addActivity(Activity activity) \n              { \n                             activityList.add(activity); \n              } \n              //遍历所有Activity并finish \n              public void exit() \n              { \n                           for(Activity activity:activityList) \n                          { \n                            activity.finish(); \n                          } \n                            System.exit(0); \n             } \n }</pre>\n\nactivity实现：\n\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    private  AppUtils appUtils;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        appUtils=AppUtils.getInstance();\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public void onDestroy() {\n        appUtils.exit();\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>","slug":"android退出所有的activity","published":1,"updated":"2016-03-18T04:03:13.285Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymi001qc4ubppmpfnkv","content":"<a id=\"more\"></a>\n<p><span style=\"font-size: 20px;\"><span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);\">Android经典完美退出方法，使用单例模式创建一个Activity管理对象，该对象中有一个Activity容器（具体实现自己处理，使用LinkedList等）专门负责存储新开启的每一个Activity，并且容易理解、易于操作，非常不错！</span><br> <span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255); font-size: 14px;\">AppUtils类（储存每一个Activity，并实现关闭所有Activity的操作）</span></span></p>\n<pre class=\"brush:java;toolbar:false\">package com.cpic.jscx.android.utils; \n import android.app.Activity; \n import android.app.Application; \n import java.util.LinkedList; \n import java.util.List; \n public class AppUtils extends Application{ \n     private List&lt;Activity&gt; activityList = new LinkedList&lt;Activity&gt;(); \n     private static AppUtils instance; \n             private AppUtils() \n             { \n             } \n              //单例模式中获取唯一的app实例 \n              public static AppUtils getInstance() \n              { \n                             if(null == instance) \n                           { \n                              instance = new AppUtils(); \n                           } \n                  return instance;             \n              } \n              //添加Activity到容器中 \n              public void addActivity(Activity activity) \n              { \n                             activityList.add(activity); \n              } \n              //遍历所有Activity并finish \n              public void exit() \n              { \n                           for(Activity activity:activityList) \n                          { \n                            activity.finish(); \n                          } \n                            System.exit(0); \n             } \n }</pre>\n\n<p>activity实现：</p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    private  AppUtils appUtils;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        appUtils=AppUtils.getInstance();\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public void onDestroy() {\n        appUtils.exit();\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>","excerpt":"","more":"<p><span style=\"font-size: 20px;\"><span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);\">Android经典完美退出方法，使用单例模式创建一个Activity管理对象，该对象中有一个Activity容器（具体实现自己处理，使用LinkedList等）专门负责存储新开启的每一个Activity，并且容易理解、易于操作，非常不错！</span><br> <span style=\"color: rgb(68, 68, 68); background-color: rgb(255, 255, 255); font-size: 14px;\">AppUtils类（储存每一个Activity，并实现关闭所有Activity的操作）</span></span></p>\n<pre class=\"brush:java;toolbar:false\">package com.cpic.jscx.android.utils; \n import android.app.Activity; \n import android.app.Application; \n import java.util.LinkedList; \n import java.util.List; \n public class AppUtils extends Application{ \n     private List&lt;Activity&gt; activityList = new LinkedList&lt;Activity&gt;(); \n     private static AppUtils instance; \n             private AppUtils() \n             { \n             } \n              //单例模式中获取唯一的app实例 \n              public static AppUtils getInstance() \n              { \n                             if(null == instance) \n                           { \n                              instance = new AppUtils(); \n                           } \n                  return instance;             \n              } \n              //添加Activity到容器中 \n              public void addActivity(Activity activity) \n              { \n                             activityList.add(activity); \n              } \n              //遍历所有Activity并finish \n              public void exit() \n              { \n                           for(Activity activity:activityList) \n                          { \n                            activity.finish(); \n                          } \n                            System.exit(0); \n             } \n }</pre>\n\n<p>activity实现：</p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    private  AppUtils appUtils;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        appUtils=AppUtils.getInstance();\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public void onDestroy() {\n        appUtils.exit();\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>"},{"title":"jni 通过c/c++返回HashMap等复杂参数给java","date":"2015-07-02T08:15:11.000Z","_content":"\n  返回其他对象与这个相似，可以自己研究下\n\n思路：\n\n    1.创建HashMap对象：\n<pre class=\"brush:cpp;toolbar:false\">    /*C语言版本，下同*/\n    //获取java的HashMap类\n   jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n   \n   //获取类似于java 的new HashMap();\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    //初始化。类似于hashMap=new HashMap();\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    //获取hashMap.put()的ID\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);</pre>\n\n   2\\. 赋值：\n<pre class=\"brush:cpp;toolbar:false;\">    //类似于map.put(&quot;key&quot;,&quot;value&quot;);\n    //(*env)-&gt;NewStringUTF(env, &quot;key值&quot;)不能直接用&quot;key值&quot;替代\n  (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key值&quot;), (*env)-&gt;NewStringUTF(env, &quot;value值&quot;));</pre>\n<!-- more -->\n全部代码：\n\n    JniClient.java\n<pre class=\"brush:java;toolbar:false\">package com.ndk.test;\nimport java.util.HashMap;\npublic class JniClient {\n    public static native HashMap&lt;String, String&gt; setMap();\n}</pre>\n\nJniClient.h\n<pre class=\"brush:cpp;toolbar:false\">/* DO NOT EDIT THIS FILE - it is machine generated */\n#include &lt;jni.h&gt;\n/* Header for class com_ndk_test_JniClient */\n#ifndef _Included_com_ndk_test_JniClient\n#define _Included_com_ndk_test_JniClient\n#ifdef __cplusplus\nextern &quot;C&quot; {\n#endif\n/*\n * Class:     com_ndk_test_JniClient\n * Method:    setMap\n * Signature: ()Ljava/util/HashMap;\n */\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap\n  (JNIEnv *, jclass);\n#ifdef __cplusplus\n}\n#endif\n#endif</pre>\n\nJniClient.c\n<pre class=\"brush:cpp;toolbar:false\">#include &quot;com_ndk_test_JniClient.h&quot;\n#include&lt;stdio.h&gt;\n#ifdef __cplusplus\nextern &quot;C&quot;\n{\n#endif\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap(JNIEnv *env,\n        jclass cls) {\n    jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key1&quot;), (*env)-&gt;NewStringUTF(env, &quot;value1&quot;));\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put,(*env)-&gt;NewStringUTF(env, &quot;key2&quot;), (*env)-&gt;NewStringUTF(env, &quot;value2&quot;));\n    return HashMap;\n}\n#ifdef __cplusplus\n}\n#endif</pre>\n\n引用方法：\n\n<pre class=\"brush:java;toolbar:false\">Object object=JniClient.setMap();\nHashMap&lt;String, String&gt;map=(HashMap&lt;String, String&gt;)object;\nSystem.out.println(&quot;size:&quot;+map.size()+&quot;;value:&quot;+map.get(&quot;key1&quot;));</pre>\n\n打印信息：\n\nsize:2;value:value1","source":"_posts/jni-通过c-c-返回HashMap等复杂参数给java.md","raw":"---\ntitle: jni 通过c/c++返回HashMap等复杂参数给java\ncategories:\n- 文章\ntags: \n- jni\ndate: 2015-07-02 16:15:11\n---\n\n  返回其他对象与这个相似，可以自己研究下\n\n思路：\n\n    1.创建HashMap对象：\n<pre class=\"brush:cpp;toolbar:false\">    /*C语言版本，下同*/\n    //获取java的HashMap类\n   jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n   \n   //获取类似于java 的new HashMap();\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    //初始化。类似于hashMap=new HashMap();\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    //获取hashMap.put()的ID\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);</pre>\n\n   2\\. 赋值：\n<pre class=\"brush:cpp;toolbar:false;\">    //类似于map.put(&quot;key&quot;,&quot;value&quot;);\n    //(*env)-&gt;NewStringUTF(env, &quot;key值&quot;)不能直接用&quot;key值&quot;替代\n  (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key值&quot;), (*env)-&gt;NewStringUTF(env, &quot;value值&quot;));</pre>\n<!-- more -->\n全部代码：\n\n    JniClient.java\n<pre class=\"brush:java;toolbar:false\">package com.ndk.test;\nimport java.util.HashMap;\npublic class JniClient {\n    public static native HashMap&lt;String, String&gt; setMap();\n}</pre>\n\nJniClient.h\n<pre class=\"brush:cpp;toolbar:false\">/* DO NOT EDIT THIS FILE - it is machine generated */\n#include &lt;jni.h&gt;\n/* Header for class com_ndk_test_JniClient */\n#ifndef _Included_com_ndk_test_JniClient\n#define _Included_com_ndk_test_JniClient\n#ifdef __cplusplus\nextern &quot;C&quot; {\n#endif\n/*\n * Class:     com_ndk_test_JniClient\n * Method:    setMap\n * Signature: ()Ljava/util/HashMap;\n */\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap\n  (JNIEnv *, jclass);\n#ifdef __cplusplus\n}\n#endif\n#endif</pre>\n\nJniClient.c\n<pre class=\"brush:cpp;toolbar:false\">#include &quot;com_ndk_test_JniClient.h&quot;\n#include&lt;stdio.h&gt;\n#ifdef __cplusplus\nextern &quot;C&quot;\n{\n#endif\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap(JNIEnv *env,\n        jclass cls) {\n    jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key1&quot;), (*env)-&gt;NewStringUTF(env, &quot;value1&quot;));\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put,(*env)-&gt;NewStringUTF(env, &quot;key2&quot;), (*env)-&gt;NewStringUTF(env, &quot;value2&quot;));\n    return HashMap;\n}\n#ifdef __cplusplus\n}\n#endif</pre>\n\n引用方法：\n\n<pre class=\"brush:java;toolbar:false\">Object object=JniClient.setMap();\nHashMap&lt;String, String&gt;map=(HashMap&lt;String, String&gt;)object;\nSystem.out.println(&quot;size:&quot;+map.size()+&quot;;value:&quot;+map.get(&quot;key1&quot;));</pre>\n\n打印信息：\n\nsize:2;value:value1","slug":"jni-通过c-c-返回HashMap等复杂参数给java","published":1,"updated":"2016-03-18T04:04:49.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyml001tc4ubjr9paosr","content":"<p>  返回其他对象与这个相似，可以自己研究下</p>\n<p>思路：</p>\n<pre><code>1.创建HashMap对象：\n</code></pre><pre class=\"brush:cpp;toolbar:false\">    /*C语言版本，下同*/\n    //获取java的HashMap类\n   jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n\n   //获取类似于java 的new HashMap();\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    //初始化。类似于hashMap=new HashMap();\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    //获取hashMap.put()的ID\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);</pre>\n\n<p>   2. 赋值：</p>\n<pre class=\"brush:cpp;toolbar:false;\">    //类似于map.put(&quot;key&quot;,&quot;value&quot;);\n    //(*env)-&gt;NewStringUTF(env, &quot;key值&quot;)不能直接用&quot;key值&quot;替代\n  (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key值&quot;), (*env)-&gt;NewStringUTF(env, &quot;value值&quot;));</pre>\n<a id=\"more\"></a>\n全部代码：\n\n    JniClient.java\n<pre class=\"brush:java;toolbar:false\">package com.ndk.test;\nimport java.util.HashMap;\npublic class JniClient {\n    public static native HashMap&lt;String, String&gt; setMap();\n}</pre>\n\n<p>JniClient.h</p>\n<pre class=\"brush:cpp;toolbar:false\">/* DO NOT EDIT THIS FILE - it is machine generated */\n#include &lt;jni.h&gt;\n/* Header for class com_ndk_test_JniClient */\n#ifndef _Included_com_ndk_test_JniClient\n#define _Included_com_ndk_test_JniClient\n#ifdef __cplusplus\nextern &quot;C&quot; {\n#endif\n/*\n * Class:     com_ndk_test_JniClient\n * Method:    setMap\n * Signature: ()Ljava/util/HashMap;\n */\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap\n  (JNIEnv *, jclass);\n#ifdef __cplusplus\n}\n#endif\n#endif</pre>\n\n<p>JniClient.c</p>\n<pre class=\"brush:cpp;toolbar:false\">#include &quot;com_ndk_test_JniClient.h&quot;\n#include&lt;stdio.h&gt;\n#ifdef __cplusplus\nextern &quot;C&quot;\n{\n#endif\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap(JNIEnv *env,\n        jclass cls) {\n    jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key1&quot;), (*env)-&gt;NewStringUTF(env, &quot;value1&quot;));\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put,(*env)-&gt;NewStringUTF(env, &quot;key2&quot;), (*env)-&gt;NewStringUTF(env, &quot;value2&quot;));\n    return HashMap;\n}\n#ifdef __cplusplus\n}\n#endif</pre>\n\n<p>引用方法：</p>\n<pre class=\"brush:java;toolbar:false\">Object object=JniClient.setMap();\nHashMap&lt;String, String&gt;map=(HashMap&lt;String, String&gt;)object;\nSystem.out.println(&quot;size:&quot;+map.size()+&quot;;value:&quot;+map.get(&quot;key1&quot;));</pre>\n\n<p>打印信息：</p>\n<p>size:2;value:value1</p>\n","excerpt":"<p>  返回其他对象与这个相似，可以自己研究下</p>\n<p>思路：</p>\n<pre><code>1.创建HashMap对象：\n</code></pre><pre class=\"brush:cpp;toolbar:false\">    /*C语言版本，下同*/\n    //获取java的HashMap类\n   jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n\n   //获取类似于java 的new HashMap();\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    //初始化。类似于hashMap=new HashMap();\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    //获取hashMap.put()的ID\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);</pre>\n\n<p>   2. 赋值：</p>\n<pre class=\"brush:cpp;toolbar:false;\">    //类似于map.put(&quot;key&quot;,&quot;value&quot;);\n    //(*env)-&gt;NewStringUTF(env, &quot;key值&quot;)不能直接用&quot;key值&quot;替代\n  (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key值&quot;), (*env)-&gt;NewStringUTF(env, &quot;value值&quot;));</pre>","more":"全部代码：\n\n    JniClient.java\n<pre class=\"brush:java;toolbar:false\">package com.ndk.test;\nimport java.util.HashMap;\npublic class JniClient {\n    public static native HashMap&lt;String, String&gt; setMap();\n}</pre>\n\n<p>JniClient.h</p>\n<pre class=\"brush:cpp;toolbar:false\">/* DO NOT EDIT THIS FILE - it is machine generated */\n#include &lt;jni.h&gt;\n/* Header for class com_ndk_test_JniClient */\n#ifndef _Included_com_ndk_test_JniClient\n#define _Included_com_ndk_test_JniClient\n#ifdef __cplusplus\nextern &quot;C&quot; {\n#endif\n/*\n * Class:     com_ndk_test_JniClient\n * Method:    setMap\n * Signature: ()Ljava/util/HashMap;\n */\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap\n  (JNIEnv *, jclass);\n#ifdef __cplusplus\n}\n#endif\n#endif</pre>\n\n<p>JniClient.c</p>\n<pre class=\"brush:cpp;toolbar:false\">#include &quot;com_ndk_test_JniClient.h&quot;\n#include&lt;stdio.h&gt;\n#ifdef __cplusplus\nextern &quot;C&quot;\n{\n#endif\nJNIEXPORT jobject JNICALL Java_com_ndk_test_JniClient_setMap(JNIEnv *env,\n        jclass cls) {\n    jclass class_hashmap = (*env)-&gt;FindClass(env, &quot;java/util/HashMap&quot;);\n    jmethodID hashmap_init = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;&lt;init&gt;&quot;,\n            &quot;()V&quot;);\n    jobject HashMap = (*env)-&gt;NewObject(env, class_hashmap, hashmap_init, &quot;&quot;);\n    jmethodID HashMap_put = (*env)-&gt;GetMethodID(env, class_hashmap, &quot;put&quot;,\n            &quot;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&quot;);\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put, (*env)-&gt;NewStringUTF(env, &quot;key1&quot;), (*env)-&gt;NewStringUTF(env, &quot;value1&quot;));\n    (*env)-&gt;CallObjectMethod(env, HashMap, HashMap_put,(*env)-&gt;NewStringUTF(env, &quot;key2&quot;), (*env)-&gt;NewStringUTF(env, &quot;value2&quot;));\n    return HashMap;\n}\n#ifdef __cplusplus\n}\n#endif</pre>\n\n<p>引用方法：</p>\n<pre class=\"brush:java;toolbar:false\">Object object=JniClient.setMap();\nHashMap&lt;String, String&gt;map=(HashMap&lt;String, String&gt;)object;\nSystem.out.println(&quot;size:&quot;+map.size()+&quot;;value:&quot;+map.get(&quot;key1&quot;));</pre>\n\n<p>打印信息：</p>\n<p>size:2;value:value1</p>"},{"title":"java的接口解耦","date":"2015-10-22T06:30:49.000Z","_content":"\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">     学过java的人都知道，java是单继承的，也就是说一个class只能继承一个类。</span>\n<!-- more -->\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       例如我们想制作一台有播放器的手机，那么我们先得制作一个播放器吧，再把播放器放进手机里。在java会怎么实现呢？如果使用继承，我们会先创建一个播放器类，播放器类里面含有播放歌曲功能（方法），创建一个手机类继承播放器类，重写播放器的播歌功能（不重写的话，会直接使用播放器自己定制的播放功能），这样，我们就可以使用手机的播歌功能了。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       现在，我们想制作一台既有播歌功能，又有收音机功能的手机，那么我们该怎么办？难道我们又要让继承了播放器的手机再继承收音机？但是java是单继承的，行不通，这时，接口应运而生！</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">      接口，乍一看就是包含几个方法的一个东西，它里面不包含具体实现的代码，只包含方法的返回类型，名称，参数列表，它代表的是一个功能的集合，只要实现了这个接口的类，他就具有了这些功能。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       回到之前说的既有播歌又有收音机功能的手机，现在我们不把播放器和收音机封装成类了，我们把它们封装成接口（接口就是功能的集合），创建手机类，实现播放器和收音机接口，这样看起来，是不是有点像多继承？这违背了java的单继承原则吗？</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       其实没有，有些书里面提到的多重继承指的是多个实现接口。继承（extends），是一种 is-a 关系的，所谓is-a关系，就是类似于“手机是播放器”或者“手机是收音机”这样说法，但明显，我们不能说“手机既是播放器又是收音机”，那么“他究竟是播放器还是收音机？”，这时大家就会可能这样发问了，这就是java是单继承的原因。实现（implement），是一种hava-a关系的，所谓have-a就是具有“某一项功能“的意思，我们这时候会说“手机既有播放器功能，又有收音机功能”，这样的表达该明白了吧！让手机再添加其他功能，只要再让他实现那些功能接口就好了。</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        好像说了那么多还没说到正题~哈哈，其实举前面的例子我是想说明一个问题：只要一个方法操作的是类而非接口，那么你只能使用这个类及其之类。如果你想要将这个方法应用于不在此继承结构中的某个类，那么你就触霉头了。接口可以在很大程度上放宽这种限制，因此，他使我们可以编写可复用性更好的代码。——引用《thinking in java》的某一些话。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         </span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        举例子：我需要一个闹钟，放在我床边，每天叫我起床。但是我家里没闹钟，只有一台有闹钟功能的手机和一台有闹钟功能的洗衣机。我需要的只是闹钟功能，我管他是什么，只要他能让我起床就好了。如果某一天我连手机都丢了，我能把洗衣机放在我床边叫我起床吗？当然可以，因为洗衣机实现了闹钟功能。所以，我们经常会这么做：把“闹钟”这个功能（而不是具体的某一项事物，如手机或者洗衣机）放在床边，如果我们想听洗衣机的闹钟声就摆洗衣机，如果想听手机的闹钟声就摆手机。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         从上面的例子，我们传递的不是某个具体的对象，而是一个抽象的“闹钟功能”的概念，至于实际上传递的是什么参数，要看具体情况（取决于我想听哪一种闹钟声）。实际上，我们只关心“具有闹钟功能”这件事，我们不关心它是由谁实现的和怎样实现的，这就做到了“请求”和“实现”分离开来，这就是接口的解耦！</span>","source":"_posts/java的接口解耦.md","raw":"---\ntitle: java的接口解耦\ncategories:\n- 文章\ntags: \n- 解耦\ndate: 2015-10-22 14:30:49\n---\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">     学过java的人都知道，java是单继承的，也就是说一个class只能继承一个类。</span>\n<!-- more -->\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       例如我们想制作一台有播放器的手机，那么我们先得制作一个播放器吧，再把播放器放进手机里。在java会怎么实现呢？如果使用继承，我们会先创建一个播放器类，播放器类里面含有播放歌曲功能（方法），创建一个手机类继承播放器类，重写播放器的播歌功能（不重写的话，会直接使用播放器自己定制的播放功能），这样，我们就可以使用手机的播歌功能了。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       现在，我们想制作一台既有播歌功能，又有收音机功能的手机，那么我们该怎么办？难道我们又要让继承了播放器的手机再继承收音机？但是java是单继承的，行不通，这时，接口应运而生！</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">      接口，乍一看就是包含几个方法的一个东西，它里面不包含具体实现的代码，只包含方法的返回类型，名称，参数列表，它代表的是一个功能的集合，只要实现了这个接口的类，他就具有了这些功能。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       回到之前说的既有播歌又有收音机功能的手机，现在我们不把播放器和收音机封装成类了，我们把它们封装成接口（接口就是功能的集合），创建手机类，实现播放器和收音机接口，这样看起来，是不是有点像多继承？这违背了java的单继承原则吗？</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       其实没有，有些书里面提到的多重继承指的是多个实现接口。继承（extends），是一种 is-a 关系的，所谓is-a关系，就是类似于“手机是播放器”或者“手机是收音机”这样说法，但明显，我们不能说“手机既是播放器又是收音机”，那么“他究竟是播放器还是收音机？”，这时大家就会可能这样发问了，这就是java是单继承的原因。实现（implement），是一种hava-a关系的，所谓have-a就是具有“某一项功能“的意思，我们这时候会说“手机既有播放器功能，又有收音机功能”，这样的表达该明白了吧！让手机再添加其他功能，只要再让他实现那些功能接口就好了。</span>\n\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        好像说了那么多还没说到正题~哈哈，其实举前面的例子我是想说明一个问题：只要一个方法操作的是类而非接口，那么你只能使用这个类及其之类。如果你想要将这个方法应用于不在此继承结构中的某个类，那么你就触霉头了。接口可以在很大程度上放宽这种限制，因此，他使我们可以编写可复用性更好的代码。——引用《thinking in java》的某一些话。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         </span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        举例子：我需要一个闹钟，放在我床边，每天叫我起床。但是我家里没闹钟，只有一台有闹钟功能的手机和一台有闹钟功能的洗衣机。我需要的只是闹钟功能，我管他是什么，只要他能让我起床就好了。如果某一天我连手机都丢了，我能把洗衣机放在我床边叫我起床吗？当然可以，因为洗衣机实现了闹钟功能。所以，我们经常会这么做：把“闹钟”这个功能（而不是具体的某一项事物，如手机或者洗衣机）放在床边，如果我们想听洗衣机的闹钟声就摆洗衣机，如果想听手机的闹钟声就摆手机。</span>\n<span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         从上面的例子，我们传递的不是某个具体的对象，而是一个抽象的“闹钟功能”的概念，至于实际上传递的是什么参数，要看具体情况（取决于我想听哪一种闹钟声）。实际上，我们只关心“具有闹钟功能”这件事，我们不关心它是由谁实现的和怎样实现的，这就做到了“请求”和“实现”分离开来，这就是接口的解耦！</span>","slug":"java的接口解耦","published":1,"updated":"2016-03-18T04:04:52.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymn001wc4ubeuwbj5a9","content":"<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">     学过java的人都知道，java是单继承的，也就是说一个class只能继承一个类。</span><br><a id=\"more\"></a><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       例如我们想制作一台有播放器的手机，那么我们先得制作一个播放器吧，再把播放器放进手机里。在java会怎么实现呢？如果使用继承，我们会先创建一个播放器类，播放器类里面含有播放歌曲功能（方法），创建一个手机类继承播放器类，重写播放器的播歌功能（不重写的话，会直接使用播放器自己定制的播放功能），这样，我们就可以使用手机的播歌功能了。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       现在，我们想制作一台既有播歌功能，又有收音机功能的手机，那么我们该怎么办？难道我们又要让继承了播放器的手机再继承收音机？但是java是单继承的，行不通，这时，接口应运而生！</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">      接口，乍一看就是包含几个方法的一个东西，它里面不包含具体实现的代码，只包含方法的返回类型，名称，参数列表，它代表的是一个功能的集合，只要实现了这个接口的类，他就具有了这些功能。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       回到之前说的既有播歌又有收音机功能的手机，现在我们不把播放器和收音机封装成类了，我们把它们封装成接口（接口就是功能的集合），创建手机类，实现播放器和收音机接口，这样看起来，是不是有点像多继承？这违背了java的单继承原则吗？</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       其实没有，有些书里面提到的多重继承指的是多个实现接口。继承（extends），是一种 is-a 关系的，所谓is-a关系，就是类似于“手机是播放器”或者“手机是收音机”这样说法，但明显，我们不能说“手机既是播放器又是收音机”，那么“他究竟是播放器还是收音机？”，这时大家就会可能这样发问了，这就是java是单继承的原因。实现（implement），是一种hava-a关系的，所谓have-a就是具有“某一项功能“的意思，我们这时候会说“手机既有播放器功能，又有收音机功能”，这样的表达该明白了吧！让手机再添加其他功能，只要再让他实现那些功能接口就好了。</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        好像说了那么多还没说到正题~哈哈，其实举前面的例子我是想说明一个问题：只要一个方法操作的是类而非接口，那么你只能使用这个类及其之类。如果你想要将这个方法应用于不在此继承结构中的某个类，那么你就触霉头了。接口可以在很大程度上放宽这种限制，因此，他使我们可以编写可复用性更好的代码。——引用《thinking in java》的某一些话。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         </span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        举例子：我需要一个闹钟，放在我床边，每天叫我起床。但是我家里没闹钟，只有一台有闹钟功能的手机和一台有闹钟功能的洗衣机。我需要的只是闹钟功能，我管他是什么，只要他能让我起床就好了。如果某一天我连手机都丢了，我能把洗衣机放在我床边叫我起床吗？当然可以，因为洗衣机实现了闹钟功能。所以，我们经常会这么做：把“闹钟”这个功能（而不是具体的某一项事物，如手机或者洗衣机）放在床边，如果我们想听洗衣机的闹钟声就摆洗衣机，如果想听手机的闹钟声就摆手机。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         从上面的例子，我们传递的不是某个具体的对象，而是一个抽象的“闹钟功能”的概念，至于实际上传递的是什么参数，要看具体情况（取决于我想听哪一种闹钟声）。实际上，我们只关心“具有闹钟功能”这件事，我们不关心它是由谁实现的和怎样实现的，这就做到了“请求”和“实现”分离开来，这就是接口的解耦！</span></p>\n","excerpt":"<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">     学过java的人都知道，java是单继承的，也就是说一个class只能继承一个类。</span><br>","more":"<br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       例如我们想制作一台有播放器的手机，那么我们先得制作一个播放器吧，再把播放器放进手机里。在java会怎么实现呢？如果使用继承，我们会先创建一个播放器类，播放器类里面含有播放歌曲功能（方法），创建一个手机类继承播放器类，重写播放器的播歌功能（不重写的话，会直接使用播放器自己定制的播放功能），这样，我们就可以使用手机的播歌功能了。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       现在，我们想制作一台既有播歌功能，又有收音机功能的手机，那么我们该怎么办？难道我们又要让继承了播放器的手机再继承收音机？但是java是单继承的，行不通，这时，接口应运而生！</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">      接口，乍一看就是包含几个方法的一个东西，它里面不包含具体实现的代码，只包含方法的返回类型，名称，参数列表，它代表的是一个功能的集合，只要实现了这个接口的类，他就具有了这些功能。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       回到之前说的既有播歌又有收音机功能的手机，现在我们不把播放器和收音机封装成类了，我们把它们封装成接口（接口就是功能的集合），创建手机类，实现播放器和收音机接口，这样看起来，是不是有点像多继承？这违背了java的单继承原则吗？</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">       其实没有，有些书里面提到的多重继承指的是多个实现接口。继承（extends），是一种 is-a 关系的，所谓is-a关系，就是类似于“手机是播放器”或者“手机是收音机”这样说法，但明显，我们不能说“手机既是播放器又是收音机”，那么“他究竟是播放器还是收音机？”，这时大家就会可能这样发问了，这就是java是单继承的原因。实现（implement），是一种hava-a关系的，所谓have-a就是具有“某一项功能“的意思，我们这时候会说“手机既有播放器功能，又有收音机功能”，这样的表达该明白了吧！让手机再添加其他功能，只要再让他实现那些功能接口就好了。</span></p>\n<p><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        好像说了那么多还没说到正题~哈哈，其实举前面的例子我是想说明一个问题：只要一个方法操作的是类而非接口，那么你只能使用这个类及其之类。如果你想要将这个方法应用于不在此继承结构中的某个类，那么你就触霉头了。接口可以在很大程度上放宽这种限制，因此，他使我们可以编写可复用性更好的代码。——引用《thinking in java》的某一些话。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         </span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">        举例子：我需要一个闹钟，放在我床边，每天叫我起床。但是我家里没闹钟，只有一台有闹钟功能的手机和一台有闹钟功能的洗衣机。我需要的只是闹钟功能，我管他是什么，只要他能让我起床就好了。如果某一天我连手机都丢了，我能把洗衣机放在我床边叫我起床吗？当然可以，因为洗衣机实现了闹钟功能。所以，我们经常会这么做：把“闹钟”这个功能（而不是具体的某一项事物，如手机或者洗衣机）放在床边，如果我们想听洗衣机的闹钟声就摆洗衣机，如果想听手机的闹钟声就摆手机。</span><br><span style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 18px; line-height: 26px; background-color: rgb(255, 255, 255);\">         从上面的例子，我们传递的不是某个具体的对象，而是一个抽象的“闹钟功能”的概念，至于实际上传递的是什么参数，要看具体情况（取决于我想听哪一种闹钟声）。实际上，我们只关心“具有闹钟功能”这件事，我们不关心它是由谁实现的和怎样实现的，这就做到了“请求”和“实现”分离开来，这就是接口的解耦！</span></p>"},{"title":"两款Android菜单的开源ui框架","date":"2015-09-02T07:32:22.000Z","_content":"\n<span style=\"color:#555555\">1.Side-Menu.Android</span>\n\n![1423213091_2192.gif-thumb.jpg.gif](/upload/2015/09/201509021441179219153924.gif \"201509021441179219153924.gif\")\n<!-- more -->\n<span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\">[https://github.com/Yalantis/Side-Menu.Android](https://github.com/Yalantis/Side-Menu.Android)</span></span>\n\n下载地址：[http://pan.baidu.com/s/1o6xMOBo](http://pan.baidu.com/s/1o6xMOBo)\n\n<span style=\"color:#555555\">2.Context-Menu.Android</span>\n\n![1423213164_4792.gif.gif](/upload/2015/09/201509021441179396414955.gif \"201509021441179396414955.gif\")\n\n<span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><span style=\"font-size:16px\">[https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android](https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android)</span></span></span>\n\n下载地址：[http://pan.baidu.com/s/1jsiku](http://pan.baidu.com/s/1jsiku)","source":"_posts/两款Android菜单的开源ui框架.md","raw":"---\ntitle: 两款Android菜单的开源ui框架\ncategories:\n- 开源项目\ndate: 2015-09-02 15:32:22\n---\n\n<span style=\"color:#555555\">1.Side-Menu.Android</span>\n\n![1423213091_2192.gif-thumb.jpg.gif](/upload/2015/09/201509021441179219153924.gif \"201509021441179219153924.gif\")\n<!-- more -->\n<span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\">[https://github.com/Yalantis/Side-Menu.Android](https://github.com/Yalantis/Side-Menu.Android)</span></span>\n\n下载地址：[http://pan.baidu.com/s/1o6xMOBo](http://pan.baidu.com/s/1o6xMOBo)\n\n<span style=\"color:#555555\">2.Context-Menu.Android</span>\n\n![1423213164_4792.gif.gif](/upload/2015/09/201509021441179396414955.gif \"201509021441179396414955.gif\")\n\n<span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><span style=\"font-size:16px\">[https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android](https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android)</span></span></span>\n\n下载地址：[http://pan.baidu.com/s/1jsiku](http://pan.baidu.com/s/1jsiku)","slug":"两款Android菜单的开源ui框架","published":1,"updated":"2016-03-18T03:52:13.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymp001zc4ubgzfg2d5v","content":"<p><span style=\"color:#555555\">1.Side-Menu.Android</span></p>\n<p><img src=\"/upload/2015/09/201509021441179219153924.gif\" alt=\"1423213091_2192.gif-thumb.jpg.gif\" title=\"201509021441179219153924.gif\"><br><a id=\"more\"></a><br><span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><a href=\"https://github.com/Yalantis/Side-Menu.Android\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/Side-Menu.Android</a></span></span></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1o6xMOBo\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1o6xMOBo</a></p>\n<p><span style=\"color:#555555\">2.Context-Menu.Android</span></p>\n<p><img src=\"/upload/2015/09/201509021441179396414955.gif\" alt=\"1423213164_4792.gif.gif\" title=\"201509021441179396414955.gif\"></p>\n<p><span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><span style=\"font-size:16px\"><a href=\"https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android</a></span></span></span></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1jsiku\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1jsiku</a></p>\n","excerpt":"<p><span style=\"color:#555555\">1.Side-Menu.Android</span></p>\n<p><img src=\"/upload/2015/09/201509021441179219153924.gif\" alt=\"1423213091_2192.gif-thumb.jpg.gif\" title=\"201509021441179219153924.gif\"><br>","more":"<br><span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><a href=\"https://github.com/Yalantis/Side-Menu.Android\">https://github.com/Yalantis/Side-Menu.Android</a></span></span></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1o6xMOBo\">http://pan.baidu.com/s/1o6xMOBo</a></p>\n<p><span style=\"color:#555555\">2.Context-Menu.Android</span></p>\n<p><img src=\"/upload/2015/09/201509021441179396414955.gif\" alt=\"1423213164_4792.gif.gif\" title=\"201509021441179396414955.gif\"></p>\n<p><span style=\"color:#555555\">项目地址：<span style=\"color:rgb(65, 131, 196)\"><span style=\"font-size:16px\"><a href=\"https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android\">https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android</a></span></span></span></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1jsiku\">http://pan.baidu.com/s/1jsiku</a></p>"},{"title":"一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）","date":"2015-07-14T03:19:08.000Z","_content":"\n<span style=\"font-size:16px\"><span style=\"color:#ff0000\">首先将手机连接wifi，打开本程序，会自动创建服务，等待客户端连接~</span></span>\n<!-- more -->\n![](/upload/2015/07/201507141436844080960125.png \"201507141436844080960125.png\")\n\n![](/upload/2015/07/201507141436844080181981.png \"201507141436844080181981.png\")\n\n![](/upload/2015/07/201507141436844080465044.png \"201507141436844080465044.png\")\n\n![](/upload/2015/07/201507141436844080112252.png \"201507141436844080112252.png\")\n\n下载地址：[http://pan.baidu.com/s/1pJMdMNx](http://pan.baidu.com/s/1pJMdMNx)","source":"_posts/一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）.md","raw":"---\ntitle: 一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）\ncategories:\n- 项目\ntags: \n- WIFI通信\ndate: 2015-07-14 11:19:08\n---\n\n<span style=\"font-size:16px\"><span style=\"color:#ff0000\">首先将手机连接wifi，打开本程序，会自动创建服务，等待客户端连接~</span></span>\n<!-- more -->\n![](/upload/2015/07/201507141436844080960125.png \"201507141436844080960125.png\")\n\n![](/upload/2015/07/201507141436844080181981.png \"201507141436844080181981.png\")\n\n![](/upload/2015/07/201507141436844080465044.png \"201507141436844080465044.png\")\n\n![](/upload/2015/07/201507141436844080112252.png \"201507141436844080112252.png\")\n\n下载地址：[http://pan.baidu.com/s/1pJMdMNx](http://pan.baidu.com/s/1pJMdMNx)","slug":"一款WIFI下客户端和服务端互相通信的Demo（两端都是手机）","published":1,"updated":"2016-03-18T04:04:05.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymq0022c4uby90vxrub","content":"<p><span style=\"font-size:16px\"><span style=\"color:#ff0000\">首先将手机连接wifi，打开本程序，会自动创建服务，等待客户端连接~</span></span><br><a id=\"more\"></a><br><img src=\"/upload/2015/07/201507141436844080960125.png\" alt=\"\" title=\"201507141436844080960125.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080181981.png\" alt=\"\" title=\"201507141436844080181981.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080465044.png\" alt=\"\" title=\"201507141436844080465044.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080112252.png\" alt=\"\" title=\"201507141436844080112252.png\"></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1pJMdMNx\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1pJMdMNx</a></p>\n","excerpt":"<p><span style=\"font-size:16px\"><span style=\"color:#ff0000\">首先将手机连接wifi，打开本程序，会自动创建服务，等待客户端连接~</span></span><br>","more":"<br><img src=\"/upload/2015/07/201507141436844080960125.png\" alt=\"\" title=\"201507141436844080960125.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080181981.png\" alt=\"\" title=\"201507141436844080181981.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080465044.png\" alt=\"\" title=\"201507141436844080465044.png\"></p>\n<p><img src=\"/upload/2015/07/201507141436844080112252.png\" alt=\"\" title=\"201507141436844080112252.png\"></p>\n<p>下载地址：<a href=\"http://pan.baidu.com/s/1pJMdMNx\">http://pan.baidu.com/s/1pJMdMNx</a></p>"},{"title":"你最美android源码","date":"2015-06-16T17:15:39.000Z","_content":"\n![](/upload/2015/06/201506171434475688960684.png \"201506171434475688960684.png\")\n<!-- more -->\n![](/upload/2015/06/201506171434475712440731.png \"201506171434475712440731.png\")\n![](/upload/2015/06/201506171434475726111383.png \"201506171434475726111383.png\")![](/upload/2015/06/201506171434475727892479.png \"201506171434475727892479.png\")\n\n![](/upload/2015/06/201506171434475730629382.png \"201506171434475730629382.png\")![](/upload/2015/06/201506171434475732113440.png \"201506171434475732113440.png\")\n\n![](/upload/2015/06/201506171434475776133777.png \"201506171434475776133777.png\")\n\n<span style=\"font-size: 20px;\">下载地址：</span>[<span style=\"font-size: 20px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1o6tDGnC</span>](http://pan.baidu.com/s/1o6tDGnC)","source":"_posts/你最美android源码.md","raw":"---\ntitle: 你最美android源码\ncategories:\n- 项目\ntags: \n- 你最美\ndate: 2015-06-17 01:15:39\n---\n\n![](/upload/2015/06/201506171434475688960684.png \"201506171434475688960684.png\")\n<!-- more -->\n![](/upload/2015/06/201506171434475712440731.png \"201506171434475712440731.png\")\n![](/upload/2015/06/201506171434475726111383.png \"201506171434475726111383.png\")![](/upload/2015/06/201506171434475727892479.png \"201506171434475727892479.png\")\n\n![](/upload/2015/06/201506171434475730629382.png \"201506171434475730629382.png\")![](/upload/2015/06/201506171434475732113440.png \"201506171434475732113440.png\")\n\n![](/upload/2015/06/201506171434475776133777.png \"201506171434475776133777.png\")\n\n<span style=\"font-size: 20px;\">下载地址：</span>[<span style=\"font-size: 20px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1o6tDGnC</span>](http://pan.baidu.com/s/1o6tDGnC)","slug":"你最美android源码","published":1,"updated":"2016-03-18T04:04:11.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymr0024c4ub0msubdat","content":"<p><img src=\"/upload/2015/06/201506171434475688960684.png\" alt=\"\" title=\"201506171434475688960684.png\"><br><a id=\"more\"></a><br><img src=\"/upload/2015/06/201506171434475712440731.png\" alt=\"\" title=\"201506171434475712440731.png\"><br><img src=\"/upload/2015/06/201506171434475726111383.png\" alt=\"\" title=\"201506171434475726111383.png\"><img src=\"/upload/2015/06/201506171434475727892479.png\" alt=\"\" title=\"201506171434475727892479.png\"></p>\n<p><img src=\"/upload/2015/06/201506171434475730629382.png\" alt=\"\" title=\"201506171434475730629382.png\"><img src=\"/upload/2015/06/201506171434475732113440.png\" alt=\"\" title=\"201506171434475732113440.png\"></p>\n<p><img src=\"/upload/2015/06/201506171434475776133777.png\" alt=\"\" title=\"201506171434475776133777.png\"></p>\n<p><span style=\"font-size: 20px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1o6tDGnC\" target=\"_blank\" rel=\"external\"><span style=\"font-size: 20px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1o6tDGnC</span></a></p>\n","excerpt":"<p><img src=\"/upload/2015/06/201506171434475688960684.png\" alt=\"\" title=\"201506171434475688960684.png\"><br>","more":"<br><img src=\"/upload/2015/06/201506171434475712440731.png\" alt=\"\" title=\"201506171434475712440731.png\"><br><img src=\"/upload/2015/06/201506171434475726111383.png\" alt=\"\" title=\"201506171434475726111383.png\"><img src=\"/upload/2015/06/201506171434475727892479.png\" alt=\"\" title=\"201506171434475727892479.png\"></p>\n<p><img src=\"/upload/2015/06/201506171434475730629382.png\" alt=\"\" title=\"201506171434475730629382.png\"><img src=\"/upload/2015/06/201506171434475732113440.png\" alt=\"\" title=\"201506171434475732113440.png\"></p>\n<p><img src=\"/upload/2015/06/201506171434475776133777.png\" alt=\"\" title=\"201506171434475776133777.png\"></p>\n<p><span style=\"font-size: 20px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1o6tDGnC\"><span style=\"font-size: 20px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1o6tDGnC</span></a></p>"},{"title":"利用ViewStub实现ListView的收放","date":"2015-07-30T16:35:02.000Z","_content":"\nViewStub经常用在ListView中，用来隐藏一些操作，使用起来也很简单，主要就是在ListView的Item中通过一个ViewStub来引用被隐藏的布局文件。监听用户点击Item，判断下当前是可见还是不可见，实时进行状态的转换即可。\n\n效果图如下：\n\n![](/upload/2015/07/201507311438274262700084.gif)\n<!-- more -->\nMainActivity.java: \n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity {\n    private ListView lvList;\n    \n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        lvList = (ListView)findViewById(R.id.lv_list);\n        List&lt;Map&lt;String, String&gt;&gt; data = new ArrayList&lt;Map&lt;String, String&gt;&gt;();\n        Map&lt;String, String&gt; map;\n        for(int i = 0; i &lt; 20; i++){\n            \n            map = new HashMap&lt;String, String&gt;();\n            map.put(&quot;1234&quot;, &quot;1234&quot;);\n            data.add(map);\n        }\n        \n        MainAdapter mainAdapter = new MainAdapter(this, data);\n        lvList.setAdapter(mainAdapter);\n    }\n}</pre>\n\nMainAdapter.java:\n\n自定义Adapter，在getView中实现我们的效果：\n<pre class=\"brush:java;toolbar:false\">public class MainAdapter extends BaseAdapter {\n//    private Context context;\n    private List&lt;Map&lt;String, String&gt;&gt; data;\n    private LayoutInflater layoutInflater;\n    public MainAdapter(Context context, List&lt;Map&lt;String, String&gt;&gt; data) {\n//        this.context = context;\n        this.data = data;\n        layoutInflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        \n    }\n    class ViewHolder {\n        RelativeLayout rlListItem;// 点击展开或收起ViewStub\n        View vsOperations;// 点击后显示的更多的操作\n        ImageButton ibCompelete;// 打钩按钮\n        ImageButton ibImportant;// 感叹号按钮\n        ImageButton ibNotify;// 提醒按钮\n        ImageButton ibLove;// 爱心按钮\n        ImageButton ibShare;// 分享按钮\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        final ViewHolder viewHolder;\n        if (convertView == null) {\n            convertView = layoutInflater.inflate(R.layout.list_item_main_task,\n                    null);\n            viewHolder = new ViewHolder();\n            viewHolder.rlListItem = (RelativeLayout) convertView\n                    .findViewById(R.id.rl_list_item);\n            viewHolder.vsOperations = (ViewStub) convertView\n                    .findViewById(R.id.vs_detail_operations);\n            convertView.setTag(viewHolder);\n        } else {\n            viewHolder = (ViewHolder) convertView.getTag();\n            viewHolder.vsOperations.setVisibility(View.GONE);\n        }\n        viewHolder.rlListItem.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                if (viewHolder.vsOperations.getVisibility() == View.GONE) {\n                    \n                    if(viewHolder.vsOperations instanceof ViewStub){\n                        //关键！\n                        viewHolder.vsOperations = ((ViewStub)viewHolder.vsOperations).inflate();\n                    }\n                    viewHolder.vsOperations.setVisibility(View.VISIBLE);\n                    \n                } else {\n                    viewHolder.vsOperations.setVisibility(View.GONE);\n                }\n            }\n        });\n        Log.e(&quot;111&quot;, &quot;getView&quot;);\n        \n        return convertView;\n    }\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return data.get(position);\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n}</pre>\n\nactivity_main.xml:\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/lv_list&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n         /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_main_task.xml: ListView中的每个Item，注意里面的ViewStub,通过它来引用一个布局文件，即隐藏的操作按钮。\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n    &lt;!-- 每个ListItem除了ViewStub，都在这个标签里面 --&gt;\n    &lt;RelativeLayout\n        android:id=&quot;@+id/rl_list_item&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:background=&quot;@drawable/bg_list_item_task&quot;\n        android:gravity=&quot;center&quot; &gt;\n        &lt;!-- android:descendantFocusability=&quot;blocksDescendants&quot; 当ListView setOnItemClickListener点击没有效果的时候，加上这个 --&gt;\n        &lt;!-- 任务的名称和超期时间 --&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;fill_parent&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_centerVertical=&quot;true&quot;\n            android:gravity=&quot;center_vertical&quot;\n            android:orientation=&quot;vertical&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/tv_task_name&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:text=&quot;任务1&quot;\n                android:textColor=&quot;#404040&quot;\n                android:textSize=&quot;22dp&quot; /&gt;\n            &lt;LinearLayout\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:gravity=&quot;center_vertical&quot;\n                android:orientation=&quot;horizontal&quot; &gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_over_date&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:text=&quot;超期2天&quot;\n                    android:textColor=&quot;#ff0000&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_name&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:layout_marginLeft=&quot;5dip&quot;\n                    android:text=&quot;张小三&quot;\n                    android:textColor=&quot;#333333&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n            &lt;/LinearLayout&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/RelativeLayout&gt;\n    &lt;ViewStub\n        android:id=&quot;@+id/vs_detail_operations&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout=&quot;@layout/view_stub_tool_bar&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\nview_stub_tool_bar.xml: 被隐藏的操作按钮\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center_vertical&quot;\n    android:paddingTop=&quot;8dip&quot;\n    android:background=&quot;@drawable/bg_list_item_task_view_stub&quot; &gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_compelete&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_complete_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_important&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_important_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_notify_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_love_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_share_selector&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n使用ViewStub的好处是，它并没有实例化这个View对象，而是在用户点击的时候才进行实例化，这样可以提高效率。特别是当你的listItem比较复杂的时候，效果很明显。","source":"_posts/利用ViewStub实现ListView的收放.md","raw":"---\ntitle: 利用ViewStub实现ListView的收放\ncategories:\n- 文章\ntags: \n- ViewStub\ndate: 2015-07-31 00:35:02\n---\n\nViewStub经常用在ListView中，用来隐藏一些操作，使用起来也很简单，主要就是在ListView的Item中通过一个ViewStub来引用被隐藏的布局文件。监听用户点击Item，判断下当前是可见还是不可见，实时进行状态的转换即可。\n\n效果图如下：\n\n![](/upload/2015/07/201507311438274262700084.gif)\n<!-- more -->\nMainActivity.java: \n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity {\n    private ListView lvList;\n    \n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        lvList = (ListView)findViewById(R.id.lv_list);\n        List&lt;Map&lt;String, String&gt;&gt; data = new ArrayList&lt;Map&lt;String, String&gt;&gt;();\n        Map&lt;String, String&gt; map;\n        for(int i = 0; i &lt; 20; i++){\n            \n            map = new HashMap&lt;String, String&gt;();\n            map.put(&quot;1234&quot;, &quot;1234&quot;);\n            data.add(map);\n        }\n        \n        MainAdapter mainAdapter = new MainAdapter(this, data);\n        lvList.setAdapter(mainAdapter);\n    }\n}</pre>\n\nMainAdapter.java:\n\n自定义Adapter，在getView中实现我们的效果：\n<pre class=\"brush:java;toolbar:false\">public class MainAdapter extends BaseAdapter {\n//    private Context context;\n    private List&lt;Map&lt;String, String&gt;&gt; data;\n    private LayoutInflater layoutInflater;\n    public MainAdapter(Context context, List&lt;Map&lt;String, String&gt;&gt; data) {\n//        this.context = context;\n        this.data = data;\n        layoutInflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        \n    }\n    class ViewHolder {\n        RelativeLayout rlListItem;// 点击展开或收起ViewStub\n        View vsOperations;// 点击后显示的更多的操作\n        ImageButton ibCompelete;// 打钩按钮\n        ImageButton ibImportant;// 感叹号按钮\n        ImageButton ibNotify;// 提醒按钮\n        ImageButton ibLove;// 爱心按钮\n        ImageButton ibShare;// 分享按钮\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        final ViewHolder viewHolder;\n        if (convertView == null) {\n            convertView = layoutInflater.inflate(R.layout.list_item_main_task,\n                    null);\n            viewHolder = new ViewHolder();\n            viewHolder.rlListItem = (RelativeLayout) convertView\n                    .findViewById(R.id.rl_list_item);\n            viewHolder.vsOperations = (ViewStub) convertView\n                    .findViewById(R.id.vs_detail_operations);\n            convertView.setTag(viewHolder);\n        } else {\n            viewHolder = (ViewHolder) convertView.getTag();\n            viewHolder.vsOperations.setVisibility(View.GONE);\n        }\n        viewHolder.rlListItem.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                if (viewHolder.vsOperations.getVisibility() == View.GONE) {\n                    \n                    if(viewHolder.vsOperations instanceof ViewStub){\n                        //关键！\n                        viewHolder.vsOperations = ((ViewStub)viewHolder.vsOperations).inflate();\n                    }\n                    viewHolder.vsOperations.setVisibility(View.VISIBLE);\n                    \n                } else {\n                    viewHolder.vsOperations.setVisibility(View.GONE);\n                }\n            }\n        });\n        Log.e(&quot;111&quot;, &quot;getView&quot;);\n        \n        return convertView;\n    }\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return data.get(position);\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n}</pre>\n\nactivity_main.xml:\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/lv_list&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n         /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\nlist_item_main_task.xml: ListView中的每个Item，注意里面的ViewStub,通过它来引用一个布局文件，即隐藏的操作按钮。\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n    &lt;!-- 每个ListItem除了ViewStub，都在这个标签里面 --&gt;\n    &lt;RelativeLayout\n        android:id=&quot;@+id/rl_list_item&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:background=&quot;@drawable/bg_list_item_task&quot;\n        android:gravity=&quot;center&quot; &gt;\n        &lt;!-- android:descendantFocusability=&quot;blocksDescendants&quot; 当ListView setOnItemClickListener点击没有效果的时候，加上这个 --&gt;\n        &lt;!-- 任务的名称和超期时间 --&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;fill_parent&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_centerVertical=&quot;true&quot;\n            android:gravity=&quot;center_vertical&quot;\n            android:orientation=&quot;vertical&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/tv_task_name&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:text=&quot;任务1&quot;\n                android:textColor=&quot;#404040&quot;\n                android:textSize=&quot;22dp&quot; /&gt;\n            &lt;LinearLayout\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:gravity=&quot;center_vertical&quot;\n                android:orientation=&quot;horizontal&quot; &gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_over_date&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:text=&quot;超期2天&quot;\n                    android:textColor=&quot;#ff0000&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_name&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:layout_marginLeft=&quot;5dip&quot;\n                    android:text=&quot;张小三&quot;\n                    android:textColor=&quot;#333333&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n            &lt;/LinearLayout&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/RelativeLayout&gt;\n    &lt;ViewStub\n        android:id=&quot;@+id/vs_detail_operations&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout=&quot;@layout/view_stub_tool_bar&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\nview_stub_tool_bar.xml: 被隐藏的操作按钮\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center_vertical&quot;\n    android:paddingTop=&quot;8dip&quot;\n    android:background=&quot;@drawable/bg_list_item_task_view_stub&quot; &gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_compelete&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_complete_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_important&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_important_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_notify_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_love_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_share_selector&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n使用ViewStub的好处是，它并没有实例化这个View对象，而是在用户点击的时候才进行实例化，这样可以提高效率。特别是当你的listItem比较复杂的时候，效果很明显。","slug":"利用ViewStub实现ListView的收放","published":1,"updated":"2016-03-18T04:04:21.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymt0028c4ubohn3e151","content":"<p>ViewStub经常用在ListView中，用来隐藏一些操作，使用起来也很简单，主要就是在ListView的Item中通过一个ViewStub来引用被隐藏的布局文件。监听用户点击Item，判断下当前是可见还是不可见，实时进行状态的转换即可。</p>\n<p>效果图如下：</p>\n<p><img src=\"/upload/2015/07/201507311438274262700084.gif\" alt=\"\"><br><a id=\"more\"></a><br>MainActivity.java: </p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity {\n    private ListView lvList;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        lvList = (ListView)findViewById(R.id.lv_list);\n        List&lt;Map&lt;String, String&gt;&gt; data = new ArrayList&lt;Map&lt;String, String&gt;&gt;();\n        Map&lt;String, String&gt; map;\n        for(int i = 0; i &lt; 20; i++){\n\n            map = new HashMap&lt;String, String&gt;();\n            map.put(&quot;1234&quot;, &quot;1234&quot;);\n            data.add(map);\n        }\n\n        MainAdapter mainAdapter = new MainAdapter(this, data);\n        lvList.setAdapter(mainAdapter);\n    }\n}</pre>\n\n<p>MainAdapter.java:</p>\n<p>自定义Adapter，在getView中实现我们的效果：</p>\n<pre class=\"brush:java;toolbar:false\">public class MainAdapter extends BaseAdapter {\n//    private Context context;\n    private List&lt;Map&lt;String, String&gt;&gt; data;\n    private LayoutInflater layoutInflater;\n    public MainAdapter(Context context, List&lt;Map&lt;String, String&gt;&gt; data) {\n//        this.context = context;\n        this.data = data;\n        layoutInflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    }\n    class ViewHolder {\n        RelativeLayout rlListItem;// 点击展开或收起ViewStub\n        View vsOperations;// 点击后显示的更多的操作\n        ImageButton ibCompelete;// 打钩按钮\n        ImageButton ibImportant;// 感叹号按钮\n        ImageButton ibNotify;// 提醒按钮\n        ImageButton ibLove;// 爱心按钮\n        ImageButton ibShare;// 分享按钮\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        final ViewHolder viewHolder;\n        if (convertView == null) {\n            convertView = layoutInflater.inflate(R.layout.list_item_main_task,\n                    null);\n            viewHolder = new ViewHolder();\n            viewHolder.rlListItem = (RelativeLayout) convertView\n                    .findViewById(R.id.rl_list_item);\n            viewHolder.vsOperations = (ViewStub) convertView\n                    .findViewById(R.id.vs_detail_operations);\n            convertView.setTag(viewHolder);\n        } else {\n            viewHolder = (ViewHolder) convertView.getTag();\n            viewHolder.vsOperations.setVisibility(View.GONE);\n        }\n        viewHolder.rlListItem.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                if (viewHolder.vsOperations.getVisibility() == View.GONE) {\n\n                    if(viewHolder.vsOperations instanceof ViewStub){\n                        //关键！\n                        viewHolder.vsOperations = ((ViewStub)viewHolder.vsOperations).inflate();\n                    }\n                    viewHolder.vsOperations.setVisibility(View.VISIBLE);\n\n                } else {\n                    viewHolder.vsOperations.setVisibility(View.GONE);\n                }\n            }\n        });\n        Log.e(&quot;111&quot;, &quot;getView&quot;);\n\n        return convertView;\n    }\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return data.get(position);\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n}</pre>\n\n<p>activity_main.xml:</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/lv_list&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n         /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_main_task.xml: ListView中的每个Item，注意里面的ViewStub,通过它来引用一个布局文件，即隐藏的操作按钮。</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n    &lt;!-- 每个ListItem除了ViewStub，都在这个标签里面 --&gt;\n    &lt;RelativeLayout\n        android:id=&quot;@+id/rl_list_item&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:background=&quot;@drawable/bg_list_item_task&quot;\n        android:gravity=&quot;center&quot; &gt;\n        &lt;!-- android:descendantFocusability=&quot;blocksDescendants&quot; 当ListView setOnItemClickListener点击没有效果的时候，加上这个 --&gt;\n        &lt;!-- 任务的名称和超期时间 --&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;fill_parent&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_centerVertical=&quot;true&quot;\n            android:gravity=&quot;center_vertical&quot;\n            android:orientation=&quot;vertical&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/tv_task_name&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:text=&quot;任务1&quot;\n                android:textColor=&quot;#404040&quot;\n                android:textSize=&quot;22dp&quot; /&gt;\n            &lt;LinearLayout\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:gravity=&quot;center_vertical&quot;\n                android:orientation=&quot;horizontal&quot; &gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_over_date&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:text=&quot;超期2天&quot;\n                    android:textColor=&quot;#ff0000&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_name&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:layout_marginLeft=&quot;5dip&quot;\n                    android:text=&quot;张小三&quot;\n                    android:textColor=&quot;#333333&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n            &lt;/LinearLayout&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/RelativeLayout&gt;\n    &lt;ViewStub\n        android:id=&quot;@+id/vs_detail_operations&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout=&quot;@layout/view_stub_tool_bar&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n<p>view_stub_tool_bar.xml: 被隐藏的操作按钮</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center_vertical&quot;\n    android:paddingTop=&quot;8dip&quot;\n    android:background=&quot;@drawable/bg_list_item_task_view_stub&quot; &gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_compelete&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_complete_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_important&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_important_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_notify_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_love_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_share_selector&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n<p>使用ViewStub的好处是，它并没有实例化这个View对象，而是在用户点击的时候才进行实例化，这样可以提高效率。特别是当你的listItem比较复杂的时候，效果很明显。</p>\n","excerpt":"<p>ViewStub经常用在ListView中，用来隐藏一些操作，使用起来也很简单，主要就是在ListView的Item中通过一个ViewStub来引用被隐藏的布局文件。监听用户点击Item，判断下当前是可见还是不可见，实时进行状态的转换即可。</p>\n<p>效果图如下：</p>\n<p><img src=\"/upload/2015/07/201507311438274262700084.gif\" alt=\"\"><br>","more":"<br>MainActivity.java: </p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends Activity {\n    private ListView lvList;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        lvList = (ListView)findViewById(R.id.lv_list);\n        List&lt;Map&lt;String, String&gt;&gt; data = new ArrayList&lt;Map&lt;String, String&gt;&gt;();\n        Map&lt;String, String&gt; map;\n        for(int i = 0; i &lt; 20; i++){\n\n            map = new HashMap&lt;String, String&gt;();\n            map.put(&quot;1234&quot;, &quot;1234&quot;);\n            data.add(map);\n        }\n\n        MainAdapter mainAdapter = new MainAdapter(this, data);\n        lvList.setAdapter(mainAdapter);\n    }\n}</pre>\n\n<p>MainAdapter.java:</p>\n<p>自定义Adapter，在getView中实现我们的效果：</p>\n<pre class=\"brush:java;toolbar:false\">public class MainAdapter extends BaseAdapter {\n//    private Context context;\n    private List&lt;Map&lt;String, String&gt;&gt; data;\n    private LayoutInflater layoutInflater;\n    public MainAdapter(Context context, List&lt;Map&lt;String, String&gt;&gt; data) {\n//        this.context = context;\n        this.data = data;\n        layoutInflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    }\n    class ViewHolder {\n        RelativeLayout rlListItem;// 点击展开或收起ViewStub\n        View vsOperations;// 点击后显示的更多的操作\n        ImageButton ibCompelete;// 打钩按钮\n        ImageButton ibImportant;// 感叹号按钮\n        ImageButton ibNotify;// 提醒按钮\n        ImageButton ibLove;// 爱心按钮\n        ImageButton ibShare;// 分享按钮\n    }\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        final ViewHolder viewHolder;\n        if (convertView == null) {\n            convertView = layoutInflater.inflate(R.layout.list_item_main_task,\n                    null);\n            viewHolder = new ViewHolder();\n            viewHolder.rlListItem = (RelativeLayout) convertView\n                    .findViewById(R.id.rl_list_item);\n            viewHolder.vsOperations = (ViewStub) convertView\n                    .findViewById(R.id.vs_detail_operations);\n            convertView.setTag(viewHolder);\n        } else {\n            viewHolder = (ViewHolder) convertView.getTag();\n            viewHolder.vsOperations.setVisibility(View.GONE);\n        }\n        viewHolder.rlListItem.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO Auto-generated method stub\n                if (viewHolder.vsOperations.getVisibility() == View.GONE) {\n\n                    if(viewHolder.vsOperations instanceof ViewStub){\n                        //关键！\n                        viewHolder.vsOperations = ((ViewStub)viewHolder.vsOperations).inflate();\n                    }\n                    viewHolder.vsOperations.setVisibility(View.VISIBLE);\n\n                } else {\n                    viewHolder.vsOperations.setVisibility(View.GONE);\n                }\n            }\n        });\n        Log.e(&quot;111&quot;, &quot;getView&quot;);\n\n        return convertView;\n    }\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return data.size();\n    }\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return data.get(position);\n    }\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n}</pre>\n\n<p>activity_main.xml:</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot; &gt;\n    &lt;ListView\n        android:id=&quot;@+id/lv_list&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;match_parent&quot;\n         /&gt;\n&lt;/RelativeLayout&gt;</pre>\n\n<p>list_item_main_task.xml: ListView中的每个Item，注意里面的ViewStub,通过它来引用一个布局文件，即隐藏的操作按钮。</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n    &lt;!-- 每个ListItem除了ViewStub，都在这个标签里面 --&gt;\n    &lt;RelativeLayout\n        android:id=&quot;@+id/rl_list_item&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:background=&quot;@drawable/bg_list_item_task&quot;\n        android:gravity=&quot;center&quot; &gt;\n        &lt;!-- android:descendantFocusability=&quot;blocksDescendants&quot; 当ListView setOnItemClickListener点击没有效果的时候，加上这个 --&gt;\n        &lt;!-- 任务的名称和超期时间 --&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;fill_parent&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_centerVertical=&quot;true&quot;\n            android:gravity=&quot;center_vertical&quot;\n            android:orientation=&quot;vertical&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/tv_task_name&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:text=&quot;任务1&quot;\n                android:textColor=&quot;#404040&quot;\n                android:textSize=&quot;22dp&quot; /&gt;\n            &lt;LinearLayout\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:gravity=&quot;center_vertical&quot;\n                android:orientation=&quot;horizontal&quot; &gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_over_date&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:text=&quot;超期2天&quot;\n                    android:textColor=&quot;#ff0000&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n                &lt;TextView\n                    android:id=&quot;@+id/tv_name&quot;\n                    android:layout_width=&quot;wrap_content&quot;\n                    android:layout_height=&quot;wrap_content&quot;\n                    android:layout_marginLeft=&quot;5dip&quot;\n                    android:text=&quot;张小三&quot;\n                    android:textColor=&quot;#333333&quot;\n                    android:textSize=&quot;15dp&quot; /&gt;\n            &lt;/LinearLayout&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/RelativeLayout&gt;\n    &lt;ViewStub\n        android:id=&quot;@+id/vs_detail_operations&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout=&quot;@layout/view_stub_tool_bar&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n<p>view_stub_tool_bar.xml: 被隐藏的操作按钮</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;horizontal&quot;\n    android:gravity=&quot;center_vertical&quot;\n    android:paddingTop=&quot;8dip&quot;\n    android:background=&quot;@drawable/bg_list_item_task_view_stub&quot; &gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_compelete&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_complete_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_important&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_important_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_notify_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_love_selector&quot; /&gt;\n    &lt;ImageButton\n        android:id=&quot;@+id/btn_&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_weight=&quot;1&quot;\n        android:minHeight=&quot;55dp&quot;\n        android:background=&quot;@null&quot;\n        android:src=&quot;@drawable/ico_share_selector&quot; /&gt;\n&lt;/LinearLayout&gt;</pre>\n\n<p>使用ViewStub的好处是，它并没有实例化这个View对象，而是在用户点击的时候才进行实例化，这样可以提高效率。特别是当你的listItem比较复杂的时候，效果很明显。</p>"},{"title":"微信红包随机算法初探","date":"2016-02-22T01:49:11.000Z","_content":"\n### 原文地址：[原文地址](http://coderroc.com/2015/10/28/%E6%95%B0%E5%AD%A6%E5%92%8C%E7%AE%97%E6%B3%95/%E5%BE%AE%E4%BF%A1%E7%BA%A2%E5%8C%85%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95%E5%88%9D%E6%8E%A2/)\n\n### 算法\n\n算法很简单，不是提前算好，而是抢红包时计算：\n> 红包里的金额怎么算？为什么出现各个红包金额相差很大？\n> 答：随机，额度在0.01和剩余平均值*2之间。\n<!-- more -->\n### 实现\n\n实现上述算法的逻辑主要是：\n<pre class=\"brush:java;toolbar:false\">public static double getRandomMoney(RedPackage _redPackage) {    // remainSize 剩余的红包数量\n    // remainMoney 剩余的钱\n    if (_redPackage.remainSize == 1) {\n        _redPackage.remainSize--;        return (double) Math.round(_redPackage.remainMoney * 100) / 100;\n    }\n    Random r     = new Random();    double min   = 0.01; //\n    double max   = _redPackage.remainMoney / _redPackage.remainSize * 2;    double money = r.nextDouble() * max;\n    money = money &lt;= min ? 0.01: money;\n    money = Math.floor(money * 100) / 100;\n    _redPackage.remainSize--;\n    _redPackage.remainMoney -= money;    return money;\n}</pre>\n\n`LeftMoneyPackage`<span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">数据结构如下：</span>\n<pre class=\"brush:java;toolbar:false\">class RedPackage {\n    int    remainSize;\n    double remainMoney;\n}</pre>\n\n<span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">测试时初始化相关数据是：</span>\n<pre class=\"brush:java;toolbar:false\">static void init() {\n    redPackage.remainSize  = 30;\n    redPackage.remainMoney = 500;\n}</pre>\n\n### 测试结果\n\n#### 单词测试随机红包\n\n以上面的初始化数据（30人抢500块），执行了两次，结果如下：\n\n// 第一次\n\n15.69    21.18    24.11    30.85    0.74    20.85    2.96    13.43    11.12    24.87    1.86    19.62    5.97    29.33    3.05    26.94    18.69    34.47    9.4    29.83    5.17    24.67    17.09    29.96    6.77    5.79    0.34    23.89    40.44    0.92\n\n// 第二次\n\n10.44    18.01    17.01    21.07    11.87    4.78    30.14    32.05    16.68    20.34    12.94    27.98    9.31    17.97    12.93    28.75    12.1    12.77    7.54    10.87    4.16    25.36    26.89    5.73    11.59    23.91    17.77    15.85    23.42    9.77\n\n对应图表如下：\n![第一次随机红包数据展示](http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第一次随机红包数据展示</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png \"第一次随机红包数据展示\")</div>\n\n还有一张：\n\n![第二次随机红包数据展示](http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第二次随机红包数据展示</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png \"第二次随机红包数据展示\")</div>\n\n#### 多次均值\n\n![重复执行200次的均值](http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行200次的均值</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png \"重复执行200次的均值\")</div>\n\n![重复执行2000次的均值](http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行2000次的均值</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png \"重复执行2000次的均值\")</div>\n\n可以看到，这个算法可以让大家抢到的红包面额在概率上是大致均匀的。","source":"_posts/微信红包随机算法初探.md","raw":"---\ntitle: 微信红包随机算法初探\ncategories:\n- 文章\ntags: \n- 微信红包\n- 算法\ndate: 2016-02-22 09:49:11\n---\n\n### 原文地址：[原文地址](http://coderroc.com/2015/10/28/%E6%95%B0%E5%AD%A6%E5%92%8C%E7%AE%97%E6%B3%95/%E5%BE%AE%E4%BF%A1%E7%BA%A2%E5%8C%85%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95%E5%88%9D%E6%8E%A2/)\n\n### 算法\n\n算法很简单，不是提前算好，而是抢红包时计算：\n> 红包里的金额怎么算？为什么出现各个红包金额相差很大？\n> 答：随机，额度在0.01和剩余平均值*2之间。\n<!-- more -->\n### 实现\n\n实现上述算法的逻辑主要是：\n<pre class=\"brush:java;toolbar:false\">public static double getRandomMoney(RedPackage _redPackage) {    // remainSize 剩余的红包数量\n    // remainMoney 剩余的钱\n    if (_redPackage.remainSize == 1) {\n        _redPackage.remainSize--;        return (double) Math.round(_redPackage.remainMoney * 100) / 100;\n    }\n    Random r     = new Random();    double min   = 0.01; //\n    double max   = _redPackage.remainMoney / _redPackage.remainSize * 2;    double money = r.nextDouble() * max;\n    money = money &lt;= min ? 0.01: money;\n    money = Math.floor(money * 100) / 100;\n    _redPackage.remainSize--;\n    _redPackage.remainMoney -= money;    return money;\n}</pre>\n\n`LeftMoneyPackage`<span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">数据结构如下：</span>\n<pre class=\"brush:java;toolbar:false\">class RedPackage {\n    int    remainSize;\n    double remainMoney;\n}</pre>\n\n<span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">测试时初始化相关数据是：</span>\n<pre class=\"brush:java;toolbar:false\">static void init() {\n    redPackage.remainSize  = 30;\n    redPackage.remainMoney = 500;\n}</pre>\n\n### 测试结果\n\n#### 单词测试随机红包\n\n以上面的初始化数据（30人抢500块），执行了两次，结果如下：\n\n// 第一次\n\n15.69    21.18    24.11    30.85    0.74    20.85    2.96    13.43    11.12    24.87    1.86    19.62    5.97    29.33    3.05    26.94    18.69    34.47    9.4    29.83    5.17    24.67    17.09    29.96    6.77    5.79    0.34    23.89    40.44    0.92\n\n// 第二次\n\n10.44    18.01    17.01    21.07    11.87    4.78    30.14    32.05    16.68    20.34    12.94    27.98    9.31    17.97    12.93    28.75    12.1    12.77    7.54    10.87    4.16    25.36    26.89    5.73    11.59    23.91    17.77    15.85    23.42    9.77\n\n对应图表如下：\n![第一次随机红包数据展示](http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第一次随机红包数据展示</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png \"第一次随机红包数据展示\")</div>\n\n还有一张：\n\n![第二次随机红包数据展示](http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第二次随机红包数据展示</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png \"第二次随机红包数据展示\")</div>\n\n#### 多次均值\n\n![重复执行200次的均值](http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行200次的均值</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png \"重复执行200次的均值\")</div>\n\n![重复执行2000次的均值](http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png)\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\">[<span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行2000次的均值</span>](http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png \"重复执行2000次的均值\")</div>\n\n可以看到，这个算法可以让大家抢到的红包面额在概率上是大致均匀的。","slug":"微信红包随机算法初探","published":1,"updated":"2016-03-18T04:04:07.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmymu002ac4ubzgyq7lgm","content":"<h3 id=\"原文地址：原文地址\"><a href=\"#原文地址：原文地址\" class=\"headerlink\" title=\"原文地址：原文地址\"></a>原文地址：<a href=\"http://coderroc.com/2015/10/28/%E6%95%B0%E5%AD%A6%E5%92%8C%E7%AE%97%E6%B3%95/%E5%BE%AE%E4%BF%A1%E7%BA%A2%E5%8C%85%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95%E5%88%9D%E6%8E%A2/\" target=\"_blank\" rel=\"external\">原文地址</a></h3><h3 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h3><p>算法很简单，不是提前算好，而是抢红包时计算：</p>\n<blockquote>\n<p>红包里的金额怎么算？为什么出现各个红包金额相差很大？<br>答：随机，额度在0.01和剩余平均值*2之间。<br><a id=\"more\"></a></p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3></blockquote>\n<p>实现上述算法的逻辑主要是：</p>\n<pre class=\"brush:java;toolbar:false\">public static double getRandomMoney(RedPackage _redPackage) {    // remainSize 剩余的红包数量\n    // remainMoney 剩余的钱\n    if (_redPackage.remainSize == 1) {\n        _redPackage.remainSize--;        return (double) Math.round(_redPackage.remainMoney * 100) / 100;\n    }\n    Random r     = new Random();    double min   = 0.01; //\n    double max   = _redPackage.remainMoney / _redPackage.remainSize * 2;    double money = r.nextDouble() * max;\n    money = money &lt;= min ? 0.01: money;\n    money = Math.floor(money * 100) / 100;\n    _redPackage.remainSize--;\n    _redPackage.remainMoney -= money;    return money;\n}</pre>\n\n<p><code>LeftMoneyPackage</code><span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">数据结构如下：</span></p>\n<pre class=\"brush:java;toolbar:false\">class RedPackage {\n    int    remainSize;\n    double remainMoney;\n}</pre>\n\n<p><span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">测试时初始化相关数据是：</span></p>\n<pre class=\"brush:java;toolbar:false\">static void init() {\n    redPackage.remainSize  = 30;\n    redPackage.remainMoney = 500;\n}</pre>\n\n<h3 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h3><h4 id=\"单词测试随机红包\"><a href=\"#单词测试随机红包\" class=\"headerlink\" title=\"单词测试随机红包\"></a>单词测试随机红包</h4><p>以上面的初始化数据（30人抢500块），执行了两次，结果如下：</p>\n<p>// 第一次</p>\n<p>15.69    21.18    24.11    30.85    0.74    20.85    2.96    13.43    11.12    24.87    1.86    19.62    5.97    29.33    3.05    26.94    18.69    34.47    9.4    29.83    5.17    24.67    17.09    29.96    6.77    5.79    0.34    23.89    40.44    0.92</p>\n<p>// 第二次</p>\n<p>10.44    18.01    17.01    21.07    11.87    4.78    30.14    32.05    16.68    20.34    12.94    27.98    9.31    17.97    12.93    28.75    12.1    12.77    7.54    10.87    4.16    25.36    26.89    5.73    11.59    23.91    17.77    15.85    23.42    9.77</p>\n<p>对应图表如下：<br><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png\" alt=\"第一次随机红包数据展示\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png\" title=\"第一次随机红包数据展示\" target=\"_blank\" rel=\"external\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第一次随机红包数据展示</span></a></div>\n\n<p>还有一张：</p>\n<p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png\" alt=\"第二次随机红包数据展示\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png\" title=\"第二次随机红包数据展示\" target=\"_blank\" rel=\"external\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第二次随机红包数据展示</span></a></div>\n\n<h4 id=\"多次均值\"><a href=\"#多次均值\" class=\"headerlink\" title=\"多次均值\"></a>多次均值</h4><p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png\" alt=\"重复执行200次的均值\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png\" title=\"重复执行200次的均值\" target=\"_blank\" rel=\"external\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行200次的均值</span></a></div>\n\n<p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png\" alt=\"重复执行2000次的均值\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png\" title=\"重复执行2000次的均值\" target=\"_blank\" rel=\"external\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行2000次的均值</span></a></div>\n\n<p>可以看到，这个算法可以让大家抢到的红包面额在概率上是大致均匀的。</p>\n","excerpt":"<h3 id=\"原文地址：原文地址\"><a href=\"#原文地址：原文地址\" class=\"headerlink\" title=\"原文地址：原文地址\"></a>原文地址：<a href=\"http://coderroc.com/2015/10/28/%E6%95%B0%E5%AD%A6%E5%92%8C%E7%AE%97%E6%B3%95/%E5%BE%AE%E4%BF%A1%E7%BA%A2%E5%8C%85%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95%E5%88%9D%E6%8E%A2/\">原文地址</a></h3><h3 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h3><p>算法很简单，不是提前算好，而是抢红包时计算：</p>\n<blockquote>\n<p>红包里的金额怎么算？为什么出现各个红包金额相差很大？<br>答：随机，额度在0.01和剩余平均值*2之间。<br>","more":"</p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3></blockquote>\n<p>实现上述算法的逻辑主要是：</p>\n<pre class=\"brush:java;toolbar:false\">public static double getRandomMoney(RedPackage _redPackage) {    // remainSize 剩余的红包数量\n    // remainMoney 剩余的钱\n    if (_redPackage.remainSize == 1) {\n        _redPackage.remainSize--;        return (double) Math.round(_redPackage.remainMoney * 100) / 100;\n    }\n    Random r     = new Random();    double min   = 0.01; //\n    double max   = _redPackage.remainMoney / _redPackage.remainSize * 2;    double money = r.nextDouble() * max;\n    money = money &lt;= min ? 0.01: money;\n    money = Math.floor(money * 100) / 100;\n    _redPackage.remainSize--;\n    _redPackage.remainMoney -= money;    return money;\n}</pre>\n\n<p><code>LeftMoneyPackage</code><span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">数据结构如下：</span></p>\n<pre class=\"brush:java;toolbar:false\">class RedPackage {\n    int    remainSize;\n    double remainMoney;\n}</pre>\n\n<p><span style=\"color: rgb(85, 85, 85); font-family: Lato, &#39;Microsoft Jhenghei&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 16px; line-height: 27.2px; text-align: justify; background-color: rgb(255, 255, 255);\">测试时初始化相关数据是：</span></p>\n<pre class=\"brush:java;toolbar:false\">static void init() {\n    redPackage.remainSize  = 30;\n    redPackage.remainMoney = 500;\n}</pre>\n\n<h3 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h3><h4 id=\"单词测试随机红包\"><a href=\"#单词测试随机红包\" class=\"headerlink\" title=\"单词测试随机红包\"></a>单词测试随机红包</h4><p>以上面的初始化数据（30人抢500块），执行了两次，结果如下：</p>\n<p>// 第一次</p>\n<p>15.69    21.18    24.11    30.85    0.74    20.85    2.96    13.43    11.12    24.87    1.86    19.62    5.97    29.33    3.05    26.94    18.69    34.47    9.4    29.83    5.17    24.67    17.09    29.96    6.77    5.79    0.34    23.89    40.44    0.92</p>\n<p>// 第二次</p>\n<p>10.44    18.01    17.01    21.07    11.87    4.78    30.14    32.05    16.68    20.34    12.94    27.98    9.31    17.97    12.93    28.75    12.1    12.77    7.54    10.87    4.16    25.36    26.89    5.73    11.59    23.91    17.77    15.85    23.42    9.77</p>\n<p>对应图表如下：<br><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png\" alt=\"第一次随机红包数据展示\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/7682b4d2-e67f-47b4-9282-31da086ffb55.png\" title=\"第一次随机红包数据展示\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第一次随机红包数据展示</span></a></div>\n\n<p>还有一张：</p>\n<p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png\" alt=\"第二次随机红包数据展示\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/a615bbc4-4dbf-42da-a1a1-e4afcb908752.png\" title=\"第二次随机红包数据展示\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">第二次随机红包数据展示</span></a></div>\n\n<h4 id=\"多次均值\"><a href=\"#多次均值\" class=\"headerlink\" title=\"多次均值\"></a>多次均值</h4><p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png\" alt=\"重复执行200次的均值\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/20d36929-634f-4655-90d2-64fffa43838f.png\" title=\"重复执行200次的均值\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行200次的均值</span></a></div>\n\n<p><img src=\"http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png\" alt=\"重复执行2000次的均值\"></p>\n<div class=\"pic-title\" style=\"margin: 0px auto; text-align: center;\"><a href=\"http://7d9owd.com1.z0.glb.clouddn.com/images/dfddb714-72fb-40e2-805d-cbc43b944f4d.png\" title=\"重复执行2000次的均值\"><span style=\"min-width: 20%; min-height: 22px; display: inline-block; padding: 10px; margin: 0px auto; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(217, 217, 217); font-size: 18px; color: rgb(153, 153, 153); font-style: italic; line-height: 1.7;\">重复执行2000次的均值</span></a></div>\n\n<p>可以看到，这个算法可以让大家抢到的红包面额在概率上是大致均匀的。</p>"},{"title":"模仿QQ上线下线ImageView头像变灰","date":"2015-06-22T13:18:08.000Z","_content":"<!-- more -->\n<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">主要代码</span>\n<pre class=\"brush:java;toolbar:false\">ColorMatrix matrix = new ColorMatrix();\nmatrix.setSaturation(0);\nColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n    matrix);\nimageView.setColorFilter(filter);</pre>\n\n<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">DEMO工程代码：</span>\n\n<span style=\"font-size: 18px;\">MainActivity.java</span><span style=\"font-size: 24px;\">\n</span>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    ImageView imageView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        imageView = (ImageView) findViewById(R.id.imageView1);\n        Button button = (Button) findViewById(R.id.button1);\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View arg0) {\n                // TODO Auto-generated method stub\n                ColorMatrix matrix = new ColorMatrix();\n                matrix.setSaturation(0);\n                ColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n                        matrix);\n                imageView.setColorFilter(filter);\n            }\n        });\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>\n\n<span style=\"font-size: 18px;\">activity_main.xml</span>\n\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;\n    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;\n    tools:context=&quot;com.example.demo.MainActivity&quot; &gt;\n    &lt;Button\n        android:id=&quot;@+id/button1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot;\n        android:layout_alignParentLeft=&quot;true&quot;\n        android:layout_alignParentRight=&quot;true&quot;\n        android:text=&quot;变暗&quot; /&gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageView1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_above=&quot;@+id/button1&quot;\n        android:layout_alignLeft=&quot;@+id/button1&quot;\n        android:layout_alignParentTop=&quot;true&quot;\n        android:layout_alignRight=&quot;@+id/button1&quot;\n        android:src=&quot;@drawable/ic_launcher&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>","source":"_posts/模仿QQ上线下线ImageView头像变灰.md","raw":"---\ntitle: 模仿QQ上线下线ImageView头像变灰\ncategories:\n- 文章\ntags: \n- QQ上线下线\ndate: 2015-06-22 21:18:08\n---\n<!-- more -->\n<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">主要代码</span>\n<pre class=\"brush:java;toolbar:false\">ColorMatrix matrix = new ColorMatrix();\nmatrix.setSaturation(0);\nColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n    matrix);\nimageView.setColorFilter(filter);</pre>\n\n<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">DEMO工程代码：</span>\n\n<span style=\"font-size: 18px;\">MainActivity.java</span><span style=\"font-size: 24px;\">\n</span>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    ImageView imageView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        imageView = (ImageView) findViewById(R.id.imageView1);\n        Button button = (Button) findViewById(R.id.button1);\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View arg0) {\n                // TODO Auto-generated method stub\n                ColorMatrix matrix = new ColorMatrix();\n                matrix.setSaturation(0);\n                ColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n                        matrix);\n                imageView.setColorFilter(filter);\n            }\n        });\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>\n\n<span style=\"font-size: 18px;\">activity_main.xml</span>\n\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;\n    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;\n    tools:context=&quot;com.example.demo.MainActivity&quot; &gt;\n    &lt;Button\n        android:id=&quot;@+id/button1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot;\n        android:layout_alignParentLeft=&quot;true&quot;\n        android:layout_alignParentRight=&quot;true&quot;\n        android:text=&quot;变暗&quot; /&gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageView1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_above=&quot;@+id/button1&quot;\n        android:layout_alignLeft=&quot;@+id/button1&quot;\n        android:layout_alignParentTop=&quot;true&quot;\n        android:layout_alignRight=&quot;@+id/button1&quot;\n        android:src=&quot;@drawable/ic_launcher&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>","slug":"模仿QQ上线下线ImageView头像变灰","published":1,"updated":"2016-03-18T04:04:14.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyn2002dc4ubwotlvud0","content":"<a id=\"more\"></a>\n<p><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">主要代码</span></p>\n<pre class=\"brush:java;toolbar:false\">ColorMatrix matrix = new ColorMatrix();\nmatrix.setSaturation(0);\nColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n    matrix);\nimageView.setColorFilter(filter);</pre>\n\n<p><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">DEMO工程代码：</span></p>\n<p><span style=\"font-size: 18px;\">MainActivity.java</span><span style=\"font-size: 24px;\"><br></span></p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    ImageView imageView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        imageView = (ImageView) findViewById(R.id.imageView1);\n        Button button = (Button) findViewById(R.id.button1);\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View arg0) {\n                // TODO Auto-generated method stub\n                ColorMatrix matrix = new ColorMatrix();\n                matrix.setSaturation(0);\n                ColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n                        matrix);\n                imageView.setColorFilter(filter);\n            }\n        });\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>\n\n<p><span style=\"font-size: 18px;\">activity_main.xml</span></p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;\n    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;\n    tools:context=&quot;com.example.demo.MainActivity&quot; &gt;\n    &lt;Button\n        android:id=&quot;@+id/button1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot;\n        android:layout_alignParentLeft=&quot;true&quot;\n        android:layout_alignParentRight=&quot;true&quot;\n        android:text=&quot;变暗&quot; /&gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageView1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_above=&quot;@+id/button1&quot;\n        android:layout_alignLeft=&quot;@+id/button1&quot;\n        android:layout_alignParentTop=&quot;true&quot;\n        android:layout_alignRight=&quot;@+id/button1&quot;\n        android:src=&quot;@drawable/ic_launcher&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>","excerpt":"","more":"<p><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">主要代码</span></p>\n<pre class=\"brush:java;toolbar:false\">ColorMatrix matrix = new ColorMatrix();\nmatrix.setSaturation(0);\nColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n    matrix);\nimageView.setColorFilter(filter);</pre>\n\n<p><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">DEMO工程代码：</span></p>\n<p><span style=\"font-size: 18px;\">MainActivity.java</span><span style=\"font-size: 24px;\"><br></span></p>\n<pre class=\"brush:java;toolbar:false\">public class MainActivity extends ActionBarActivity {\n    ImageView imageView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        imageView = (ImageView) findViewById(R.id.imageView1);\n        Button button = (Button) findViewById(R.id.button1);\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View arg0) {\n                // TODO Auto-generated method stub\n                ColorMatrix matrix = new ColorMatrix();\n                matrix.setSaturation(0);\n                ColorMatrixColorFilter filter = new ColorMatrixColorFilter(\n                        matrix);\n                imageView.setColorFilter(filter);\n            }\n        });\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}</pre>\n\n<p><span style=\"font-size: 18px;\">activity_main.xml</span></p>\n<pre class=\"brush:xml;toolbar:false\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;\n    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;\n    tools:context=&quot;com.example.demo.MainActivity&quot; &gt;\n    &lt;Button\n        android:id=&quot;@+id/button1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_alignParentBottom=&quot;true&quot;\n        android:layout_alignParentLeft=&quot;true&quot;\n        android:layout_alignParentRight=&quot;true&quot;\n        android:text=&quot;变暗&quot; /&gt;\n    &lt;ImageView\n        android:id=&quot;@+id/imageView1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_above=&quot;@+id/button1&quot;\n        android:layout_alignLeft=&quot;@+id/button1&quot;\n        android:layout_alignParentTop=&quot;true&quot;\n        android:layout_alignRight=&quot;@+id/button1&quot;\n        android:src=&quot;@drawable/ic_launcher&quot; /&gt;\n&lt;/RelativeLayout&gt;</pre>"},{"title":"获取百度网盘真实下载链接","date":"2015-07-15T02:15:12.000Z","_content":"\n<span style=\"color: rgb(255, 0, 0);\">本代码为原创，转载请注明</span>\n\n目前还存在一个问题，同一ip在获取3次以后会出现验证码，会获取失败，大家可以讨论研究下\n<!-- more -->\n主要代码：\n\nHttpRequest.java\n<pre class=\"brush:java;toolbar:false\">import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.RandomAccessFile;\nimport java.lang.reflect.Method;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\npublic class HttpRequest {\n    public static String getData(String u) throws Exception {\n        String re=&quot;&quot;;\n                URL url = new URL(u);\n        HttpURLConnection httpURLConnection = (HttpURLConnection) url\n                .openConnection();\n        httpURLConnection.setRequestMethod(&quot;GET&quot;);\n        httpURLConnection.setDoInput(true);\n        httpURLConnection.setDoOutput(true);\n        InputStream is = httpURLConnection.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        BufferedReader bufferedReader = new BufferedReader(isr);\n        String iL = &quot;&quot;;\n        while ((iL = bufferedReader.readLine()) != null) {\n            re += iL + &quot;\\n&quot;;\n        }\n        \n        return re;\n    }\n}</pre>\n\n获取方法：\n<pre class=\"brush:java;toolbar:false\">import java.net.URLEncoder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\npublic class BaiduNetDisk {\n    public static List&lt;Map&lt;String, Object&gt;&gt; getUrl(String url) throws Exception {\n        List&lt;String&gt; fs_id = new ArrayList&lt;String&gt;();\n        List&lt;Map&lt;String, Object&gt;&gt; list = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();\n        Document doc = Jsoup.connect(url).get();\n        String html = doc.toString();\n        int a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        int b = html.indexOf(&quot;yunData.getCon&quot;);\n        int sign_head = html.indexOf(&quot;yunData.SIGN = \\&quot;&quot;);\n        int sign_foot = html.indexOf(&quot;yunData.TIMESTAMP&quot;);\n        int time_head = html.indexOf(&quot;yunData.TIMESTAMP = \\&quot;&quot;);\n        int time_foot = html.indexOf(&quot;yunData.SHARE_UK&quot;);\n        int share_id_head = html.indexOf(&quot;yunData.SHARE_ID = \\&quot;&quot;);\n        int share_id_foot = html.indexOf(&quot;yunData.SIGN &quot;);\n        String sign = html.substring(sign_head, sign_foot);\n        sign = sign.substring(sign.indexOf(&quot;\\&quot;&quot;) + 1, sign.indexOf(&quot;\\&quot;;&quot;));\n        String time = html.substring(time_head, time_foot);\n        time = time.substring(time.indexOf(&quot;\\&quot;&quot;) + 1, time.indexOf(&quot;\\&quot;;&quot;));\n        String share_id = html.substring(share_id_head, share_id_foot);\n        share_id = share_id.substring(share_id.indexOf(&quot;\\&quot;&quot;) + 1,\n                share_id.indexOf(&quot;\\&quot;;&quot;));\n        System.out.println(share_id);\n        html = html.substring(a, b);\n        a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        b = html.indexOf(&quot;};&quot;);\n        JSONArray jsonArray = new JSONArray(&quot;[&quot; + html.substring(a, b + 1)\n                + &quot;]&quot;);\n        JSONObject jsonObject = jsonArray.getJSONObject(0);\n        String uk = jsonObject.getString(&quot;uk&quot;);\n        String shareid = jsonObject.getString(&quot;shareid&quot;);\n        String path = URLEncoder.encode(jsonObject.getString(&quot;typicalPath&quot;),\n                &quot;utf-8&quot;);\n        jsonArray = new JSONArray(&quot;[&quot; + jsonObject.getString(&quot;file_list&quot;) + &quot;]&quot;);\n        jsonObject = jsonArray.getJSONObject(0);\n        jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        jsonObject = jsonArray.getJSONObject(0);\n        String app_id = jsonObject.getString(&quot;app_id&quot;);\n        if (jsonObject.getString(&quot;isdir&quot;).equals(&quot;1&quot;)) {\n            String url1 = &quot;http://pan.baidu.com/share/list?uk=&quot;\n                    + uk\n                    + &quot;&amp;shareid=&quot;\n                    + shareid\n                    + &quot;&amp;page=1&amp;num=100&amp;dir=&quot;\n                    + path\n                    + &quot;&amp;order=time&amp;desc=1&amp;_=&quot;\n                    + time\n                    + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=&quot;\n                    + app_id;\n            String fileListJson = HttpRequest.getData(url1);\n            System.out.println(fileListJson);\n            jsonArray = new JSONArray(&quot;[&quot; + fileListJson + &quot;]&quot;);\n            jsonObject = jsonArray.getJSONObject(0);\n            jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        }\n        final int size = jsonArray.length();\n        for (int i = 0; i &lt; size; i++) {\n            Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();\n            jsonObject = jsonArray.getJSONObject(i);\n            String fileName = jsonObject.getString(&quot;server_filename&quot;);\n            map.put(&quot;fileName&quot;, fileName);\n            fs_id.add(jsonObject.getString(&quot;fs_id&quot;));\n            String fileInfo = HttpRequest\n                    .getData(&quot;http://pan.baidu.com/api/sharedownload?sign=&quot;\n                            + sign\n                            + &quot;&amp;timestamp=&quot;\n                            + time\n                            + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=250528&amp;encrypt=0&amp;product=share&amp;uk=&quot;\n                            + uk + &quot;&amp;primaryid=&quot; + share_id + &quot;&amp;fid_list=%5B&quot;\n                            + fs_id.get(i) + &quot;%5D&quot;);\n            JSONArray jsonArray2 = new JSONArray(&quot;[&quot; + fileInfo + &quot;]&quot;);\n            JSONObject json_data = jsonArray2.getJSONObject(0);\n            if (json_data.getString(&quot;errno&quot;).equals(&quot;0&quot;)) {\n                jsonArray2 = new JSONArray(json_data.getString(&quot;list&quot;));\n                json_data = jsonArray2.getJSONObject(0);\n                map.put(&quot;url&quot;, json_data.getString(&quot;dlink&quot;));\n            } else if (json_data.getString(&quot;errno&quot;).equals(&quot;-20&quot;)) {\n                return null;\n                // String getVerCode();\n            } else {\n                return null;\n            }\n            list.add(map);\n        }\n        return list;\n    }\n}</pre>","source":"_posts/获取百度网盘真实下载链接.md","raw":"---\ntitle: 获取百度网盘真实下载链接\ncategories:\n- 文章\ntags: \n- 百度云\n- 真实链接\ndate: 2015-07-15 10:15:12\n---\n\n<span style=\"color: rgb(255, 0, 0);\">本代码为原创，转载请注明</span>\n\n目前还存在一个问题，同一ip在获取3次以后会出现验证码，会获取失败，大家可以讨论研究下\n<!-- more -->\n主要代码：\n\nHttpRequest.java\n<pre class=\"brush:java;toolbar:false\">import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.RandomAccessFile;\nimport java.lang.reflect.Method;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\npublic class HttpRequest {\n    public static String getData(String u) throws Exception {\n        String re=&quot;&quot;;\n                URL url = new URL(u);\n        HttpURLConnection httpURLConnection = (HttpURLConnection) url\n                .openConnection();\n        httpURLConnection.setRequestMethod(&quot;GET&quot;);\n        httpURLConnection.setDoInput(true);\n        httpURLConnection.setDoOutput(true);\n        InputStream is = httpURLConnection.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        BufferedReader bufferedReader = new BufferedReader(isr);\n        String iL = &quot;&quot;;\n        while ((iL = bufferedReader.readLine()) != null) {\n            re += iL + &quot;\\n&quot;;\n        }\n        \n        return re;\n    }\n}</pre>\n\n获取方法：\n<pre class=\"brush:java;toolbar:false\">import java.net.URLEncoder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\npublic class BaiduNetDisk {\n    public static List&lt;Map&lt;String, Object&gt;&gt; getUrl(String url) throws Exception {\n        List&lt;String&gt; fs_id = new ArrayList&lt;String&gt;();\n        List&lt;Map&lt;String, Object&gt;&gt; list = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();\n        Document doc = Jsoup.connect(url).get();\n        String html = doc.toString();\n        int a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        int b = html.indexOf(&quot;yunData.getCon&quot;);\n        int sign_head = html.indexOf(&quot;yunData.SIGN = \\&quot;&quot;);\n        int sign_foot = html.indexOf(&quot;yunData.TIMESTAMP&quot;);\n        int time_head = html.indexOf(&quot;yunData.TIMESTAMP = \\&quot;&quot;);\n        int time_foot = html.indexOf(&quot;yunData.SHARE_UK&quot;);\n        int share_id_head = html.indexOf(&quot;yunData.SHARE_ID = \\&quot;&quot;);\n        int share_id_foot = html.indexOf(&quot;yunData.SIGN &quot;);\n        String sign = html.substring(sign_head, sign_foot);\n        sign = sign.substring(sign.indexOf(&quot;\\&quot;&quot;) + 1, sign.indexOf(&quot;\\&quot;;&quot;));\n        String time = html.substring(time_head, time_foot);\n        time = time.substring(time.indexOf(&quot;\\&quot;&quot;) + 1, time.indexOf(&quot;\\&quot;;&quot;));\n        String share_id = html.substring(share_id_head, share_id_foot);\n        share_id = share_id.substring(share_id.indexOf(&quot;\\&quot;&quot;) + 1,\n                share_id.indexOf(&quot;\\&quot;;&quot;));\n        System.out.println(share_id);\n        html = html.substring(a, b);\n        a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        b = html.indexOf(&quot;};&quot;);\n        JSONArray jsonArray = new JSONArray(&quot;[&quot; + html.substring(a, b + 1)\n                + &quot;]&quot;);\n        JSONObject jsonObject = jsonArray.getJSONObject(0);\n        String uk = jsonObject.getString(&quot;uk&quot;);\n        String shareid = jsonObject.getString(&quot;shareid&quot;);\n        String path = URLEncoder.encode(jsonObject.getString(&quot;typicalPath&quot;),\n                &quot;utf-8&quot;);\n        jsonArray = new JSONArray(&quot;[&quot; + jsonObject.getString(&quot;file_list&quot;) + &quot;]&quot;);\n        jsonObject = jsonArray.getJSONObject(0);\n        jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        jsonObject = jsonArray.getJSONObject(0);\n        String app_id = jsonObject.getString(&quot;app_id&quot;);\n        if (jsonObject.getString(&quot;isdir&quot;).equals(&quot;1&quot;)) {\n            String url1 = &quot;http://pan.baidu.com/share/list?uk=&quot;\n                    + uk\n                    + &quot;&amp;shareid=&quot;\n                    + shareid\n                    + &quot;&amp;page=1&amp;num=100&amp;dir=&quot;\n                    + path\n                    + &quot;&amp;order=time&amp;desc=1&amp;_=&quot;\n                    + time\n                    + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=&quot;\n                    + app_id;\n            String fileListJson = HttpRequest.getData(url1);\n            System.out.println(fileListJson);\n            jsonArray = new JSONArray(&quot;[&quot; + fileListJson + &quot;]&quot;);\n            jsonObject = jsonArray.getJSONObject(0);\n            jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        }\n        final int size = jsonArray.length();\n        for (int i = 0; i &lt; size; i++) {\n            Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();\n            jsonObject = jsonArray.getJSONObject(i);\n            String fileName = jsonObject.getString(&quot;server_filename&quot;);\n            map.put(&quot;fileName&quot;, fileName);\n            fs_id.add(jsonObject.getString(&quot;fs_id&quot;));\n            String fileInfo = HttpRequest\n                    .getData(&quot;http://pan.baidu.com/api/sharedownload?sign=&quot;\n                            + sign\n                            + &quot;&amp;timestamp=&quot;\n                            + time\n                            + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=250528&amp;encrypt=0&amp;product=share&amp;uk=&quot;\n                            + uk + &quot;&amp;primaryid=&quot; + share_id + &quot;&amp;fid_list=%5B&quot;\n                            + fs_id.get(i) + &quot;%5D&quot;);\n            JSONArray jsonArray2 = new JSONArray(&quot;[&quot; + fileInfo + &quot;]&quot;);\n            JSONObject json_data = jsonArray2.getJSONObject(0);\n            if (json_data.getString(&quot;errno&quot;).equals(&quot;0&quot;)) {\n                jsonArray2 = new JSONArray(json_data.getString(&quot;list&quot;));\n                json_data = jsonArray2.getJSONObject(0);\n                map.put(&quot;url&quot;, json_data.getString(&quot;dlink&quot;));\n            } else if (json_data.getString(&quot;errno&quot;).equals(&quot;-20&quot;)) {\n                return null;\n                // String getVerCode();\n            } else {\n                return null;\n            }\n            list.add(map);\n        }\n        return list;\n    }\n}</pre>","slug":"获取百度网盘真实下载链接","published":1,"updated":"2016-03-18T04:04:24.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyn4002hc4ubg0eo04w2","content":"<p><span style=\"color: rgb(255, 0, 0);\">本代码为原创，转载请注明</span></p>\n<p>目前还存在一个问题，同一ip在获取3次以后会出现验证码，会获取失败，大家可以讨论研究下<br><a id=\"more\"></a><br>主要代码：</p>\n<p>HttpRequest.java</p>\n<pre class=\"brush:java;toolbar:false\">import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.RandomAccessFile;\nimport java.lang.reflect.Method;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\npublic class HttpRequest {\n    public static String getData(String u) throws Exception {\n        String re=&quot;&quot;;\n                URL url = new URL(u);\n        HttpURLConnection httpURLConnection = (HttpURLConnection) url\n                .openConnection();\n        httpURLConnection.setRequestMethod(&quot;GET&quot;);\n        httpURLConnection.setDoInput(true);\n        httpURLConnection.setDoOutput(true);\n        InputStream is = httpURLConnection.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        BufferedReader bufferedReader = new BufferedReader(isr);\n        String iL = &quot;&quot;;\n        while ((iL = bufferedReader.readLine()) != null) {\n            re += iL + &quot;\\n&quot;;\n        }\n\n        return re;\n    }\n}</pre>\n\n<p>获取方法：</p>\n<pre class=\"brush:java;toolbar:false\">import java.net.URLEncoder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\npublic class BaiduNetDisk {\n    public static List&lt;Map&lt;String, Object&gt;&gt; getUrl(String url) throws Exception {\n        List&lt;String&gt; fs_id = new ArrayList&lt;String&gt;();\n        List&lt;Map&lt;String, Object&gt;&gt; list = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();\n        Document doc = Jsoup.connect(url).get();\n        String html = doc.toString();\n        int a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        int b = html.indexOf(&quot;yunData.getCon&quot;);\n        int sign_head = html.indexOf(&quot;yunData.SIGN = \\&quot;&quot;);\n        int sign_foot = html.indexOf(&quot;yunData.TIMESTAMP&quot;);\n        int time_head = html.indexOf(&quot;yunData.TIMESTAMP = \\&quot;&quot;);\n        int time_foot = html.indexOf(&quot;yunData.SHARE_UK&quot;);\n        int share_id_head = html.indexOf(&quot;yunData.SHARE_ID = \\&quot;&quot;);\n        int share_id_foot = html.indexOf(&quot;yunData.SIGN &quot;);\n        String sign = html.substring(sign_head, sign_foot);\n        sign = sign.substring(sign.indexOf(&quot;\\&quot;&quot;) + 1, sign.indexOf(&quot;\\&quot;;&quot;));\n        String time = html.substring(time_head, time_foot);\n        time = time.substring(time.indexOf(&quot;\\&quot;&quot;) + 1, time.indexOf(&quot;\\&quot;;&quot;));\n        String share_id = html.substring(share_id_head, share_id_foot);\n        share_id = share_id.substring(share_id.indexOf(&quot;\\&quot;&quot;) + 1,\n                share_id.indexOf(&quot;\\&quot;;&quot;));\n        System.out.println(share_id);\n        html = html.substring(a, b);\n        a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        b = html.indexOf(&quot;};&quot;);\n        JSONArray jsonArray = new JSONArray(&quot;[&quot; + html.substring(a, b + 1)\n                + &quot;]&quot;);\n        JSONObject jsonObject = jsonArray.getJSONObject(0);\n        String uk = jsonObject.getString(&quot;uk&quot;);\n        String shareid = jsonObject.getString(&quot;shareid&quot;);\n        String path = URLEncoder.encode(jsonObject.getString(&quot;typicalPath&quot;),\n                &quot;utf-8&quot;);\n        jsonArray = new JSONArray(&quot;[&quot; + jsonObject.getString(&quot;file_list&quot;) + &quot;]&quot;);\n        jsonObject = jsonArray.getJSONObject(0);\n        jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        jsonObject = jsonArray.getJSONObject(0);\n        String app_id = jsonObject.getString(&quot;app_id&quot;);\n        if (jsonObject.getString(&quot;isdir&quot;).equals(&quot;1&quot;)) {\n            String url1 = &quot;http://pan.baidu.com/share/list?uk=&quot;\n                    + uk\n                    + &quot;&amp;shareid=&quot;\n                    + shareid\n                    + &quot;&amp;page=1&amp;num=100&amp;dir=&quot;\n                    + path\n                    + &quot;&amp;order=time&amp;desc=1&amp;_=&quot;\n                    + time\n                    + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=&quot;\n                    + app_id;\n            String fileListJson = HttpRequest.getData(url1);\n            System.out.println(fileListJson);\n            jsonArray = new JSONArray(&quot;[&quot; + fileListJson + &quot;]&quot;);\n            jsonObject = jsonArray.getJSONObject(0);\n            jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        }\n        final int size = jsonArray.length();\n        for (int i = 0; i &lt; size; i++) {\n            Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();\n            jsonObject = jsonArray.getJSONObject(i);\n            String fileName = jsonObject.getString(&quot;server_filename&quot;);\n            map.put(&quot;fileName&quot;, fileName);\n            fs_id.add(jsonObject.getString(&quot;fs_id&quot;));\n            String fileInfo = HttpRequest\n                    .getData(&quot;http://pan.baidu.com/api/sharedownload?sign=&quot;\n                            + sign\n                            + &quot;&amp;timestamp=&quot;\n                            + time\n                            + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=250528&amp;encrypt=0&amp;product=share&amp;uk=&quot;\n                            + uk + &quot;&amp;primaryid=&quot; + share_id + &quot;&amp;fid_list=%5B&quot;\n                            + fs_id.get(i) + &quot;%5D&quot;);\n            JSONArray jsonArray2 = new JSONArray(&quot;[&quot; + fileInfo + &quot;]&quot;);\n            JSONObject json_data = jsonArray2.getJSONObject(0);\n            if (json_data.getString(&quot;errno&quot;).equals(&quot;0&quot;)) {\n                jsonArray2 = new JSONArray(json_data.getString(&quot;list&quot;));\n                json_data = jsonArray2.getJSONObject(0);\n                map.put(&quot;url&quot;, json_data.getString(&quot;dlink&quot;));\n            } else if (json_data.getString(&quot;errno&quot;).equals(&quot;-20&quot;)) {\n                return null;\n                // String getVerCode();\n            } else {\n                return null;\n            }\n            list.add(map);\n        }\n        return list;\n    }\n}</pre>","excerpt":"<p><span style=\"color: rgb(255, 0, 0);\">本代码为原创，转载请注明</span></p>\n<p>目前还存在一个问题，同一ip在获取3次以后会出现验证码，会获取失败，大家可以讨论研究下<br>","more":"<br>主要代码：</p>\n<p>HttpRequest.java</p>\n<pre class=\"brush:java;toolbar:false\">import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.RandomAccessFile;\nimport java.lang.reflect.Method;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\npublic class HttpRequest {\n    public static String getData(String u) throws Exception {\n        String re=&quot;&quot;;\n                URL url = new URL(u);\n        HttpURLConnection httpURLConnection = (HttpURLConnection) url\n                .openConnection();\n        httpURLConnection.setRequestMethod(&quot;GET&quot;);\n        httpURLConnection.setDoInput(true);\n        httpURLConnection.setDoOutput(true);\n        InputStream is = httpURLConnection.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        BufferedReader bufferedReader = new BufferedReader(isr);\n        String iL = &quot;&quot;;\n        while ((iL = bufferedReader.readLine()) != null) {\n            re += iL + &quot;\\n&quot;;\n        }\n\n        return re;\n    }\n}</pre>\n\n<p>获取方法：</p>\n<pre class=\"brush:java;toolbar:false\">import java.net.URLEncoder;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\npublic class BaiduNetDisk {\n    public static List&lt;Map&lt;String, Object&gt;&gt; getUrl(String url) throws Exception {\n        List&lt;String&gt; fs_id = new ArrayList&lt;String&gt;();\n        List&lt;Map&lt;String, Object&gt;&gt; list = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();\n        Document doc = Jsoup.connect(url).get();\n        String html = doc.toString();\n        int a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        int b = html.indexOf(&quot;yunData.getCon&quot;);\n        int sign_head = html.indexOf(&quot;yunData.SIGN = \\&quot;&quot;);\n        int sign_foot = html.indexOf(&quot;yunData.TIMESTAMP&quot;);\n        int time_head = html.indexOf(&quot;yunData.TIMESTAMP = \\&quot;&quot;);\n        int time_foot = html.indexOf(&quot;yunData.SHARE_UK&quot;);\n        int share_id_head = html.indexOf(&quot;yunData.SHARE_ID = \\&quot;&quot;);\n        int share_id_foot = html.indexOf(&quot;yunData.SIGN &quot;);\n        String sign = html.substring(sign_head, sign_foot);\n        sign = sign.substring(sign.indexOf(&quot;\\&quot;&quot;) + 1, sign.indexOf(&quot;\\&quot;;&quot;));\n        String time = html.substring(time_head, time_foot);\n        time = time.substring(time.indexOf(&quot;\\&quot;&quot;) + 1, time.indexOf(&quot;\\&quot;;&quot;));\n        String share_id = html.substring(share_id_head, share_id_foot);\n        share_id = share_id.substring(share_id.indexOf(&quot;\\&quot;&quot;) + 1,\n                share_id.indexOf(&quot;\\&quot;;&quot;));\n        System.out.println(share_id);\n        html = html.substring(a, b);\n        a = html.indexOf(&quot;{\\&quot;typicalPath&quot;);\n        b = html.indexOf(&quot;};&quot;);\n        JSONArray jsonArray = new JSONArray(&quot;[&quot; + html.substring(a, b + 1)\n                + &quot;]&quot;);\n        JSONObject jsonObject = jsonArray.getJSONObject(0);\n        String uk = jsonObject.getString(&quot;uk&quot;);\n        String shareid = jsonObject.getString(&quot;shareid&quot;);\n        String path = URLEncoder.encode(jsonObject.getString(&quot;typicalPath&quot;),\n                &quot;utf-8&quot;);\n        jsonArray = new JSONArray(&quot;[&quot; + jsonObject.getString(&quot;file_list&quot;) + &quot;]&quot;);\n        jsonObject = jsonArray.getJSONObject(0);\n        jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        jsonObject = jsonArray.getJSONObject(0);\n        String app_id = jsonObject.getString(&quot;app_id&quot;);\n        if (jsonObject.getString(&quot;isdir&quot;).equals(&quot;1&quot;)) {\n            String url1 = &quot;http://pan.baidu.com/share/list?uk=&quot;\n                    + uk\n                    + &quot;&amp;shareid=&quot;\n                    + shareid\n                    + &quot;&amp;page=1&amp;num=100&amp;dir=&quot;\n                    + path\n                    + &quot;&amp;order=time&amp;desc=1&amp;_=&quot;\n                    + time\n                    + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=&quot;\n                    + app_id;\n            String fileListJson = HttpRequest.getData(url1);\n            System.out.println(fileListJson);\n            jsonArray = new JSONArray(&quot;[&quot; + fileListJson + &quot;]&quot;);\n            jsonObject = jsonArray.getJSONObject(0);\n            jsonArray = new JSONArray(jsonObject.getString(&quot;list&quot;));\n        }\n        final int size = jsonArray.length();\n        for (int i = 0; i &lt; size; i++) {\n            Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();\n            jsonObject = jsonArray.getJSONObject(i);\n            String fileName = jsonObject.getString(&quot;server_filename&quot;);\n            map.put(&quot;fileName&quot;, fileName);\n            fs_id.add(jsonObject.getString(&quot;fs_id&quot;));\n            String fileInfo = HttpRequest\n                    .getData(&quot;http://pan.baidu.com/api/sharedownload?sign=&quot;\n                            + sign\n                            + &quot;&amp;timestamp=&quot;\n                            + time\n                            + &quot;&amp;bdstoken=c51077ce0e0e313a16066612a13fbcd4&amp;channel=chunlei&amp;clienttype=0&amp;web=1&amp;app_id=250528&amp;encrypt=0&amp;product=share&amp;uk=&quot;\n                            + uk + &quot;&amp;primaryid=&quot; + share_id + &quot;&amp;fid_list=%5B&quot;\n                            + fs_id.get(i) + &quot;%5D&quot;);\n            JSONArray jsonArray2 = new JSONArray(&quot;[&quot; + fileInfo + &quot;]&quot;);\n            JSONObject json_data = jsonArray2.getJSONObject(0);\n            if (json_data.getString(&quot;errno&quot;).equals(&quot;0&quot;)) {\n                jsonArray2 = new JSONArray(json_data.getString(&quot;list&quot;));\n                json_data = jsonArray2.getJSONObject(0);\n                map.put(&quot;url&quot;, json_data.getString(&quot;dlink&quot;));\n            } else if (json_data.getString(&quot;errno&quot;).equals(&quot;-20&quot;)) {\n                return null;\n                // String getVerCode();\n            } else {\n                return null;\n            }\n            list.add(map);\n        }\n        return list;\n    }\n}</pre>"},{"title":"音乐播放器（功能完善，歌词同步，）新手学习必备","date":"2015-06-16T17:44:32.000Z","_content":"\n![](/upload/2015/06/201506171434477083764846.png \"201506171434477083764846.png\")\n<!-- more -->\n![](/upload/2015/06/201506171434477084135584.png \"201506171434477084135584.png\")\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1gdeYQNh</span>](http://pan.baidu.com/s/1gdeYQNh)","source":"_posts/音乐播放器（功能完善，歌词同步，）新手学习必备.md","raw":"---\ntitle: 音乐播放器（功能完善，歌词同步，）新手学习必备\ncategories:\n- 项目\ndate: 2015-06-17 01:44:32\n---\n\n![](/upload/2015/06/201506171434477083764846.png \"201506171434477083764846.png\")\n<!-- more -->\n![](/upload/2015/06/201506171434477084135584.png \"201506171434477084135584.png\")\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1gdeYQNh</span>](http://pan.baidu.com/s/1gdeYQNh)","slug":"音乐播放器（功能完善，歌词同步，）新手学习必备","published":1,"updated":"2016-03-18T03:54:30.118Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyn7002lc4ubvph2zo1g","content":"<p><img src=\"/upload/2015/06/201506171434477083764846.png\" alt=\"\" title=\"201506171434477083764846.png\"><br><a id=\"more\"></a><br><img src=\"/upload/2015/06/201506171434477084135584.png\" alt=\"\" title=\"201506171434477084135584.png\"></p>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1gdeYQNh\" target=\"_blank\" rel=\"external\"><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1gdeYQNh</span></a></p>\n","excerpt":"<p><img src=\"/upload/2015/06/201506171434477083764846.png\" alt=\"\" title=\"201506171434477083764846.png\"><br>","more":"<br><img src=\"/upload/2015/06/201506171434477084135584.png\" alt=\"\" title=\"201506171434477084135584.png\"></p>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1gdeYQNh\"><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1gdeYQNh</span></a></p>"},{"title":"高仿哔哩哔哩Android客户端","date":"2015-06-16T17:33:33.000Z","_content":"<!-- more -->\n![174007cwi3ztimi6bj8e88.gif](/upload/2015/06/201506171434476041565265.gif \"201506171434476041565265.gif\")\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1bni4PaB</span>](http://pan.baidu.com/s/1bni4PaB)","source":"_posts/高仿哔哩哔哩Android客户端.md","raw":"---\ntitle: 高仿哔哩哔哩Android客户端\ncategories:\n- 项目\ntags: \n- 哔哩哔哩\ndate: 2015-06-17 01:33:33\n---\n<!-- more -->\n![174007cwi3ztimi6bj8e88.gif](/upload/2015/06/201506171434476041565265.gif \"201506171434476041565265.gif\")\n\n<span style=\"font-size: 24px;\">下载地址：</span>[<span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1bni4PaB</span>](http://pan.baidu.com/s/1bni4PaB)","slug":"高仿哔哩哔哩Android客户端","published":1,"updated":"2016-03-18T04:04:26.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmyn8002nc4ubljergozn","content":"<a id=\"more\"></a>\n<p><img src=\"/upload/2015/06/201506171434476041565265.gif\" alt=\"174007cwi3ztimi6bj8e88.gif\" title=\"201506171434476041565265.gif\"></p>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1bni4PaB\" target=\"_blank\" rel=\"external\"><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1bni4PaB</span></a></p>\n","excerpt":"","more":"<p><img src=\"/upload/2015/06/201506171434476041565265.gif\" alt=\"174007cwi3ztimi6bj8e88.gif\" title=\"201506171434476041565265.gif\"></p>\n<p><span style=\"font-size: 24px;\">下载地址：</span><a href=\"http://pan.baidu.com/s/1bni4PaB\"><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">http://pan.baidu.com/s/1bni4PaB</span></a></p>"},{"title":"android根据银行卡卡号判断银行","date":"2015-06-16T17:37:59.000Z","_content":"\n<span style=\"font-size: 18px;\">根据银行卡号判断是哪个银行的卡，依据是银行卡号的前6位数，称之为bin号。</span>\n\n<span style=\"font-size: 18px;\">我们把bin号转化为长整形，再把各个银行卡的bin号做成有序表。通过二分查找的方法，找到bin号在有序表的位置，然后读出银行卡的信息。</span>\n<!-- more -->\n<span style=\"font-size: 18px;\">我把这个封装成一个java类：</span>\n<pre class=\"brush:java;toolbar:false\">public class BankInfo {\n    //BIN号\n    private final static long[] bankBin=\n    {\n        102033,\n        103000,\n        185720,\n        303781,\n        356827,\n        356828,\n        356833,\n        356835,\n        356837,\n        356838,\n        356839,\n        356840,\n        356885,\n        356886,\n        356887,\n        356888,\n        356889,\n        356890,\n        370246,\n        370247,\n        370248,\n        370249,\n        400360,\n        400937,\n        400938,\n        400939,\n        400940,\n        400941,\n        400942,\n        402658,\n        402673,\n        402791,\n        403361,\n        403391,\n        404117,\n        404157,\n        404171,\n        404172,\n        404173,\n        404174,\n        404738,\n        404739,\n        405512,\n        405512,\n        406252,\n        406254,\n        406365,\n        407405,\n        409665,\n        409666,\n        409667,\n        409668,\n        409669,\n        409670,\n        409671,\n        409672,\n        410062,\n        412962,\n        412963,\n        415599,\n        421317,\n        421349,\n        421393,\n        421437,\n        421865,\n        421869,\n        421870,\n        421871,\n        422160,\n        422161,\n        424106,\n        424107,\n        424108,\n        424109,\n        424110,\n        424111,\n        424902,\n        425862,\n        427010,\n        427018,\n        427019,\n        427020,\n        427028,\n        427029,\n        427038,\n        427039,\n        427062,\n        427064,\n        427571,\n        428911,\n        431502,\n        431502,\n        433666,\n        433670,\n        433680,\n        434061,\n        434062,\n        435744,\n        435745,\n        436718,\n        436728,\n        436738,\n        436742,\n        436745,\n        436748,\n        436768,\n        438088,\n        438125,\n        438126,\n        438588,\n        438589,\n        438600,\n        439188,\n        439225,\n        439227,\n        442729,\n        442730,\n        451289,\n        451291,\n        451804,\n        451804,\n        451810,\n        451810,\n        453242,\n        456351,\n        456418,\n        458060,\n        458060,\n        458071,\n        458071,\n        458123,\n        458124,\n        468203,\n        472067,\n        472068,\n        479228,\n        479229,\n        481699,\n        486466,\n        486493,\n        486494,\n        486497,\n        487013,\n        489592,\n        489734,\n        489735,\n        489736,\n        491020,\n        491020,\n        491031,\n        491032,\n        491040,\n        493427,\n        493878,\n        498451,\n        504923,\n        510529,\n        512315,\n        512316,\n        512411,\n        512412,\n        512425,\n        512431,\n        512466,\n        512695,\n        512732,\n        514906,\n        514957,\n        514958,\n        517636,\n        518212,\n        518364,\n        518378,\n        518379,\n        518474,\n        518475,\n        518476,\n        518710,\n        518718,\n        519412,\n        519498,\n        520082,\n        520108,\n        520131,\n        520152,\n        520169,\n        520194,\n        520382,\n        521899,\n        522153,\n        523036,\n        524011,\n        524047,\n        524070,\n        524091,\n        524094,\n        524864,\n        524865,\n        525498,\n        525745,\n        525746,\n        526410,\n        526855,\n        527414,\n        528020,\n        528931,\n        528948,\n        530970,\n        530980,\n        530980,\n        530990,\n        532420,\n        532430,\n        532450,\n        532458,\n        535910,\n        535910,\n        535918,\n        537830,\n        540297,\n        540838,\n        541068,\n        541709,\n        543159,\n        544033,\n        545619,\n        545623,\n        545947,\n        547628,\n        547648,\n        547766,\n        547766,\n        548259,\n        548844,\n        552245,\n        552288,\n        552534,\n        552587,\n        552599,\n        552742,\n        552794,\n        552801,\n        552853,\n        553131,\n        553242,\n        556610,\n        556617,\n        558360,\n        558730,\n        558808,\n        558809,\n        558868,\n        558868,\n        558894,\n        558895,\n        558916,\n        566666,\n        584016,\n        601100,\n        601101,\n        601121,\n        601122,\n        601123,\n        601124,\n        601125,\n        601126,\n        601127,\n        601128,\n        601131,\n        601136,\n        601137,\n        601138,\n        601140,\n        601142,\n        601143,\n        601144,\n        601145,\n        601146,\n        601147,\n        601148,\n        601149,\n        601174,\n        601177,\n        601178,\n        601179,\n        601186,\n        601187,\n        601188,\n        601189,\n        601382,\n        601382,\n        601428,\n        601428,\n        601428,\n        601428,\n        602907,\n        602907,\n        602969,\n        602969,\n        603128,\n        603128,\n        603367,\n        603367,\n        603445,\n        603445,\n        603506,\n        603506,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603602,\n        603602,\n        603694,\n        603694,\n        603708,\n        603708,\n        621021,\n        621201,\n        621977,\n        621977,\n        622126,\n        622126,\n        622127,\n        622127,\n        622127,\n        622127,\n        622128,\n        622128,\n        622129,\n        622129,\n        622131,\n        622131,\n        622132,\n        622132,\n        622133,\n        622133,\n        622134,\n        622134,\n        622135,\n        622135,\n        622136,\n        622136,\n        622137,\n        622137,\n        622138,\n        622138,\n        622139,\n        622139,\n        622140,\n        622140,\n        622141,\n        622141,\n        622143,\n        622143,\n        622146,\n        622146,\n        622147,\n        622147,\n        622148,\n        622148,\n        622149,\n        622149,\n        622150,\n        622150,\n        622151,\n        622151,\n        622152,\n        622152,\n        622153,\n        622153,\n        622154,\n        622154,\n        622155,\n        622155,\n        622156,\n        622156,\n        622165,\n        622165,\n        622166,\n        622166,\n        622168,\n        622168,\n        622169,\n        622169,\n        622178,\n        622178,\n        622179,\n        622179,\n        622184,\n        622184,\n        622188,\n        622188,\n        622199,\n        622199,\n        622200,\n        622200,\n        622202,\n        622202,\n        622203,\n        622203,\n        622208,\n        622208,\n        622210,\n        622210,\n        622211,\n        622211,\n        622212,\n        622212,\n        622213,\n        622213,\n        622214,\n        622214,\n        622215,\n        622215,\n        622220,\n        622220,\n        622225,\n        622225,\n        622230,\n        622230,\n        622235,\n        622235,\n        622240,\n        622240,\n        622245,\n        622245,\n        622250,\n        622250,\n        622251,\n        622251,\n        622252,\n        622252,\n        622253,\n        622253,\n        622254,\n        622254,\n        622258,\n        622258,\n        622259,\n        622259,\n        622260,\n        622260,\n        622261,\n        622261,\n        622280,\n        622280,\n        622291,\n        622291,\n        622292,\n        622292,\n        622301,\n        622301,\n        622302,\n        622302,\n        622303,\n        622303,\n        622305,\n        622305,\n        622307,\n        622307,\n        622308,\n        622308,\n        622310,\n        622310,\n        622311,\n        622311,\n        622312,\n        622312,\n        622316,\n        622316,\n        622318,\n        622318,\n        622319,\n        622319,\n        622321,\n        622321,\n        622322,\n        622322,\n        622323,\n        622323,\n        622324,\n        622324,\n        622325,\n        622325,\n        622327,\n        622327,\n        622328,\n        622328,\n        622329,\n        622329,\n        622331,\n        622331,\n        622332,\n        622332,\n        622333,\n        622333,\n        622335,\n        622335,\n        622336,\n        622336,\n        622337,\n        622337,\n        622338,\n        622338,\n        622339,\n        622339,\n        622340,\n        622340,\n        622341,\n        622341,\n        622342,\n        622342,\n        622343,\n        622343,\n        622345,\n        622345,\n        622346,\n        622346,\n        622347,\n        622347,\n        622348,\n        622348,\n        622349,\n        622349,\n        622350,\n        622350,\n        622351,\n        622351,\n        622352,\n        622352,\n        622353,\n        622353,\n        622355,\n        622355,\n        622358,\n        622358,\n        622359,\n        622359,\n        622360,\n        622360,\n        622361,\n        622361,\n        622362,\n        622362,\n        622363,\n        622363,\n        622365,\n        622365,\n        622366,\n        622366,\n        622367,\n        622367,\n        622368,\n        622368,\n        622369,\n        622369,\n        622370,\n        622370,\n        622371,\n        622371,\n        622373,\n        622373,\n        622375,\n        622375,\n        622376,\n        622376,\n        622377,\n        622377,\n        622378,\n        622378,\n        622379,\n        622379,\n        622382,\n        622382,\n        622383,\n        622383,\n        622384,\n        622384,\n        622385,\n        622385,\n        622386,\n        622386,\n        622387,\n        622387,\n        622388,\n        622388,\n        622389,\n        622389,\n        622391,\n        622391,\n        622392,\n        622392,\n        622393,\n        622393,\n        622394,\n        622394,\n        622395,\n        622395,\n        622396,\n        622396,\n        622397,\n        622397,\n        622398,\n        622399,\n        622399,\n        622400,\n        622400,\n        622406,\n        622406,\n        622407,\n        622407,\n        622411,\n        622411,\n        622412,\n        622412,\n        622413,\n        622413,\n        622415,\n        622415,\n        622418,\n        622418,\n        622420,\n        622420,\n        622421,\n        622421,\n        622422,\n        622422,\n        622423,\n        622423,\n        622425,\n        622425,\n        622426,\n        622426,\n        622427,\n        622427,\n        622428,\n        622428,\n        622429,\n        622429,\n        622432,\n        622432,\n        622434,\n        622434,\n        622435,\n        622435,\n        622436,\n        622436,\n        622439,\n        622439,\n        622440,\n        622440,\n        622441,\n        622441,\n        622442,\n        622442,\n        622443,\n        622443,\n        622447,\n        622447,\n        622448,\n        622448,\n        622449,\n        622449,\n        622450,\n        622450,\n        622451,\n        622451,\n        622452,\n        622452,\n        622453,\n        622453,\n        622456,\n        622456,\n        622459,\n        622459,\n        622462,\n        622462,\n        622463,\n        622463,\n        622466,\n        622466,\n        622467,\n        622467,\n        622468,\n        622468,\n        622470,\n        622470,\n        622471,\n        622471,\n        622472,\n        622472,\n        622476,\n        622476,\n        622477,\n        622477,\n        622478,\n        622478,\n        622481,\n        622481,\n        622485,\n        622485,\n        622486,\n        622486,\n        622487,\n        622487,\n        622487,\n        622487,\n        622488,\n        622488,\n        622489,\n        622489,\n        622490,\n        622490,\n        622490,\n        622490,\n        622491,\n        622491,\n        622491,\n        622491,\n        622492,\n        622492,\n        622492,\n        622492,\n        622493,\n        622493,\n        622495,\n        622495,\n        622496,\n        622496,\n        622498,\n        622498,\n        622499,\n        622499,\n        622500,\n        622500,\n        622506,\n        622506,\n        622509,\n        622509,\n        622510,\n        622510,\n        622516,\n        622516,\n        622517,\n        622517,\n        622518,\n        622518,\n        622519,\n        622519,\n        622521,\n        622521,\n        622522,\n        622522,\n        622523,\n        622523,\n        622525,\n        622525,\n        622526,\n        622526,\n        622538,\n        622538,\n        622546,\n        622546,\n        622547,\n        622547,\n        622548,\n        622548,\n        622549,\n        622549,\n        622550,\n        622550,\n        622561,\n        622561,\n        622562,\n        622562,\n        622563,\n        622563,\n        622575,\n        622575,\n        622576,\n        622576,\n        622577,\n        622577,\n        622578,\n        622578,\n        622579,\n        622579,\n        622580,\n        622580,\n        622581,\n        622581,\n        622582,\n        622582,\n        622588,\n        622588,\n        622598,\n        622598,\n        622600,\n        622600,\n        622601,\n        622601,\n        622602,\n        622602,\n        622603,\n        622603,\n        622615,\n        622615,\n        622617,\n        622617,\n        622619,\n        622619,\n        622622,\n        622622,\n        622630,\n        622630,\n        622631,\n        622631,\n        622632,\n        622632,\n        622633,\n        622633,\n        622650,\n        622650,\n        622655,\n        622655,\n        622658,\n        622658,\n        622660,\n        622660,\n        622678,\n        622678,\n        622679,\n        622679,\n        622680,\n        622680,\n        622681,\n        622681,\n        622682,\n        622682,\n        622684,\n        622684,\n        622688,\n        622688,\n        622689,\n        622689,\n        622690,\n        622690,\n        622691,\n        622691,\n        622692,\n        622692,\n        622696,\n        622696,\n        622698,\n        622698,\n        622700,\n        622700,\n        622725,\n        622725,\n        622728,\n        622728,\n        622750,\n        622750,\n        622751,\n        622751,\n        622752,\n        622752,\n        622753,\n        622753,\n        622754,\n        622755,\n        622755,\n        622756,\n        622756,\n        622757,\n        622757,\n        622758,\n        622758,\n        622759,\n        622759,\n        622760,\n        622760,\n        622761,\n        622761,\n        622762,\n        622762,\n        622763,\n        622763,\n        622770,\n        622770,\n        622777,\n        622777,\n        622821,\n        622821,\n        622822,\n        622822,\n        622823,\n        622823,\n        622824,\n        622824,\n        622825,\n        622825,\n        622826,\n        622826,\n        622827,\n        622836,\n        622836,\n        622837,\n        622837,\n        622840,\n        622840,\n        622841,\n        622842,\n        622843,\n        622844,\n        622844,\n        622845,\n        622845,\n        622846,\n        622846,\n        622847,\n        622847,\n        622848,\n        622848,\n        622849,\n        622855,\n        622855,\n        622856,\n        622856,\n        622857,\n        622857,\n        622858,\n        622858,\n        622859,\n        622859,\n        622860,\n        622860,\n        622861,\n        622861,\n        622864,\n        622864,\n        622865,\n        622865,\n        622866,\n        622866,\n        622867,\n        622867,\n        622869,\n        622869,\n        622870,\n        622870,\n        622871,\n        622871,\n        622877,\n        622877,\n        622878,\n        622878,\n        622879,\n        622879,\n        622880,\n        622880,\n        622881,\n        622881,\n        622882,\n        622882,\n        622884,\n        622884,\n        622885,\n        622885,\n        622886,\n        622886,\n        622891,\n        622891,\n        622892,\n        622892,\n        622893,\n        622893,\n        622895,\n        622895,\n        622897,\n        622897,\n        622898,\n        622898,\n        622900,\n        622900,\n        622901,\n        622901,\n        622908,\n        622908,\n        622909,\n        622909,\n        622940,\n        622982,\n        628218,\n        628288,\n        628366,\n        628368,\n        650600,\n        650600,\n        650700,\n        650700,\n        650800,\n        650800,\n        650900,\n        650900,\n        682900,\n        682900,\n        683970,\n        683970,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        690755,\n        690755,\n        690755,\n        690755,\n        694301,\n        694301,\n        695800,\n        695800,\n        843010,\n        843010,\n        843360,\n        843360,\n        843420,\n        843420,\n        843610,\n        843610,\n        843730,\n        843730,\n        843800,\n        843800,\n        843850,\n        843850,\n        843900,\n        843900,\n        870000,\n        870000,\n        870100,\n        870100,\n        870300,\n        870300,\n        870400,\n        870400,\n        870500,\n        870500,\n        888000,\n        888000,\n        940056,\n        955880,\n        955881,\n        955882,\n        955888,\n        984301,\n        998800,\n};\n     //&quot;发卡行.卡种名称&quot;, \n    private static final String[] bankName = {\n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;农业银行.金穗借记卡&quot;, \n         &quot;昆明农联社.金碧卡&quot;, \n         &quot;中国光大银行.阳光爱心卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人金卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人普卡&quot;, \n         &quot;中国银行.中银JCB卡金卡&quot;, \n         &quot;中国银行.中银JCB卡普卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;工商银行.牡丹运通卡金卡&quot;, \n         &quot;工商银行.牡丹运通卡普通卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;招商银行.两地一卡通&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA普通卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA金卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.中银威士信用卡员工普卡&quot;, \n         &quot;中国银行.中银威士信用卡个人普卡&quot;, \n         &quot;中国银行.中银威士信用卡员工金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人金卡&quot;, \n         &quot;中国银行.中银威士信用卡员工白金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人白金卡&quot;, \n         &quot;中国银行.中银威士信用卡商务白金卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;招商银行银行.招商银行银行国际卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;北京银行.京卡双币种国际借记卡&quot;, \n         &quot;建设银行.乐当家银卡VISA&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;北京银行.京卡贵宾金卡&quot;, \n         &quot;北京银行.京卡贵宾白金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-白金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国民生银行.民生国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;建设银行.乐当家金卡VISA&quot;, \n         &quot;建设银行.乐当家白金卡VISA&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡VISA&quot;, \n         &quot;建设银行.龙卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;建设银行.龙卡国际普通卡VISA&quot;, \n         &quot;建设银行.龙卡国际金卡VISA&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.中银奥运信用卡个人卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国工商银行.牡丹VISA白金卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;上海银行.上海申卡IC&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.VISA信用卡&quot;, \n         &quot;招商银行.VISA商务信用卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;兴业银行.VISA信用卡&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人金卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;建设银行.VISA准贷记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;上海浦东发展银行.浦发银行VISA年青卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;中国光大银行.阳光白金信用卡&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;兴业银行.VISA商务普卡&quot;, \n         &quot;兴业银行.VISA商务金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;中国建设银行.VISA白金/钻石信用卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;建设银行.VISA准贷记金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人金卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA白金卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;工商银行.牡丹万事达国际借记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工普卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人普卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人金卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工白金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人白金卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;招商银行.MASTER信用卡&quot;, \n         &quot;招商银行.MASTER信用金卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡普通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人普卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;工商银行.牡丹万事达白金卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人金卡&quot;, \n         &quot;建设银行.乐当家金卡MASTER&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;建设银行.乐当家银卡MASTER&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;兴业银行.加菲猫信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;建设银行.MASTER准贷记卡&quot;, \n         &quot;建设银行.龙卡普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际金卡MASTER&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国光大银行.第十八届世界足球锦标赛纪念卡&quot;, \n         &quot;建设银行.MASTER准贷记金卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城万事达信用卡单位普卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;建设银行.乐当家白金卡MASTER&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡MASTER&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;建设银行.龙卡信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.中银万事达信用卡单位金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡MASTER&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;深圳农联社.信通卡&quot;, \n         &quot;D.F.S.I(备注1).发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;河北省农村信用社.信通卡&quot;, \n         &quot;韩亚银行.&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;葫芦岛市商业银行.一通卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;广州农村信用合作社联合社.麒麟储蓄卡&quot;, \n         &quot;广州农村信用合作社.麒麟储蓄卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;上海市农村信用合作社联合社.如意卡&quot;, \n         &quot;上海市农村信用合作社联社.如意卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.公司卡&quot;, \n         &quot;招商银行银行.公司卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.金穗海通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗惠农卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝贵宾卡(银)&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（金）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（白金）&quot;, \n         &quot;中国农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（单位卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（个人普卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（钻石）&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;浙江省农村信用社联合社.丰收卡&quot;, \n         &quot;浙江省农村信用社联社.丰收卡&quot;, \n         &quot;珠海农村信用合作社联社.信通卡&quot;, \n         &quot;珠海农村信用合作联社.信通卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;石嘴山城市信用社.麒麟卡&quot;, \n         &quot;张家口市商业银行.好运卡&quot;, \n         &quot;交通银行.太平洋卡&quot;, \n         &quot;中国工商银行.公务卡&quot;, \n         &quot;中国建设银行.公务卡&quot;, \n         &quot;大庆市商业银行.公务卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;郑州市商业银行.世纪一卡通&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人金卡&quot;, \n         &quot;工商银行.牡丹银联理财金卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n};\n    \n    public static String getNameOfBank(char[] charBin, int offset)\n    {\n        long longBin = 0;\n        \n        for(int i=0; i&lt; 6; i++)\n        {\n            longBin = (longBin*10) + (charBin[i+offset]-48);        \n        }\n        Log.e(&quot;sangfei.code&quot;, &quot;bankBin: &quot;+longBin);\n        \n        int index = binarySearch(bankBin, longBin);\n        \n        if(index==-1)\n        {\n            return &quot;磁条卡卡号:\\n&quot;;\n        }\n        return bankName[index]+&quot;:\\n&quot;;\n    }\n    \n    //二分查找方法\n    public static int binarySearch(long[] srcArray, long des){\n        int low = 0;\n        int high = srcArray.length-1;\n        while(low &lt;= high) \n        {\n            int middle = (low + high)/2;\n            if(des == srcArray[middle]) \n            { \n                return middle;\n            }\n            else if(des &lt;srcArray[middle]) \n            { \n                high = middle - 1; \n            }\n            else \n            { \n                low = middle + 1;\n            }\n        } \n        return -1;\n    }\n}</pre>\n\n使用例子:\n<pre class=\"brush:java;toolbar:false\">char[] cardNumber = {&#39;6&#39;, &#39;2&#39;, &#39;2&#39;, &#39;8&#39;, &#39;2&#39;, &#39;5&#39;, &#39;0&#39;};//卡号\nSring bankName = BankInfo.getNameOfBank(cardNumber, 0);//获取银行卡的信息</pre>","source":"_posts/android根据银行卡卡号判断银行.md","raw":"---\ntitle: android根据银行卡卡号判断银行\ncategories:\n- 文章\ndate: 2015-06-17 01:37:59\n---\n\n<span style=\"font-size: 18px;\">根据银行卡号判断是哪个银行的卡，依据是银行卡号的前6位数，称之为bin号。</span>\n\n<span style=\"font-size: 18px;\">我们把bin号转化为长整形，再把各个银行卡的bin号做成有序表。通过二分查找的方法，找到bin号在有序表的位置，然后读出银行卡的信息。</span>\n<!-- more -->\n<span style=\"font-size: 18px;\">我把这个封装成一个java类：</span>\n<pre class=\"brush:java;toolbar:false\">public class BankInfo {\n    //BIN号\n    private final static long[] bankBin=\n    {\n        102033,\n        103000,\n        185720,\n        303781,\n        356827,\n        356828,\n        356833,\n        356835,\n        356837,\n        356838,\n        356839,\n        356840,\n        356885,\n        356886,\n        356887,\n        356888,\n        356889,\n        356890,\n        370246,\n        370247,\n        370248,\n        370249,\n        400360,\n        400937,\n        400938,\n        400939,\n        400940,\n        400941,\n        400942,\n        402658,\n        402673,\n        402791,\n        403361,\n        403391,\n        404117,\n        404157,\n        404171,\n        404172,\n        404173,\n        404174,\n        404738,\n        404739,\n        405512,\n        405512,\n        406252,\n        406254,\n        406365,\n        407405,\n        409665,\n        409666,\n        409667,\n        409668,\n        409669,\n        409670,\n        409671,\n        409672,\n        410062,\n        412962,\n        412963,\n        415599,\n        421317,\n        421349,\n        421393,\n        421437,\n        421865,\n        421869,\n        421870,\n        421871,\n        422160,\n        422161,\n        424106,\n        424107,\n        424108,\n        424109,\n        424110,\n        424111,\n        424902,\n        425862,\n        427010,\n        427018,\n        427019,\n        427020,\n        427028,\n        427029,\n        427038,\n        427039,\n        427062,\n        427064,\n        427571,\n        428911,\n        431502,\n        431502,\n        433666,\n        433670,\n        433680,\n        434061,\n        434062,\n        435744,\n        435745,\n        436718,\n        436728,\n        436738,\n        436742,\n        436745,\n        436748,\n        436768,\n        438088,\n        438125,\n        438126,\n        438588,\n        438589,\n        438600,\n        439188,\n        439225,\n        439227,\n        442729,\n        442730,\n        451289,\n        451291,\n        451804,\n        451804,\n        451810,\n        451810,\n        453242,\n        456351,\n        456418,\n        458060,\n        458060,\n        458071,\n        458071,\n        458123,\n        458124,\n        468203,\n        472067,\n        472068,\n        479228,\n        479229,\n        481699,\n        486466,\n        486493,\n        486494,\n        486497,\n        487013,\n        489592,\n        489734,\n        489735,\n        489736,\n        491020,\n        491020,\n        491031,\n        491032,\n        491040,\n        493427,\n        493878,\n        498451,\n        504923,\n        510529,\n        512315,\n        512316,\n        512411,\n        512412,\n        512425,\n        512431,\n        512466,\n        512695,\n        512732,\n        514906,\n        514957,\n        514958,\n        517636,\n        518212,\n        518364,\n        518378,\n        518379,\n        518474,\n        518475,\n        518476,\n        518710,\n        518718,\n        519412,\n        519498,\n        520082,\n        520108,\n        520131,\n        520152,\n        520169,\n        520194,\n        520382,\n        521899,\n        522153,\n        523036,\n        524011,\n        524047,\n        524070,\n        524091,\n        524094,\n        524864,\n        524865,\n        525498,\n        525745,\n        525746,\n        526410,\n        526855,\n        527414,\n        528020,\n        528931,\n        528948,\n        530970,\n        530980,\n        530980,\n        530990,\n        532420,\n        532430,\n        532450,\n        532458,\n        535910,\n        535910,\n        535918,\n        537830,\n        540297,\n        540838,\n        541068,\n        541709,\n        543159,\n        544033,\n        545619,\n        545623,\n        545947,\n        547628,\n        547648,\n        547766,\n        547766,\n        548259,\n        548844,\n        552245,\n        552288,\n        552534,\n        552587,\n        552599,\n        552742,\n        552794,\n        552801,\n        552853,\n        553131,\n        553242,\n        556610,\n        556617,\n        558360,\n        558730,\n        558808,\n        558809,\n        558868,\n        558868,\n        558894,\n        558895,\n        558916,\n        566666,\n        584016,\n        601100,\n        601101,\n        601121,\n        601122,\n        601123,\n        601124,\n        601125,\n        601126,\n        601127,\n        601128,\n        601131,\n        601136,\n        601137,\n        601138,\n        601140,\n        601142,\n        601143,\n        601144,\n        601145,\n        601146,\n        601147,\n        601148,\n        601149,\n        601174,\n        601177,\n        601178,\n        601179,\n        601186,\n        601187,\n        601188,\n        601189,\n        601382,\n        601382,\n        601428,\n        601428,\n        601428,\n        601428,\n        602907,\n        602907,\n        602969,\n        602969,\n        603128,\n        603128,\n        603367,\n        603367,\n        603445,\n        603445,\n        603506,\n        603506,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603602,\n        603602,\n        603694,\n        603694,\n        603708,\n        603708,\n        621021,\n        621201,\n        621977,\n        621977,\n        622126,\n        622126,\n        622127,\n        622127,\n        622127,\n        622127,\n        622128,\n        622128,\n        622129,\n        622129,\n        622131,\n        622131,\n        622132,\n        622132,\n        622133,\n        622133,\n        622134,\n        622134,\n        622135,\n        622135,\n        622136,\n        622136,\n        622137,\n        622137,\n        622138,\n        622138,\n        622139,\n        622139,\n        622140,\n        622140,\n        622141,\n        622141,\n        622143,\n        622143,\n        622146,\n        622146,\n        622147,\n        622147,\n        622148,\n        622148,\n        622149,\n        622149,\n        622150,\n        622150,\n        622151,\n        622151,\n        622152,\n        622152,\n        622153,\n        622153,\n        622154,\n        622154,\n        622155,\n        622155,\n        622156,\n        622156,\n        622165,\n        622165,\n        622166,\n        622166,\n        622168,\n        622168,\n        622169,\n        622169,\n        622178,\n        622178,\n        622179,\n        622179,\n        622184,\n        622184,\n        622188,\n        622188,\n        622199,\n        622199,\n        622200,\n        622200,\n        622202,\n        622202,\n        622203,\n        622203,\n        622208,\n        622208,\n        622210,\n        622210,\n        622211,\n        622211,\n        622212,\n        622212,\n        622213,\n        622213,\n        622214,\n        622214,\n        622215,\n        622215,\n        622220,\n        622220,\n        622225,\n        622225,\n        622230,\n        622230,\n        622235,\n        622235,\n        622240,\n        622240,\n        622245,\n        622245,\n        622250,\n        622250,\n        622251,\n        622251,\n        622252,\n        622252,\n        622253,\n        622253,\n        622254,\n        622254,\n        622258,\n        622258,\n        622259,\n        622259,\n        622260,\n        622260,\n        622261,\n        622261,\n        622280,\n        622280,\n        622291,\n        622291,\n        622292,\n        622292,\n        622301,\n        622301,\n        622302,\n        622302,\n        622303,\n        622303,\n        622305,\n        622305,\n        622307,\n        622307,\n        622308,\n        622308,\n        622310,\n        622310,\n        622311,\n        622311,\n        622312,\n        622312,\n        622316,\n        622316,\n        622318,\n        622318,\n        622319,\n        622319,\n        622321,\n        622321,\n        622322,\n        622322,\n        622323,\n        622323,\n        622324,\n        622324,\n        622325,\n        622325,\n        622327,\n        622327,\n        622328,\n        622328,\n        622329,\n        622329,\n        622331,\n        622331,\n        622332,\n        622332,\n        622333,\n        622333,\n        622335,\n        622335,\n        622336,\n        622336,\n        622337,\n        622337,\n        622338,\n        622338,\n        622339,\n        622339,\n        622340,\n        622340,\n        622341,\n        622341,\n        622342,\n        622342,\n        622343,\n        622343,\n        622345,\n        622345,\n        622346,\n        622346,\n        622347,\n        622347,\n        622348,\n        622348,\n        622349,\n        622349,\n        622350,\n        622350,\n        622351,\n        622351,\n        622352,\n        622352,\n        622353,\n        622353,\n        622355,\n        622355,\n        622358,\n        622358,\n        622359,\n        622359,\n        622360,\n        622360,\n        622361,\n        622361,\n        622362,\n        622362,\n        622363,\n        622363,\n        622365,\n        622365,\n        622366,\n        622366,\n        622367,\n        622367,\n        622368,\n        622368,\n        622369,\n        622369,\n        622370,\n        622370,\n        622371,\n        622371,\n        622373,\n        622373,\n        622375,\n        622375,\n        622376,\n        622376,\n        622377,\n        622377,\n        622378,\n        622378,\n        622379,\n        622379,\n        622382,\n        622382,\n        622383,\n        622383,\n        622384,\n        622384,\n        622385,\n        622385,\n        622386,\n        622386,\n        622387,\n        622387,\n        622388,\n        622388,\n        622389,\n        622389,\n        622391,\n        622391,\n        622392,\n        622392,\n        622393,\n        622393,\n        622394,\n        622394,\n        622395,\n        622395,\n        622396,\n        622396,\n        622397,\n        622397,\n        622398,\n        622399,\n        622399,\n        622400,\n        622400,\n        622406,\n        622406,\n        622407,\n        622407,\n        622411,\n        622411,\n        622412,\n        622412,\n        622413,\n        622413,\n        622415,\n        622415,\n        622418,\n        622418,\n        622420,\n        622420,\n        622421,\n        622421,\n        622422,\n        622422,\n        622423,\n        622423,\n        622425,\n        622425,\n        622426,\n        622426,\n        622427,\n        622427,\n        622428,\n        622428,\n        622429,\n        622429,\n        622432,\n        622432,\n        622434,\n        622434,\n        622435,\n        622435,\n        622436,\n        622436,\n        622439,\n        622439,\n        622440,\n        622440,\n        622441,\n        622441,\n        622442,\n        622442,\n        622443,\n        622443,\n        622447,\n        622447,\n        622448,\n        622448,\n        622449,\n        622449,\n        622450,\n        622450,\n        622451,\n        622451,\n        622452,\n        622452,\n        622453,\n        622453,\n        622456,\n        622456,\n        622459,\n        622459,\n        622462,\n        622462,\n        622463,\n        622463,\n        622466,\n        622466,\n        622467,\n        622467,\n        622468,\n        622468,\n        622470,\n        622470,\n        622471,\n        622471,\n        622472,\n        622472,\n        622476,\n        622476,\n        622477,\n        622477,\n        622478,\n        622478,\n        622481,\n        622481,\n        622485,\n        622485,\n        622486,\n        622486,\n        622487,\n        622487,\n        622487,\n        622487,\n        622488,\n        622488,\n        622489,\n        622489,\n        622490,\n        622490,\n        622490,\n        622490,\n        622491,\n        622491,\n        622491,\n        622491,\n        622492,\n        622492,\n        622492,\n        622492,\n        622493,\n        622493,\n        622495,\n        622495,\n        622496,\n        622496,\n        622498,\n        622498,\n        622499,\n        622499,\n        622500,\n        622500,\n        622506,\n        622506,\n        622509,\n        622509,\n        622510,\n        622510,\n        622516,\n        622516,\n        622517,\n        622517,\n        622518,\n        622518,\n        622519,\n        622519,\n        622521,\n        622521,\n        622522,\n        622522,\n        622523,\n        622523,\n        622525,\n        622525,\n        622526,\n        622526,\n        622538,\n        622538,\n        622546,\n        622546,\n        622547,\n        622547,\n        622548,\n        622548,\n        622549,\n        622549,\n        622550,\n        622550,\n        622561,\n        622561,\n        622562,\n        622562,\n        622563,\n        622563,\n        622575,\n        622575,\n        622576,\n        622576,\n        622577,\n        622577,\n        622578,\n        622578,\n        622579,\n        622579,\n        622580,\n        622580,\n        622581,\n        622581,\n        622582,\n        622582,\n        622588,\n        622588,\n        622598,\n        622598,\n        622600,\n        622600,\n        622601,\n        622601,\n        622602,\n        622602,\n        622603,\n        622603,\n        622615,\n        622615,\n        622617,\n        622617,\n        622619,\n        622619,\n        622622,\n        622622,\n        622630,\n        622630,\n        622631,\n        622631,\n        622632,\n        622632,\n        622633,\n        622633,\n        622650,\n        622650,\n        622655,\n        622655,\n        622658,\n        622658,\n        622660,\n        622660,\n        622678,\n        622678,\n        622679,\n        622679,\n        622680,\n        622680,\n        622681,\n        622681,\n        622682,\n        622682,\n        622684,\n        622684,\n        622688,\n        622688,\n        622689,\n        622689,\n        622690,\n        622690,\n        622691,\n        622691,\n        622692,\n        622692,\n        622696,\n        622696,\n        622698,\n        622698,\n        622700,\n        622700,\n        622725,\n        622725,\n        622728,\n        622728,\n        622750,\n        622750,\n        622751,\n        622751,\n        622752,\n        622752,\n        622753,\n        622753,\n        622754,\n        622755,\n        622755,\n        622756,\n        622756,\n        622757,\n        622757,\n        622758,\n        622758,\n        622759,\n        622759,\n        622760,\n        622760,\n        622761,\n        622761,\n        622762,\n        622762,\n        622763,\n        622763,\n        622770,\n        622770,\n        622777,\n        622777,\n        622821,\n        622821,\n        622822,\n        622822,\n        622823,\n        622823,\n        622824,\n        622824,\n        622825,\n        622825,\n        622826,\n        622826,\n        622827,\n        622836,\n        622836,\n        622837,\n        622837,\n        622840,\n        622840,\n        622841,\n        622842,\n        622843,\n        622844,\n        622844,\n        622845,\n        622845,\n        622846,\n        622846,\n        622847,\n        622847,\n        622848,\n        622848,\n        622849,\n        622855,\n        622855,\n        622856,\n        622856,\n        622857,\n        622857,\n        622858,\n        622858,\n        622859,\n        622859,\n        622860,\n        622860,\n        622861,\n        622861,\n        622864,\n        622864,\n        622865,\n        622865,\n        622866,\n        622866,\n        622867,\n        622867,\n        622869,\n        622869,\n        622870,\n        622870,\n        622871,\n        622871,\n        622877,\n        622877,\n        622878,\n        622878,\n        622879,\n        622879,\n        622880,\n        622880,\n        622881,\n        622881,\n        622882,\n        622882,\n        622884,\n        622884,\n        622885,\n        622885,\n        622886,\n        622886,\n        622891,\n        622891,\n        622892,\n        622892,\n        622893,\n        622893,\n        622895,\n        622895,\n        622897,\n        622897,\n        622898,\n        622898,\n        622900,\n        622900,\n        622901,\n        622901,\n        622908,\n        622908,\n        622909,\n        622909,\n        622940,\n        622982,\n        628218,\n        628288,\n        628366,\n        628368,\n        650600,\n        650600,\n        650700,\n        650700,\n        650800,\n        650800,\n        650900,\n        650900,\n        682900,\n        682900,\n        683970,\n        683970,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        690755,\n        690755,\n        690755,\n        690755,\n        694301,\n        694301,\n        695800,\n        695800,\n        843010,\n        843010,\n        843360,\n        843360,\n        843420,\n        843420,\n        843610,\n        843610,\n        843730,\n        843730,\n        843800,\n        843800,\n        843850,\n        843850,\n        843900,\n        843900,\n        870000,\n        870000,\n        870100,\n        870100,\n        870300,\n        870300,\n        870400,\n        870400,\n        870500,\n        870500,\n        888000,\n        888000,\n        940056,\n        955880,\n        955881,\n        955882,\n        955888,\n        984301,\n        998800,\n};\n     //&quot;发卡行.卡种名称&quot;, \n    private static final String[] bankName = {\n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;农业银行.金穗借记卡&quot;, \n         &quot;昆明农联社.金碧卡&quot;, \n         &quot;中国光大银行.阳光爱心卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人金卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人普卡&quot;, \n         &quot;中国银行.中银JCB卡金卡&quot;, \n         &quot;中国银行.中银JCB卡普卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;工商银行.牡丹运通卡金卡&quot;, \n         &quot;工商银行.牡丹运通卡普通卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;招商银行.两地一卡通&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA普通卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA金卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.中银威士信用卡员工普卡&quot;, \n         &quot;中国银行.中银威士信用卡个人普卡&quot;, \n         &quot;中国银行.中银威士信用卡员工金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人金卡&quot;, \n         &quot;中国银行.中银威士信用卡员工白金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人白金卡&quot;, \n         &quot;中国银行.中银威士信用卡商务白金卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;招商银行银行.招商银行银行国际卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;北京银行.京卡双币种国际借记卡&quot;, \n         &quot;建设银行.乐当家银卡VISA&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;北京银行.京卡贵宾金卡&quot;, \n         &quot;北京银行.京卡贵宾白金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-白金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国民生银行.民生国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;建设银行.乐当家金卡VISA&quot;, \n         &quot;建设银行.乐当家白金卡VISA&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡VISA&quot;, \n         &quot;建设银行.龙卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;建设银行.龙卡国际普通卡VISA&quot;, \n         &quot;建设银行.龙卡国际金卡VISA&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.中银奥运信用卡个人卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国工商银行.牡丹VISA白金卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;上海银行.上海申卡IC&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.VISA信用卡&quot;, \n         &quot;招商银行.VISA商务信用卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;兴业银行.VISA信用卡&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人金卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;建设银行.VISA准贷记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;上海浦东发展银行.浦发银行VISA年青卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;中国光大银行.阳光白金信用卡&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;兴业银行.VISA商务普卡&quot;, \n         &quot;兴业银行.VISA商务金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;中国建设银行.VISA白金/钻石信用卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;建设银行.VISA准贷记金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人金卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA白金卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;工商银行.牡丹万事达国际借记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工普卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人普卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人金卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工白金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人白金卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;招商银行.MASTER信用卡&quot;, \n         &quot;招商银行.MASTER信用金卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡普通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人普卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;工商银行.牡丹万事达白金卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人金卡&quot;, \n         &quot;建设银行.乐当家金卡MASTER&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;建设银行.乐当家银卡MASTER&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;兴业银行.加菲猫信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;建设银行.MASTER准贷记卡&quot;, \n         &quot;建设银行.龙卡普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际金卡MASTER&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国光大银行.第十八届世界足球锦标赛纪念卡&quot;, \n         &quot;建设银行.MASTER准贷记金卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城万事达信用卡单位普卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;建设银行.乐当家白金卡MASTER&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡MASTER&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;建设银行.龙卡信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.中银万事达信用卡单位金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡MASTER&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;深圳农联社.信通卡&quot;, \n         &quot;D.F.S.I(备注1).发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;河北省农村信用社.信通卡&quot;, \n         &quot;韩亚银行.&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;葫芦岛市商业银行.一通卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;广州农村信用合作社联合社.麒麟储蓄卡&quot;, \n         &quot;广州农村信用合作社.麒麟储蓄卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;上海市农村信用合作社联合社.如意卡&quot;, \n         &quot;上海市农村信用合作社联社.如意卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.公司卡&quot;, \n         &quot;招商银行银行.公司卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.金穗海通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗惠农卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝贵宾卡(银)&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（金）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（白金）&quot;, \n         &quot;中国农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（单位卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（个人普卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（钻石）&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;浙江省农村信用社联合社.丰收卡&quot;, \n         &quot;浙江省农村信用社联社.丰收卡&quot;, \n         &quot;珠海农村信用合作社联社.信通卡&quot;, \n         &quot;珠海农村信用合作联社.信通卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;石嘴山城市信用社.麒麟卡&quot;, \n         &quot;张家口市商业银行.好运卡&quot;, \n         &quot;交通银行.太平洋卡&quot;, \n         &quot;中国工商银行.公务卡&quot;, \n         &quot;中国建设银行.公务卡&quot;, \n         &quot;大庆市商业银行.公务卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;郑州市商业银行.世纪一卡通&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人金卡&quot;, \n         &quot;工商银行.牡丹银联理财金卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n};\n    \n    public static String getNameOfBank(char[] charBin, int offset)\n    {\n        long longBin = 0;\n        \n        for(int i=0; i&lt; 6; i++)\n        {\n            longBin = (longBin*10) + (charBin[i+offset]-48);        \n        }\n        Log.e(&quot;sangfei.code&quot;, &quot;bankBin: &quot;+longBin);\n        \n        int index = binarySearch(bankBin, longBin);\n        \n        if(index==-1)\n        {\n            return &quot;磁条卡卡号:\\n&quot;;\n        }\n        return bankName[index]+&quot;:\\n&quot;;\n    }\n    \n    //二分查找方法\n    public static int binarySearch(long[] srcArray, long des){\n        int low = 0;\n        int high = srcArray.length-1;\n        while(low &lt;= high) \n        {\n            int middle = (low + high)/2;\n            if(des == srcArray[middle]) \n            { \n                return middle;\n            }\n            else if(des &lt;srcArray[middle]) \n            { \n                high = middle - 1; \n            }\n            else \n            { \n                low = middle + 1;\n            }\n        } \n        return -1;\n    }\n}</pre>\n\n使用例子:\n<pre class=\"brush:java;toolbar:false\">char[] cardNumber = {&#39;6&#39;, &#39;2&#39;, &#39;2&#39;, &#39;8&#39;, &#39;2&#39;, &#39;5&#39;, &#39;0&#39;};//卡号\nSring bankName = BankInfo.getNameOfBank(cardNumber, 0);//获取银行卡的信息</pre>","slug":"android根据银行卡卡号判断银行","published":1,"updated":"2016-03-18T04:02:36.084Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdmynr003ic4ub2e9xb3qx","content":"<p><span style=\"font-size: 18px;\">根据银行卡号判断是哪个银行的卡，依据是银行卡号的前6位数，称之为bin号。</span></p>\n<p><span style=\"font-size: 18px;\">我们把bin号转化为长整形，再把各个银行卡的bin号做成有序表。通过二分查找的方法，找到bin号在有序表的位置，然后读出银行卡的信息。</span><br><a id=\"more\"></a><br><span style=\"font-size: 18px;\">我把这个封装成一个java类：</span></p>\n<pre class=\"brush:java;toolbar:false\">public class BankInfo {\n    //BIN号\n    private final static long[] bankBin=\n    {\n        102033,\n        103000,\n        185720,\n        303781,\n        356827,\n        356828,\n        356833,\n        356835,\n        356837,\n        356838,\n        356839,\n        356840,\n        356885,\n        356886,\n        356887,\n        356888,\n        356889,\n        356890,\n        370246,\n        370247,\n        370248,\n        370249,\n        400360,\n        400937,\n        400938,\n        400939,\n        400940,\n        400941,\n        400942,\n        402658,\n        402673,\n        402791,\n        403361,\n        403391,\n        404117,\n        404157,\n        404171,\n        404172,\n        404173,\n        404174,\n        404738,\n        404739,\n        405512,\n        405512,\n        406252,\n        406254,\n        406365,\n        407405,\n        409665,\n        409666,\n        409667,\n        409668,\n        409669,\n        409670,\n        409671,\n        409672,\n        410062,\n        412962,\n        412963,\n        415599,\n        421317,\n        421349,\n        421393,\n        421437,\n        421865,\n        421869,\n        421870,\n        421871,\n        422160,\n        422161,\n        424106,\n        424107,\n        424108,\n        424109,\n        424110,\n        424111,\n        424902,\n        425862,\n        427010,\n        427018,\n        427019,\n        427020,\n        427028,\n        427029,\n        427038,\n        427039,\n        427062,\n        427064,\n        427571,\n        428911,\n        431502,\n        431502,\n        433666,\n        433670,\n        433680,\n        434061,\n        434062,\n        435744,\n        435745,\n        436718,\n        436728,\n        436738,\n        436742,\n        436745,\n        436748,\n        436768,\n        438088,\n        438125,\n        438126,\n        438588,\n        438589,\n        438600,\n        439188,\n        439225,\n        439227,\n        442729,\n        442730,\n        451289,\n        451291,\n        451804,\n        451804,\n        451810,\n        451810,\n        453242,\n        456351,\n        456418,\n        458060,\n        458060,\n        458071,\n        458071,\n        458123,\n        458124,\n        468203,\n        472067,\n        472068,\n        479228,\n        479229,\n        481699,\n        486466,\n        486493,\n        486494,\n        486497,\n        487013,\n        489592,\n        489734,\n        489735,\n        489736,\n        491020,\n        491020,\n        491031,\n        491032,\n        491040,\n        493427,\n        493878,\n        498451,\n        504923,\n        510529,\n        512315,\n        512316,\n        512411,\n        512412,\n        512425,\n        512431,\n        512466,\n        512695,\n        512732,\n        514906,\n        514957,\n        514958,\n        517636,\n        518212,\n        518364,\n        518378,\n        518379,\n        518474,\n        518475,\n        518476,\n        518710,\n        518718,\n        519412,\n        519498,\n        520082,\n        520108,\n        520131,\n        520152,\n        520169,\n        520194,\n        520382,\n        521899,\n        522153,\n        523036,\n        524011,\n        524047,\n        524070,\n        524091,\n        524094,\n        524864,\n        524865,\n        525498,\n        525745,\n        525746,\n        526410,\n        526855,\n        527414,\n        528020,\n        528931,\n        528948,\n        530970,\n        530980,\n        530980,\n        530990,\n        532420,\n        532430,\n        532450,\n        532458,\n        535910,\n        535910,\n        535918,\n        537830,\n        540297,\n        540838,\n        541068,\n        541709,\n        543159,\n        544033,\n        545619,\n        545623,\n        545947,\n        547628,\n        547648,\n        547766,\n        547766,\n        548259,\n        548844,\n        552245,\n        552288,\n        552534,\n        552587,\n        552599,\n        552742,\n        552794,\n        552801,\n        552853,\n        553131,\n        553242,\n        556610,\n        556617,\n        558360,\n        558730,\n        558808,\n        558809,\n        558868,\n        558868,\n        558894,\n        558895,\n        558916,\n        566666,\n        584016,\n        601100,\n        601101,\n        601121,\n        601122,\n        601123,\n        601124,\n        601125,\n        601126,\n        601127,\n        601128,\n        601131,\n        601136,\n        601137,\n        601138,\n        601140,\n        601142,\n        601143,\n        601144,\n        601145,\n        601146,\n        601147,\n        601148,\n        601149,\n        601174,\n        601177,\n        601178,\n        601179,\n        601186,\n        601187,\n        601188,\n        601189,\n        601382,\n        601382,\n        601428,\n        601428,\n        601428,\n        601428,\n        602907,\n        602907,\n        602969,\n        602969,\n        603128,\n        603128,\n        603367,\n        603367,\n        603445,\n        603445,\n        603506,\n        603506,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603602,\n        603602,\n        603694,\n        603694,\n        603708,\n        603708,\n        621021,\n        621201,\n        621977,\n        621977,\n        622126,\n        622126,\n        622127,\n        622127,\n        622127,\n        622127,\n        622128,\n        622128,\n        622129,\n        622129,\n        622131,\n        622131,\n        622132,\n        622132,\n        622133,\n        622133,\n        622134,\n        622134,\n        622135,\n        622135,\n        622136,\n        622136,\n        622137,\n        622137,\n        622138,\n        622138,\n        622139,\n        622139,\n        622140,\n        622140,\n        622141,\n        622141,\n        622143,\n        622143,\n        622146,\n        622146,\n        622147,\n        622147,\n        622148,\n        622148,\n        622149,\n        622149,\n        622150,\n        622150,\n        622151,\n        622151,\n        622152,\n        622152,\n        622153,\n        622153,\n        622154,\n        622154,\n        622155,\n        622155,\n        622156,\n        622156,\n        622165,\n        622165,\n        622166,\n        622166,\n        622168,\n        622168,\n        622169,\n        622169,\n        622178,\n        622178,\n        622179,\n        622179,\n        622184,\n        622184,\n        622188,\n        622188,\n        622199,\n        622199,\n        622200,\n        622200,\n        622202,\n        622202,\n        622203,\n        622203,\n        622208,\n        622208,\n        622210,\n        622210,\n        622211,\n        622211,\n        622212,\n        622212,\n        622213,\n        622213,\n        622214,\n        622214,\n        622215,\n        622215,\n        622220,\n        622220,\n        622225,\n        622225,\n        622230,\n        622230,\n        622235,\n        622235,\n        622240,\n        622240,\n        622245,\n        622245,\n        622250,\n        622250,\n        622251,\n        622251,\n        622252,\n        622252,\n        622253,\n        622253,\n        622254,\n        622254,\n        622258,\n        622258,\n        622259,\n        622259,\n        622260,\n        622260,\n        622261,\n        622261,\n        622280,\n        622280,\n        622291,\n        622291,\n        622292,\n        622292,\n        622301,\n        622301,\n        622302,\n        622302,\n        622303,\n        622303,\n        622305,\n        622305,\n        622307,\n        622307,\n        622308,\n        622308,\n        622310,\n        622310,\n        622311,\n        622311,\n        622312,\n        622312,\n        622316,\n        622316,\n        622318,\n        622318,\n        622319,\n        622319,\n        622321,\n        622321,\n        622322,\n        622322,\n        622323,\n        622323,\n        622324,\n        622324,\n        622325,\n        622325,\n        622327,\n        622327,\n        622328,\n        622328,\n        622329,\n        622329,\n        622331,\n        622331,\n        622332,\n        622332,\n        622333,\n        622333,\n        622335,\n        622335,\n        622336,\n        622336,\n        622337,\n        622337,\n        622338,\n        622338,\n        622339,\n        622339,\n        622340,\n        622340,\n        622341,\n        622341,\n        622342,\n        622342,\n        622343,\n        622343,\n        622345,\n        622345,\n        622346,\n        622346,\n        622347,\n        622347,\n        622348,\n        622348,\n        622349,\n        622349,\n        622350,\n        622350,\n        622351,\n        622351,\n        622352,\n        622352,\n        622353,\n        622353,\n        622355,\n        622355,\n        622358,\n        622358,\n        622359,\n        622359,\n        622360,\n        622360,\n        622361,\n        622361,\n        622362,\n        622362,\n        622363,\n        622363,\n        622365,\n        622365,\n        622366,\n        622366,\n        622367,\n        622367,\n        622368,\n        622368,\n        622369,\n        622369,\n        622370,\n        622370,\n        622371,\n        622371,\n        622373,\n        622373,\n        622375,\n        622375,\n        622376,\n        622376,\n        622377,\n        622377,\n        622378,\n        622378,\n        622379,\n        622379,\n        622382,\n        622382,\n        622383,\n        622383,\n        622384,\n        622384,\n        622385,\n        622385,\n        622386,\n        622386,\n        622387,\n        622387,\n        622388,\n        622388,\n        622389,\n        622389,\n        622391,\n        622391,\n        622392,\n        622392,\n        622393,\n        622393,\n        622394,\n        622394,\n        622395,\n        622395,\n        622396,\n        622396,\n        622397,\n        622397,\n        622398,\n        622399,\n        622399,\n        622400,\n        622400,\n        622406,\n        622406,\n        622407,\n        622407,\n        622411,\n        622411,\n        622412,\n        622412,\n        622413,\n        622413,\n        622415,\n        622415,\n        622418,\n        622418,\n        622420,\n        622420,\n        622421,\n        622421,\n        622422,\n        622422,\n        622423,\n        622423,\n        622425,\n        622425,\n        622426,\n        622426,\n        622427,\n        622427,\n        622428,\n        622428,\n        622429,\n        622429,\n        622432,\n        622432,\n        622434,\n        622434,\n        622435,\n        622435,\n        622436,\n        622436,\n        622439,\n        622439,\n        622440,\n        622440,\n        622441,\n        622441,\n        622442,\n        622442,\n        622443,\n        622443,\n        622447,\n        622447,\n        622448,\n        622448,\n        622449,\n        622449,\n        622450,\n        622450,\n        622451,\n        622451,\n        622452,\n        622452,\n        622453,\n        622453,\n        622456,\n        622456,\n        622459,\n        622459,\n        622462,\n        622462,\n        622463,\n        622463,\n        622466,\n        622466,\n        622467,\n        622467,\n        622468,\n        622468,\n        622470,\n        622470,\n        622471,\n        622471,\n        622472,\n        622472,\n        622476,\n        622476,\n        622477,\n        622477,\n        622478,\n        622478,\n        622481,\n        622481,\n        622485,\n        622485,\n        622486,\n        622486,\n        622487,\n        622487,\n        622487,\n        622487,\n        622488,\n        622488,\n        622489,\n        622489,\n        622490,\n        622490,\n        622490,\n        622490,\n        622491,\n        622491,\n        622491,\n        622491,\n        622492,\n        622492,\n        622492,\n        622492,\n        622493,\n        622493,\n        622495,\n        622495,\n        622496,\n        622496,\n        622498,\n        622498,\n        622499,\n        622499,\n        622500,\n        622500,\n        622506,\n        622506,\n        622509,\n        622509,\n        622510,\n        622510,\n        622516,\n        622516,\n        622517,\n        622517,\n        622518,\n        622518,\n        622519,\n        622519,\n        622521,\n        622521,\n        622522,\n        622522,\n        622523,\n        622523,\n        622525,\n        622525,\n        622526,\n        622526,\n        622538,\n        622538,\n        622546,\n        622546,\n        622547,\n        622547,\n        622548,\n        622548,\n        622549,\n        622549,\n        622550,\n        622550,\n        622561,\n        622561,\n        622562,\n        622562,\n        622563,\n        622563,\n        622575,\n        622575,\n        622576,\n        622576,\n        622577,\n        622577,\n        622578,\n        622578,\n        622579,\n        622579,\n        622580,\n        622580,\n        622581,\n        622581,\n        622582,\n        622582,\n        622588,\n        622588,\n        622598,\n        622598,\n        622600,\n        622600,\n        622601,\n        622601,\n        622602,\n        622602,\n        622603,\n        622603,\n        622615,\n        622615,\n        622617,\n        622617,\n        622619,\n        622619,\n        622622,\n        622622,\n        622630,\n        622630,\n        622631,\n        622631,\n        622632,\n        622632,\n        622633,\n        622633,\n        622650,\n        622650,\n        622655,\n        622655,\n        622658,\n        622658,\n        622660,\n        622660,\n        622678,\n        622678,\n        622679,\n        622679,\n        622680,\n        622680,\n        622681,\n        622681,\n        622682,\n        622682,\n        622684,\n        622684,\n        622688,\n        622688,\n        622689,\n        622689,\n        622690,\n        622690,\n        622691,\n        622691,\n        622692,\n        622692,\n        622696,\n        622696,\n        622698,\n        622698,\n        622700,\n        622700,\n        622725,\n        622725,\n        622728,\n        622728,\n        622750,\n        622750,\n        622751,\n        622751,\n        622752,\n        622752,\n        622753,\n        622753,\n        622754,\n        622755,\n        622755,\n        622756,\n        622756,\n        622757,\n        622757,\n        622758,\n        622758,\n        622759,\n        622759,\n        622760,\n        622760,\n        622761,\n        622761,\n        622762,\n        622762,\n        622763,\n        622763,\n        622770,\n        622770,\n        622777,\n        622777,\n        622821,\n        622821,\n        622822,\n        622822,\n        622823,\n        622823,\n        622824,\n        622824,\n        622825,\n        622825,\n        622826,\n        622826,\n        622827,\n        622836,\n        622836,\n        622837,\n        622837,\n        622840,\n        622840,\n        622841,\n        622842,\n        622843,\n        622844,\n        622844,\n        622845,\n        622845,\n        622846,\n        622846,\n        622847,\n        622847,\n        622848,\n        622848,\n        622849,\n        622855,\n        622855,\n        622856,\n        622856,\n        622857,\n        622857,\n        622858,\n        622858,\n        622859,\n        622859,\n        622860,\n        622860,\n        622861,\n        622861,\n        622864,\n        622864,\n        622865,\n        622865,\n        622866,\n        622866,\n        622867,\n        622867,\n        622869,\n        622869,\n        622870,\n        622870,\n        622871,\n        622871,\n        622877,\n        622877,\n        622878,\n        622878,\n        622879,\n        622879,\n        622880,\n        622880,\n        622881,\n        622881,\n        622882,\n        622882,\n        622884,\n        622884,\n        622885,\n        622885,\n        622886,\n        622886,\n        622891,\n        622891,\n        622892,\n        622892,\n        622893,\n        622893,\n        622895,\n        622895,\n        622897,\n        622897,\n        622898,\n        622898,\n        622900,\n        622900,\n        622901,\n        622901,\n        622908,\n        622908,\n        622909,\n        622909,\n        622940,\n        622982,\n        628218,\n        628288,\n        628366,\n        628368,\n        650600,\n        650600,\n        650700,\n        650700,\n        650800,\n        650800,\n        650900,\n        650900,\n        682900,\n        682900,\n        683970,\n        683970,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        690755,\n        690755,\n        690755,\n        690755,\n        694301,\n        694301,\n        695800,\n        695800,\n        843010,\n        843010,\n        843360,\n        843360,\n        843420,\n        843420,\n        843610,\n        843610,\n        843730,\n        843730,\n        843800,\n        843800,\n        843850,\n        843850,\n        843900,\n        843900,\n        870000,\n        870000,\n        870100,\n        870100,\n        870300,\n        870300,\n        870400,\n        870400,\n        870500,\n        870500,\n        888000,\n        888000,\n        940056,\n        955880,\n        955881,\n        955882,\n        955888,\n        984301,\n        998800,\n};\n     //&quot;发卡行.卡种名称&quot;, \n    private static final String[] bankName = {\n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;农业银行.金穗借记卡&quot;, \n         &quot;昆明农联社.金碧卡&quot;, \n         &quot;中国光大银行.阳光爱心卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人金卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人普卡&quot;, \n         &quot;中国银行.中银JCB卡金卡&quot;, \n         &quot;中国银行.中银JCB卡普卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;工商银行.牡丹运通卡金卡&quot;, \n         &quot;工商银行.牡丹运通卡普通卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;招商银行.两地一卡通&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA普通卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA金卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.中银威士信用卡员工普卡&quot;, \n         &quot;中国银行.中银威士信用卡个人普卡&quot;, \n         &quot;中国银行.中银威士信用卡员工金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人金卡&quot;, \n         &quot;中国银行.中银威士信用卡员工白金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人白金卡&quot;, \n         &quot;中国银行.中银威士信用卡商务白金卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;招商银行银行.招商银行银行国际卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;北京银行.京卡双币种国际借记卡&quot;, \n         &quot;建设银行.乐当家银卡VISA&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;北京银行.京卡贵宾金卡&quot;, \n         &quot;北京银行.京卡贵宾白金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-白金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国民生银行.民生国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;建设银行.乐当家金卡VISA&quot;, \n         &quot;建设银行.乐当家白金卡VISA&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡VISA&quot;, \n         &quot;建设银行.龙卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;建设银行.龙卡国际普通卡VISA&quot;, \n         &quot;建设银行.龙卡国际金卡VISA&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.中银奥运信用卡个人卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国工商银行.牡丹VISA白金卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;上海银行.上海申卡IC&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.VISA信用卡&quot;, \n         &quot;招商银行.VISA商务信用卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;兴业银行.VISA信用卡&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人金卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;建设银行.VISA准贷记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;上海浦东发展银行.浦发银行VISA年青卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;中国光大银行.阳光白金信用卡&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;兴业银行.VISA商务普卡&quot;, \n         &quot;兴业银行.VISA商务金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;中国建设银行.VISA白金/钻石信用卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;建设银行.VISA准贷记金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人金卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA白金卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;工商银行.牡丹万事达国际借记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工普卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人普卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人金卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工白金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人白金卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;招商银行.MASTER信用卡&quot;, \n         &quot;招商银行.MASTER信用金卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡普通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人普卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;工商银行.牡丹万事达白金卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人金卡&quot;, \n         &quot;建设银行.乐当家金卡MASTER&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;建设银行.乐当家银卡MASTER&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;兴业银行.加菲猫信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;建设银行.MASTER准贷记卡&quot;, \n         &quot;建设银行.龙卡普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际金卡MASTER&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国光大银行.第十八届世界足球锦标赛纪念卡&quot;, \n         &quot;建设银行.MASTER准贷记金卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城万事达信用卡单位普卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;建设银行.乐当家白金卡MASTER&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡MASTER&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;建设银行.龙卡信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.中银万事达信用卡单位金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡MASTER&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;深圳农联社.信通卡&quot;, \n         &quot;D.F.S.I(备注1).发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;河北省农村信用社.信通卡&quot;, \n         &quot;韩亚银行.&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;葫芦岛市商业银行.一通卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;广州农村信用合作社联合社.麒麟储蓄卡&quot;, \n         &quot;广州农村信用合作社.麒麟储蓄卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;上海市农村信用合作社联合社.如意卡&quot;, \n         &quot;上海市农村信用合作社联社.如意卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.公司卡&quot;, \n         &quot;招商银行银行.公司卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.金穗海通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗惠农卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝贵宾卡(银)&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（金）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（白金）&quot;, \n         &quot;中国农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（单位卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（个人普卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（钻石）&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;浙江省农村信用社联合社.丰收卡&quot;, \n         &quot;浙江省农村信用社联社.丰收卡&quot;, \n         &quot;珠海农村信用合作社联社.信通卡&quot;, \n         &quot;珠海农村信用合作联社.信通卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;石嘴山城市信用社.麒麟卡&quot;, \n         &quot;张家口市商业银行.好运卡&quot;, \n         &quot;交通银行.太平洋卡&quot;, \n         &quot;中国工商银行.公务卡&quot;, \n         &quot;中国建设银行.公务卡&quot;, \n         &quot;大庆市商业银行.公务卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;郑州市商业银行.世纪一卡通&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人金卡&quot;, \n         &quot;工商银行.牡丹银联理财金卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n};\n\n    public static String getNameOfBank(char[] charBin, int offset)\n    {\n        long longBin = 0;\n\n        for(int i=0; i&lt; 6; i++)\n        {\n            longBin = (longBin*10) + (charBin[i+offset]-48);        \n        }\n        Log.e(&quot;sangfei.code&quot;, &quot;bankBin: &quot;+longBin);\n\n        int index = binarySearch(bankBin, longBin);\n\n        if(index==-1)\n        {\n            return &quot;磁条卡卡号:\\n&quot;;\n        }\n        return bankName[index]+&quot;:\\n&quot;;\n    }\n\n    //二分查找方法\n    public static int binarySearch(long[] srcArray, long des){\n        int low = 0;\n        int high = srcArray.length-1;\n        while(low &lt;= high) \n        {\n            int middle = (low + high)/2;\n            if(des == srcArray[middle]) \n            { \n                return middle;\n            }\n            else if(des &lt;srcArray[middle]) \n            { \n                high = middle - 1; \n            }\n            else \n            { \n                low = middle + 1;\n            }\n        } \n        return -1;\n    }\n}</pre>\n\n<p>使用例子:</p>\n<pre class=\"brush:java;toolbar:false\">char[] cardNumber = {&#39;6&#39;, &#39;2&#39;, &#39;2&#39;, &#39;8&#39;, &#39;2&#39;, &#39;5&#39;, &#39;0&#39;};//卡号\nSring bankName = BankInfo.getNameOfBank(cardNumber, 0);//获取银行卡的信息</pre>","excerpt":"<p><span style=\"font-size: 18px;\">根据银行卡号判断是哪个银行的卡，依据是银行卡号的前6位数，称之为bin号。</span></p>\n<p><span style=\"font-size: 18px;\">我们把bin号转化为长整形，再把各个银行卡的bin号做成有序表。通过二分查找的方法，找到bin号在有序表的位置，然后读出银行卡的信息。</span><br>","more":"<br><span style=\"font-size: 18px;\">我把这个封装成一个java类：</span></p>\n<pre class=\"brush:java;toolbar:false\">public class BankInfo {\n    //BIN号\n    private final static long[] bankBin=\n    {\n        102033,\n        103000,\n        185720,\n        303781,\n        356827,\n        356828,\n        356833,\n        356835,\n        356837,\n        356838,\n        356839,\n        356840,\n        356885,\n        356886,\n        356887,\n        356888,\n        356889,\n        356890,\n        370246,\n        370247,\n        370248,\n        370249,\n        400360,\n        400937,\n        400938,\n        400939,\n        400940,\n        400941,\n        400942,\n        402658,\n        402673,\n        402791,\n        403361,\n        403391,\n        404117,\n        404157,\n        404171,\n        404172,\n        404173,\n        404174,\n        404738,\n        404739,\n        405512,\n        405512,\n        406252,\n        406254,\n        406365,\n        407405,\n        409665,\n        409666,\n        409667,\n        409668,\n        409669,\n        409670,\n        409671,\n        409672,\n        410062,\n        412962,\n        412963,\n        415599,\n        421317,\n        421349,\n        421393,\n        421437,\n        421865,\n        421869,\n        421870,\n        421871,\n        422160,\n        422161,\n        424106,\n        424107,\n        424108,\n        424109,\n        424110,\n        424111,\n        424902,\n        425862,\n        427010,\n        427018,\n        427019,\n        427020,\n        427028,\n        427029,\n        427038,\n        427039,\n        427062,\n        427064,\n        427571,\n        428911,\n        431502,\n        431502,\n        433666,\n        433670,\n        433680,\n        434061,\n        434062,\n        435744,\n        435745,\n        436718,\n        436728,\n        436738,\n        436742,\n        436745,\n        436748,\n        436768,\n        438088,\n        438125,\n        438126,\n        438588,\n        438589,\n        438600,\n        439188,\n        439225,\n        439227,\n        442729,\n        442730,\n        451289,\n        451291,\n        451804,\n        451804,\n        451810,\n        451810,\n        453242,\n        456351,\n        456418,\n        458060,\n        458060,\n        458071,\n        458071,\n        458123,\n        458124,\n        468203,\n        472067,\n        472068,\n        479228,\n        479229,\n        481699,\n        486466,\n        486493,\n        486494,\n        486497,\n        487013,\n        489592,\n        489734,\n        489735,\n        489736,\n        491020,\n        491020,\n        491031,\n        491032,\n        491040,\n        493427,\n        493878,\n        498451,\n        504923,\n        510529,\n        512315,\n        512316,\n        512411,\n        512412,\n        512425,\n        512431,\n        512466,\n        512695,\n        512732,\n        514906,\n        514957,\n        514958,\n        517636,\n        518212,\n        518364,\n        518378,\n        518379,\n        518474,\n        518475,\n        518476,\n        518710,\n        518718,\n        519412,\n        519498,\n        520082,\n        520108,\n        520131,\n        520152,\n        520169,\n        520194,\n        520382,\n        521899,\n        522153,\n        523036,\n        524011,\n        524047,\n        524070,\n        524091,\n        524094,\n        524864,\n        524865,\n        525498,\n        525745,\n        525746,\n        526410,\n        526855,\n        527414,\n        528020,\n        528931,\n        528948,\n        530970,\n        530980,\n        530980,\n        530990,\n        532420,\n        532430,\n        532450,\n        532458,\n        535910,\n        535910,\n        535918,\n        537830,\n        540297,\n        540838,\n        541068,\n        541709,\n        543159,\n        544033,\n        545619,\n        545623,\n        545947,\n        547628,\n        547648,\n        547766,\n        547766,\n        548259,\n        548844,\n        552245,\n        552288,\n        552534,\n        552587,\n        552599,\n        552742,\n        552794,\n        552801,\n        552853,\n        553131,\n        553242,\n        556610,\n        556617,\n        558360,\n        558730,\n        558808,\n        558809,\n        558868,\n        558868,\n        558894,\n        558895,\n        558916,\n        566666,\n        584016,\n        601100,\n        601101,\n        601121,\n        601122,\n        601123,\n        601124,\n        601125,\n        601126,\n        601127,\n        601128,\n        601131,\n        601136,\n        601137,\n        601138,\n        601140,\n        601142,\n        601143,\n        601144,\n        601145,\n        601146,\n        601147,\n        601148,\n        601149,\n        601174,\n        601177,\n        601178,\n        601179,\n        601186,\n        601187,\n        601188,\n        601189,\n        601382,\n        601382,\n        601428,\n        601428,\n        601428,\n        601428,\n        602907,\n        602907,\n        602969,\n        602969,\n        603128,\n        603128,\n        603367,\n        603367,\n        603445,\n        603445,\n        603506,\n        603506,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603601,\n        603602,\n        603602,\n        603694,\n        603694,\n        603708,\n        603708,\n        621021,\n        621201,\n        621977,\n        621977,\n        622126,\n        622126,\n        622127,\n        622127,\n        622127,\n        622127,\n        622128,\n        622128,\n        622129,\n        622129,\n        622131,\n        622131,\n        622132,\n        622132,\n        622133,\n        622133,\n        622134,\n        622134,\n        622135,\n        622135,\n        622136,\n        622136,\n        622137,\n        622137,\n        622138,\n        622138,\n        622139,\n        622139,\n        622140,\n        622140,\n        622141,\n        622141,\n        622143,\n        622143,\n        622146,\n        622146,\n        622147,\n        622147,\n        622148,\n        622148,\n        622149,\n        622149,\n        622150,\n        622150,\n        622151,\n        622151,\n        622152,\n        622152,\n        622153,\n        622153,\n        622154,\n        622154,\n        622155,\n        622155,\n        622156,\n        622156,\n        622165,\n        622165,\n        622166,\n        622166,\n        622168,\n        622168,\n        622169,\n        622169,\n        622178,\n        622178,\n        622179,\n        622179,\n        622184,\n        622184,\n        622188,\n        622188,\n        622199,\n        622199,\n        622200,\n        622200,\n        622202,\n        622202,\n        622203,\n        622203,\n        622208,\n        622208,\n        622210,\n        622210,\n        622211,\n        622211,\n        622212,\n        622212,\n        622213,\n        622213,\n        622214,\n        622214,\n        622215,\n        622215,\n        622220,\n        622220,\n        622225,\n        622225,\n        622230,\n        622230,\n        622235,\n        622235,\n        622240,\n        622240,\n        622245,\n        622245,\n        622250,\n        622250,\n        622251,\n        622251,\n        622252,\n        622252,\n        622253,\n        622253,\n        622254,\n        622254,\n        622258,\n        622258,\n        622259,\n        622259,\n        622260,\n        622260,\n        622261,\n        622261,\n        622280,\n        622280,\n        622291,\n        622291,\n        622292,\n        622292,\n        622301,\n        622301,\n        622302,\n        622302,\n        622303,\n        622303,\n        622305,\n        622305,\n        622307,\n        622307,\n        622308,\n        622308,\n        622310,\n        622310,\n        622311,\n        622311,\n        622312,\n        622312,\n        622316,\n        622316,\n        622318,\n        622318,\n        622319,\n        622319,\n        622321,\n        622321,\n        622322,\n        622322,\n        622323,\n        622323,\n        622324,\n        622324,\n        622325,\n        622325,\n        622327,\n        622327,\n        622328,\n        622328,\n        622329,\n        622329,\n        622331,\n        622331,\n        622332,\n        622332,\n        622333,\n        622333,\n        622335,\n        622335,\n        622336,\n        622336,\n        622337,\n        622337,\n        622338,\n        622338,\n        622339,\n        622339,\n        622340,\n        622340,\n        622341,\n        622341,\n        622342,\n        622342,\n        622343,\n        622343,\n        622345,\n        622345,\n        622346,\n        622346,\n        622347,\n        622347,\n        622348,\n        622348,\n        622349,\n        622349,\n        622350,\n        622350,\n        622351,\n        622351,\n        622352,\n        622352,\n        622353,\n        622353,\n        622355,\n        622355,\n        622358,\n        622358,\n        622359,\n        622359,\n        622360,\n        622360,\n        622361,\n        622361,\n        622362,\n        622362,\n        622363,\n        622363,\n        622365,\n        622365,\n        622366,\n        622366,\n        622367,\n        622367,\n        622368,\n        622368,\n        622369,\n        622369,\n        622370,\n        622370,\n        622371,\n        622371,\n        622373,\n        622373,\n        622375,\n        622375,\n        622376,\n        622376,\n        622377,\n        622377,\n        622378,\n        622378,\n        622379,\n        622379,\n        622382,\n        622382,\n        622383,\n        622383,\n        622384,\n        622384,\n        622385,\n        622385,\n        622386,\n        622386,\n        622387,\n        622387,\n        622388,\n        622388,\n        622389,\n        622389,\n        622391,\n        622391,\n        622392,\n        622392,\n        622393,\n        622393,\n        622394,\n        622394,\n        622395,\n        622395,\n        622396,\n        622396,\n        622397,\n        622397,\n        622398,\n        622399,\n        622399,\n        622400,\n        622400,\n        622406,\n        622406,\n        622407,\n        622407,\n        622411,\n        622411,\n        622412,\n        622412,\n        622413,\n        622413,\n        622415,\n        622415,\n        622418,\n        622418,\n        622420,\n        622420,\n        622421,\n        622421,\n        622422,\n        622422,\n        622423,\n        622423,\n        622425,\n        622425,\n        622426,\n        622426,\n        622427,\n        622427,\n        622428,\n        622428,\n        622429,\n        622429,\n        622432,\n        622432,\n        622434,\n        622434,\n        622435,\n        622435,\n        622436,\n        622436,\n        622439,\n        622439,\n        622440,\n        622440,\n        622441,\n        622441,\n        622442,\n        622442,\n        622443,\n        622443,\n        622447,\n        622447,\n        622448,\n        622448,\n        622449,\n        622449,\n        622450,\n        622450,\n        622451,\n        622451,\n        622452,\n        622452,\n        622453,\n        622453,\n        622456,\n        622456,\n        622459,\n        622459,\n        622462,\n        622462,\n        622463,\n        622463,\n        622466,\n        622466,\n        622467,\n        622467,\n        622468,\n        622468,\n        622470,\n        622470,\n        622471,\n        622471,\n        622472,\n        622472,\n        622476,\n        622476,\n        622477,\n        622477,\n        622478,\n        622478,\n        622481,\n        622481,\n        622485,\n        622485,\n        622486,\n        622486,\n        622487,\n        622487,\n        622487,\n        622487,\n        622488,\n        622488,\n        622489,\n        622489,\n        622490,\n        622490,\n        622490,\n        622490,\n        622491,\n        622491,\n        622491,\n        622491,\n        622492,\n        622492,\n        622492,\n        622492,\n        622493,\n        622493,\n        622495,\n        622495,\n        622496,\n        622496,\n        622498,\n        622498,\n        622499,\n        622499,\n        622500,\n        622500,\n        622506,\n        622506,\n        622509,\n        622509,\n        622510,\n        622510,\n        622516,\n        622516,\n        622517,\n        622517,\n        622518,\n        622518,\n        622519,\n        622519,\n        622521,\n        622521,\n        622522,\n        622522,\n        622523,\n        622523,\n        622525,\n        622525,\n        622526,\n        622526,\n        622538,\n        622538,\n        622546,\n        622546,\n        622547,\n        622547,\n        622548,\n        622548,\n        622549,\n        622549,\n        622550,\n        622550,\n        622561,\n        622561,\n        622562,\n        622562,\n        622563,\n        622563,\n        622575,\n        622575,\n        622576,\n        622576,\n        622577,\n        622577,\n        622578,\n        622578,\n        622579,\n        622579,\n        622580,\n        622580,\n        622581,\n        622581,\n        622582,\n        622582,\n        622588,\n        622588,\n        622598,\n        622598,\n        622600,\n        622600,\n        622601,\n        622601,\n        622602,\n        622602,\n        622603,\n        622603,\n        622615,\n        622615,\n        622617,\n        622617,\n        622619,\n        622619,\n        622622,\n        622622,\n        622630,\n        622630,\n        622631,\n        622631,\n        622632,\n        622632,\n        622633,\n        622633,\n        622650,\n        622650,\n        622655,\n        622655,\n        622658,\n        622658,\n        622660,\n        622660,\n        622678,\n        622678,\n        622679,\n        622679,\n        622680,\n        622680,\n        622681,\n        622681,\n        622682,\n        622682,\n        622684,\n        622684,\n        622688,\n        622688,\n        622689,\n        622689,\n        622690,\n        622690,\n        622691,\n        622691,\n        622692,\n        622692,\n        622696,\n        622696,\n        622698,\n        622698,\n        622700,\n        622700,\n        622725,\n        622725,\n        622728,\n        622728,\n        622750,\n        622750,\n        622751,\n        622751,\n        622752,\n        622752,\n        622753,\n        622753,\n        622754,\n        622755,\n        622755,\n        622756,\n        622756,\n        622757,\n        622757,\n        622758,\n        622758,\n        622759,\n        622759,\n        622760,\n        622760,\n        622761,\n        622761,\n        622762,\n        622762,\n        622763,\n        622763,\n        622770,\n        622770,\n        622777,\n        622777,\n        622821,\n        622821,\n        622822,\n        622822,\n        622823,\n        622823,\n        622824,\n        622824,\n        622825,\n        622825,\n        622826,\n        622826,\n        622827,\n        622836,\n        622836,\n        622837,\n        622837,\n        622840,\n        622840,\n        622841,\n        622842,\n        622843,\n        622844,\n        622844,\n        622845,\n        622845,\n        622846,\n        622846,\n        622847,\n        622847,\n        622848,\n        622848,\n        622849,\n        622855,\n        622855,\n        622856,\n        622856,\n        622857,\n        622857,\n        622858,\n        622858,\n        622859,\n        622859,\n        622860,\n        622860,\n        622861,\n        622861,\n        622864,\n        622864,\n        622865,\n        622865,\n        622866,\n        622866,\n        622867,\n        622867,\n        622869,\n        622869,\n        622870,\n        622870,\n        622871,\n        622871,\n        622877,\n        622877,\n        622878,\n        622878,\n        622879,\n        622879,\n        622880,\n        622880,\n        622881,\n        622881,\n        622882,\n        622882,\n        622884,\n        622884,\n        622885,\n        622885,\n        622886,\n        622886,\n        622891,\n        622891,\n        622892,\n        622892,\n        622893,\n        622893,\n        622895,\n        622895,\n        622897,\n        622897,\n        622898,\n        622898,\n        622900,\n        622900,\n        622901,\n        622901,\n        622908,\n        622908,\n        622909,\n        622909,\n        622940,\n        622982,\n        628218,\n        628288,\n        628366,\n        628368,\n        650600,\n        650600,\n        650700,\n        650700,\n        650800,\n        650800,\n        650900,\n        650900,\n        682900,\n        682900,\n        683970,\n        683970,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        685800,\n        690755,\n        690755,\n        690755,\n        690755,\n        694301,\n        694301,\n        695800,\n        695800,\n        843010,\n        843010,\n        843360,\n        843360,\n        843420,\n        843420,\n        843610,\n        843610,\n        843730,\n        843730,\n        843800,\n        843800,\n        843850,\n        843850,\n        843900,\n        843900,\n        870000,\n        870000,\n        870100,\n        870100,\n        870300,\n        870300,\n        870400,\n        870400,\n        870500,\n        870500,\n        888000,\n        888000,\n        940056,\n        955880,\n        955881,\n        955882,\n        955888,\n        984301,\n        998800,\n};\n     //&quot;发卡行.卡种名称&quot;, \n    private static final String[] bankName = {\n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;农业银行.金穗借记卡&quot;, \n         &quot;昆明农联社.金碧卡&quot;, \n         &quot;中国光大银行.阳光爱心卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人金卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡个人普卡&quot;, \n         &quot;中国银行.中银JCB卡金卡&quot;, \n         &quot;中国银行.中银JCB卡普卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;工商银行.牡丹运通卡金卡&quot;, \n         &quot;工商银行.牡丹运通卡普通卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中国工商银行.牡丹运通卡金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;招商银行.两地一卡通&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA普通卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA金卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;交通银行.太平洋互连卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;中国光大银行.阳光信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.中银威士信用卡员工普卡&quot;, \n         &quot;中国银行.中银威士信用卡个人普卡&quot;, \n         &quot;中国银行.中银威士信用卡员工金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人金卡&quot;, \n         &quot;中国银行.中银威士信用卡员工白金卡&quot;, \n         &quot;中国银行.中银威士信用卡个人白金卡&quot;, \n         &quot;中国银行.中银威士信用卡商务白金卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;招商银行银行.招商银行银行国际卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;深圳发展银行.发展借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;北京银行.京卡双币种国际借记卡&quot;, \n         &quot;建设银行.乐当家银卡VISA&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;北京银行.京卡贵宾金卡&quot;, \n         &quot;北京银行.京卡贵宾白金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-白金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国民生银行.民生国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;华夏.华夏卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;建设银行.乐当家金卡VISA&quot;, \n         &quot;建设银行.乐当家白金卡VISA&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;深圳发展银行.沃尔玛百分卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡VISA&quot;, \n         &quot;建设银行.龙卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡VISA&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;建设银行.龙卡国际普通卡VISA&quot;, \n         &quot;建设银行.龙卡国际金卡VISA&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.中银奥运信用卡个人卡&quot;, \n         &quot;工商银行.牡丹VISA信用卡&quot;, \n         &quot;中国工商银行.牡丹VISA白金卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;兴业银行.兴业智能卡&quot;, \n         &quot;上海银行.上海申卡IC&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.VISA信用卡&quot;, \n         &quot;招商银行.VISA商务信用卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;中信实业银行.中信国际借记卡&quot;, \n         &quot;兴业银行.VISA信用卡&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人金卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;建设银行.VISA准贷记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;上海浦东发展银行.浦发银行VISA年青卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;工商银行.牡丹贷记卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;交通银行.太平洋双币贷记卡VISA&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;民生银行.民生国际卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;中国光大银行.阳光白金信用卡&quot;, \n         &quot;上海银行.申卡贷记卡&quot;, \n         &quot;兴业银行.VISA商务普卡&quot;, \n         &quot;兴业银行.VISA商务金卡&quot;, \n         &quot;中国光大银行.阳光商旅信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;中国建设银行.VISA白金/钻石信用卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;中国工商银行.牡丹欧元卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;建设银行.VISA准贷记金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人金卡&quot;, \n         &quot;上海浦东发展银行.上海浦东发展银行信用卡VISA白金卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;工商银行.牡丹万事达国际借记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工普卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人普卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人金卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(英镑卡)-个人金卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;中国银行.中银万事达信用卡员工白金卡&quot;, \n         &quot;中国银行.中银万事达信用卡个人白金卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;招商银行.MASTER信用卡&quot;, \n         &quot;招商银行.MASTER信用金卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡普通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中信实业银行.中信贷记卡&quot;, \n         &quot;上海银行.双币种申卡贷记卡金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;宁波市商业银行.汇通国际卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城国际卡(欧元卡)-个人普卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;招商银行.招商银行银行国际卡&quot;, \n         &quot;工商银行.牡丹万事达白金卡&quot;, \n         &quot;兴业银行.万事达信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人金卡&quot;, \n         &quot;建设银行.乐当家金卡MASTER&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国工商银行.牡丹海航信用卡个人普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;建设银行.乐当家银卡MASTER&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;兴业银行.加菲猫信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹信用卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;建设银行.MASTER准贷记卡&quot;, \n         &quot;建设银行.龙卡普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际普通卡MASTER&quot;, \n         &quot;建设银行.龙卡国际金卡MASTER&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;农业银行.金穗信用卡&quot;, \n         &quot;交通银行.太平洋信用卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人普卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-个人金卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;中国光大银行.第十八届世界足球锦标赛纪念卡&quot;, \n         &quot;建设银行.MASTER准贷记金卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;招商银行.万事达信用卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务普卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务普卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城万事达信用卡单位普卡&quot;, \n         &quot;工商银行.国际借记卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;建设银行.乐当家白金卡MASTER&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行银行信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡普通卡MASTER&quot;, \n         &quot;交通银行.太平洋双币贷记卡MasterCard&quot;, \n         &quot;中国银行.长城公务卡&quot;, \n         &quot;建设银行.龙卡信用卡&quot;, \n         &quot;民生银行.民生贷记卡&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;工商银行.牡丹万事达信用卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;中国银行.长城国际卡(港币卡)-商务金卡&quot;, \n         &quot;中国银行.长城国际卡(美元卡)-商务金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.中银万事达信用卡单位金卡&quot;, \n         &quot;广东发展银行.广发万事达信用卡&quot;, \n         &quot;建设银行.龙卡贷记卡公司卡金卡MASTER&quot;, \n         &quot;中信实业银行.中信MASTERCARD人民币+美金双币贷记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;深圳农联社.信通卡&quot;, \n         &quot;D.F.S.I(备注1).发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;D.F.S.I.发现卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;中国银行.长城电子借记卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;交通银行.太平洋万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;深圳商业银行.万事顺卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;北京银行.京卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;南京市商业银行.梅花卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;杭州商业银行.西湖卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;苏州市商业银行.姑苏卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;徽商银行合肥分行.黄山卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;绍兴商业银行.兰花卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;常熟农村商业银行.粒金卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;大连商业银行.北方明珠卡&quot;, \n         &quot;河北省农村信用社.信通卡&quot;, \n         &quot;韩亚银行.&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;温州商业银行.金鹿卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;阜新市商业银行.金通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;厦门市农村信用合作社.万通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳农信社.信通卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;深圳市农村信用合作社联合社.信通商务卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;淮安市商业银行.九州借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;嘉兴市商业银行.南湖借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;贵阳市商业银行.甲秀银联借记卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;重庆市商业银行.长江卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;成都商业银行.锦程卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;西安市商业银行.福瑞卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;徽商银行芜湖分行.黄山卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;北京农联社.信通卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;兰州市商业银行.敦煌国际卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;廊坊市商业银行.银星卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;泰隆城市信用社.泰隆卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲借记卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;青岛商行.金桥卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;呼市商业银行.百灵卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡金卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;上海银行.人民币申卡贷记卡普通卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;成都市商业银行.锦程卡定活一卡通&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;深圳市商业银行.深圳市商业银行信用卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;包头市商业银行.包头市商业银行借记卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;中国建设银行.龙卡人民币信用金卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;湖南省农村信用社联合社.福祥借记卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;吉林市商业银行.信用卡&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;福建省农村信用社联合社.万通&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;国家邮政局.绿卡银联标准卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.灵通卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.E时代卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.理财金卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.准贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;中国工商银行.贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行股份有限公司太平洋双币信用卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交行太平洋卡中心.太平洋人民币贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币准贷记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;交通银行.太平洋人民币借记卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;建设银行.622280银联储蓄卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;湖州市商业银行.百合卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;佛山市禅城区农村信用联社.信通卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花贷记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;南京市商业银行.梅花借记卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;九江市商业银行.庐山卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;昆明商业银行.春城卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;西宁市商业银行.三江银行卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;淄博市商业银行.金达借记卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;徐州市郊农村信用合作联社.信通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;宁波市商业银行.汇通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;山东农村信用联合社.信通卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;台州市商业银行.大唐贷记卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;顺德农信社.恒通卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;常熟农村商业银行.粒金借记卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;江苏农信.圆鼎卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;武汉市商业银行.九通卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;徽商银行马鞍山分行.黄山卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;东莞农村信用合作社.信通卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市农村信用社.信通借记卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;天津市商业银行.津卡&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;张家港市农村商业银行.一卡通&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;东莞市商业银行.万顺通卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;南宁市商业银行.桂花卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;包头市商业银行.雄鹰卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;连云港市商业银行.金猴神通借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;焦作市商业银行.月季借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;鄞州农村合作银行.蜜蜂借记卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;徽商银行淮北分行.黄山卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;江阴农村商业银行.合作借记卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;攀枝花市商业银行.攀枝花卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;佛山市三水区农村信用合作社.信通卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;成都农信社.天府借记卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡金卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.人民币信用卡普通卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;中国银行.中银卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡金卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.人民币信用卡普通卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;南洋商业银行.中银卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡金卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.人民币信用卡普通卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;集友银行.中银卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;沧州农信社.信通卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;临沂市商业银行.沂蒙卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;香港上海汇丰银行有限公司.人民币金卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;中山市农村信用合作社.信通卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;珠海市商业银行.万事顺卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;东亚银行有限公司.电子网络人民币卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;徽商银行安庆分行.黄山卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;绵阳市商业银行.科技城卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;昆明市农村信用联社.金碧一卡通&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;泉州市商业银行.海峡银联卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;花旗银行有限公司.花旗人民币信用卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡普通卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;大新银行有限公司.人民币借记卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币信用卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;恒生银行有限公司.恒生人民币白金卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;济南市商业银行.齐鲁卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;美国银行.人民币卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;恒丰银行.九州借记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;大连市商业银行.大连市商业银行贷记卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;上海商业银行.人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;福州市商业银行.榕城卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;宁波鄞州农村合作银行.蜜蜂贷记卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;潍坊商业银行.鸢都卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;泸州市商业银行.酒城卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;厦门市商业银行.银鹭借记卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;镇江市商业银行.金山灵通卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;大同市商业银行.云冈卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.三峡卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;宜昌市商业银行.信用卡&quot;, \n         &quot;葫芦岛市商业银行.一通卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;辽阳市商业银行.新兴卡&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;营口市商业银行.辽河一卡通&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;香港上海汇丰银行有限公司.ATM Card&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;威海市商业银行.通达卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;湖北农信社.信通卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;鞍山市商业银行.千山卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;丹东商行.银杏卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;南通市商业银行.金桥卡&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;洛阳市商业银行.都市一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;郑州商业银行.世纪一卡通&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;扬州市商业银行.绿扬卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;永隆银行有限公司.永隆人民币信用卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;哈尔滨市商业银行.丁香借记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;天津市商业银行.津卡贷记卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;台州市商业银行.大唐卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;银川市商业银行.如意借记卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;大西洋银行股份有限公司.澳门币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.人民币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.港币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;澳门国际银行.澳门币卡&quot;, \n         &quot;广州农村信用合作社联合社.麒麟储蓄卡&quot;, \n         &quot;广州农村信用合作社.麒麟储蓄卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;吉林市商业银行.雾凇卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;三门峡市城市信用社.天鹅卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;抚顺市商业银行.绿叶卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;昆山农村信用合作社联合社.江通卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;常州商业银行.月季卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;湛江市商业银行.南珠卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙借记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;金华市商业银行.双龙贷记卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;大新银行有限公司.大新人民币信用卡金卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;江苏农信社.圆鼎卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡金卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币信用卡普通卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;中信嘉华银行有限公司.人民币借记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;常熟市农村商业银行.粒金贷记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;廖创兴银行有限公司.港币借记卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;沈阳市商业银行.玫瑰卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;广州市商业银行.羊城借记卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;上海银行.申卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;江门市新会农信社.信通卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;东亚银行有限公司.人民币信用卡金卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;乌鲁木齐市商业银行.雪莲贷记卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;高要市农村信用联社.信通卡&quot;, \n         &quot;上海市农村信用合作社联合社.如意卡&quot;, \n         &quot;上海市农村信用合作社联社.如意卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;江阴市农村商业银行.合作贷记卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;无锡市商业银行.太湖金保卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;绍兴市商业银行.兰花卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;吴江农村商业银行.垂虹卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;大新银行有限公司.借记卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联人民币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联港币银行卡&quot;, \n         &quot;星展银行.银联银行卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;AEON信贷财务.AEON JUSCO银联卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex港币卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;Travelex.Travelex美元卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;石家庄市商业银行.如意借记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;陕西省农村信用社联合社.陕西信合富泰卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通白金卡&quot;, \n         &quot;高要市农村信用合作社联合社.信通金卡&quot;, \n         &quot;高要市农村信用合作社联社.信通金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡白金卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡普卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-轻松理财卡钻石卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方-新标准准贷记卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡金卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.人民币信用卡普卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.人民币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.港币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;大丰银行有限公司.澳门币借记卡&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Classic&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;哈萨克斯坦国民储蓄银行.Halykbank Golden&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通白金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通金卡&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;德阳市商业银行.锦程卡定活一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.招商银行信用卡&quot;, \n         &quot;招商银行银行.招商银行银行信用卡&quot;, \n         &quot;招商银行.一卡通&quot;, \n         &quot;招商银行银行.一卡通&quot;, \n         &quot;招商银行.公司卡&quot;, \n         &quot;招商银行银行.公司卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;民生银行.民生信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联白金信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;中国民生银行.民生银联商务信用卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;中国民生银行.民生借记卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏至尊金卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏丽人卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;华夏银行.华夏万通卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡普卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡白金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;中国光大银行.炎黄卡金卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;光大银行.阳光卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;江西省农村信用社联合社.百福卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;渤海银行.渤海银行公司借记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行信用卡中心.中信银联标准贷记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信借记卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信实业银行.中信贵宾卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;中信银行.中信理财宝白金卡&quot;, \n         &quot;建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡储蓄卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国建设银行.龙卡准贷记卡金卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行澳门分行.人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-个人金卡&quot;, \n         &quot;中国银行.长城人民币信用卡-专用卡普卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-员工金卡&quot;, \n         &quot;中国银行.长城人民币信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位普卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城人民币信用卡-单位金卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.银联单币贷记卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行.长城信用卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;中国银行澳门分行.中银卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;曲靖市商业银行.珠江源卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗校园卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗星座卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗社保卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗旅游卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.金穗青年卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.复合介质金穗通宝卡&quot;, \n         &quot;农业银行.金穗海通卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗贷记卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗惠农卡&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝贵宾卡(银)&quot;, \n         &quot;农业银行.金穗通宝卡（暂未使用）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（金）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（白金）&quot;, \n         &quot;中国农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（单位卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝卡（个人普卡）&quot;, \n         &quot;农业银行.金穗通宝卡&quot;, \n         &quot;农业银行.金穗通宝贵宾卡（钻石）&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;江苏东吴农村商业银行.新苏卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;桂林市商业银行.漓江卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;日照市商业银行.黄海卡&quot;, \n         &quot;浙江省农村信用社联合社.丰收卡&quot;, \n         &quot;浙江省农村信用社联社.丰收卡&quot;, \n         &quot;珠海农村信用合作社联社.信通卡&quot;, \n         &quot;珠海农村信用合作联社.信通卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;大庆市商业银行.玉兔卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;澳门永亨银行股份有限公司.人民币卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;莱芜市商业银行.金凤卡&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;长春市商业银行.君子兰一卡通&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;徐州市商业银行.彭城借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;重庆市农村信用社联合社.信合平安卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;太仓农村商业银行.郑和卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;靖江市长江城市信用社.长江卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;永亨银行.永亨尊贵理财卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;杭州市商业银行.西湖卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;徽商银行.黄山卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;柳州市商业银行.龙城卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;尧都区农村信用合作社联社.天河卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;渤海银行.渤海银行借记卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;重庆市农村信用社联合社.信合希望卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;烟台市商业银行.金通卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;武进农村商业银行.阳湖卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;上海银行.申卡借记卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;贵州省农村信用社联合社.信合卡&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;江苏锡州农村商业银行.金阿福&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;中外合资.南充市商业银行.熊猫团团卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;长沙市商业银行.芙蓉贷记卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.银联信用卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.兴业自然人生理财卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;兴业银行.万能卡&quot;, \n         &quot;石嘴山城市信用社.麒麟卡&quot;, \n         &quot;张家口市商业银行.好运卡&quot;, \n         &quot;交通银行.太平洋卡&quot;, \n         &quot;中国工商银行.公务卡&quot;, \n         &quot;中国建设银行.公务卡&quot;, \n         &quot;大庆市商业银行.公务卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;Discover Financial Services，Inc.发现卡&quot;, \n         &quot;.发现卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;上海银行.上海明珠卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;泉州市商业银行.海峡储蓄卡&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发VISA信用卡&quot;, \n         &quot;广东发展银行.广发理财通&quot;, \n         &quot;广东发展银行.广发信用卡&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商.招行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;招商银行.招商银行银行一卡通&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;长沙市商业银行.芙蓉卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;南通商业银行.金桥卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;浦东发展银行.东方卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;贵阳市商业银行.甲秀卡&quot;, \n         &quot;郑州市商业银行.世纪一卡通&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人普卡&quot;, \n         &quot;工商银行.牡丹银联灵通卡-个人金卡&quot;, \n         &quot;工商银行.牡丹银联理财金卡&quot;, \n         &quot;上海浦东发展银行.东方卡&quot;, \n         &quot;深圳发展银行.发展卡&quot;, \n};\n\n    public static String getNameOfBank(char[] charBin, int offset)\n    {\n        long longBin = 0;\n\n        for(int i=0; i&lt; 6; i++)\n        {\n            longBin = (longBin*10) + (charBin[i+offset]-48);        \n        }\n        Log.e(&quot;sangfei.code&quot;, &quot;bankBin: &quot;+longBin);\n\n        int index = binarySearch(bankBin, longBin);\n\n        if(index==-1)\n        {\n            return &quot;磁条卡卡号:\\n&quot;;\n        }\n        return bankName[index]+&quot;:\\n&quot;;\n    }\n\n    //二分查找方法\n    public static int binarySearch(long[] srcArray, long des){\n        int low = 0;\n        int high = srcArray.length-1;\n        while(low &lt;= high) \n        {\n            int middle = (low + high)/2;\n            if(des == srcArray[middle]) \n            { \n                return middle;\n            }\n            else if(des &lt;srcArray[middle]) \n            { \n                high = middle - 1; \n            }\n            else \n            { \n                low = middle + 1;\n            }\n        } \n        return -1;\n    }\n}</pre>\n\n<p>使用例子:</p>\n<pre class=\"brush:java;toolbar:false\">char[] cardNumber = {&#39;6&#39;, &#39;2&#39;, &#39;2&#39;, &#39;8&#39;, &#39;2&#39;, &#39;5&#39;, &#39;0&#39;};//卡号\nSring bankName = BankInfo.getNameOfBank(cardNumber, 0);//获取银行卡的信息</pre>"},{"title":"Adroid zxing 二维码3.1集成（源码无删减）","date":"2015-07-12T15:09:48.000Z","_content":"\n# Adroid zxing 二维码3.1集成\n\n**文章转自：[http://my.oschina.net/gluoyer/blog/315947](http://my.oschina.net/gluoyer/blog/315947)**\n\n_引子：最近项目中用到二维码，找到了最新的3.1版本_<span style=\"color: rgb(255, 0, 0); font-size: 20px;\"> </span>[<span style=\"color: rgb(255, 0, 0); font-size: 20px;\">zxing-GitHub</span>](https://github.com/zxing/zxing/)_，进行了集成、调整，同时笔记以备忘。_\n\n\n_<span style=\"color:#9b00d3\">    特此版本去掉了下载时需要积分的情况</span>_\n<!-- more -->\n实现效果：\n\n    ![19115112_23fw.png](/upload/2015/07/201507131436788417101357.png \"201507131436788417101357.png\")\n\n    相关博文很多，生成jar包，简化代码。度娘一下就有了。 感觉需要必要笔记，是发现：\n\n*   以1.6版本居多，据说3.1对4x支持更好些。\n\n*   简化后，对扩展比较麻烦。\n\n*   修改竖屏后，修改的地方找起来比较麻烦。\n\n### 未使用简化版本，直接引用zxing源码\n\n    由于网上的简化版本，对功能扩展比较麻烦，因此，直接将zxing放到了工程目录下的extras/zxing下，只在项目中加入了目录，复制、修改了必要的文件，其他均引用源码文件\n\n![19115113_8oXJ.jpg](/upload/2015/07/201507131436788453805554.jpg \"201507131436788453805554.jpg\")\n\n### 修改竖屏后所需调整\n\n    集成过程中，发现网文提到的修改竖屏，还是有点分散的，找起还是有点麻烦。故在<span style=\"color:#0000ff\">CameraConfigurationManager</span>加了一个标识方法：<span style=\"color:#0000ff\">isPortrait()</span>，返回<span style=\"color:#ff0000\">true</span>\n\n    例如，<span style=\"color:#0000ff\">DecodeHandler.java</span>的<span style=\"color:#0000ff\">decode</span>方法中需要调整，如下条件实现：\n\n![19115114_4eQr.jpg](/upload/2015/07/201507131436788496442797.jpg \"201507131436788496442797.jpg\")\n\n其他需要修改的地方，也如此使用<span style=\"color:#0000ff\">isPortrait()</span>条件，所以，只需要看下<span style=\"color:#0000ff\">isPortrait()</span>的<span style=\"color:#ccb400\">Call Hierarchy</span>，就比较清晰得看到所需修改。\n\n同时，返回<span style=\"color:#ff0000\">false</span>，就可以恢复到源码处理。\n\n### 绘制扫描框\n\n    根据项目需求，需要重新绘制扫描框框，主要在<span style=\"color:#0000ff\">ViewfinderView.java</span>实现绘制方法，同样条件控制，<span style=\"color:#0000ff\">drawScanFrame</span>局部如下：\n\n![19115116_xCkn.jpg](/upload/2015/07/201507131436788506598227.jpg \"201507131436788506598227.jpg\")\n\n### 灯光的设置\n\n    根据源码中，音量键对灯光的开关，添加了新接口，支持标题右上角对灯光的控制：\n\n<span style=\"color:#0000ff\">CameraManager.java</span>中：\n\n![19115116_gKwu.jpg](/upload/2015/07/201507131436788519124077.jpg \"201507131436788519124077.jpg\")\n\n以及<span style=\"color:#0000ff\">CameraConfigurationManager.java</span>中：\n\n![19115117_ue4m.jpg](/upload/2015/07/201507131436788593429629.jpg \"201507131436788593429629.jpg\")\n\n在Activity中进行必要的调用处理即可。\n\n### <span style=\"color:#0000ff\">QrCaptureActivity</span> 中扫描成功的处理\n\n   根据实际需求，扫描成功后，跳转并将数据传递给新页面，因此，只在<span style=\"color:#0000ff\">handleDecode</span>方法中，\n\n![19115119_Ehb6.jpg](/upload/2015/07/201507131436788571117265.jpg \"201507131436788571117265.jpg\")\n\n    在注释信息下面，将新页面的跳转就可以了。  \n\n如果有其他需求，也在这里自行处理，应该就没有问题了。\n\n另外，运行zxing源码，可以看到它有个设置页面，也可以根据需求，集成该设置页面，或修改<span style=\"color:#f79646\">R.xml.preferences</span>中的配置即可。","source":"_posts/Adroid-zxing-二维码3-1集成（源码无删减）.md","raw":"---\ntitle: Adroid zxing 二维码3.1集成（源码无删减）\ncategories:\n- 开源项目\ntags: \n- 二维码\n- zxing\ndate: 2015-07-12 23:09:48\n---\n\n# Adroid zxing 二维码3.1集成\n\n**文章转自：[http://my.oschina.net/gluoyer/blog/315947](http://my.oschina.net/gluoyer/blog/315947)**\n\n_引子：最近项目中用到二维码，找到了最新的3.1版本_<span style=\"color: rgb(255, 0, 0); font-size: 20px;\"> </span>[<span style=\"color: rgb(255, 0, 0); font-size: 20px;\">zxing-GitHub</span>](https://github.com/zxing/zxing/)_，进行了集成、调整，同时笔记以备忘。_\n\n\n_<span style=\"color:#9b00d3\">    特此版本去掉了下载时需要积分的情况</span>_\n<!-- more -->\n实现效果：\n\n    ![19115112_23fw.png](/upload/2015/07/201507131436788417101357.png \"201507131436788417101357.png\")\n\n    相关博文很多，生成jar包，简化代码。度娘一下就有了。 感觉需要必要笔记，是发现：\n\n*   以1.6版本居多，据说3.1对4x支持更好些。\n\n*   简化后，对扩展比较麻烦。\n\n*   修改竖屏后，修改的地方找起来比较麻烦。\n\n### 未使用简化版本，直接引用zxing源码\n\n    由于网上的简化版本，对功能扩展比较麻烦，因此，直接将zxing放到了工程目录下的extras/zxing下，只在项目中加入了目录，复制、修改了必要的文件，其他均引用源码文件\n\n![19115113_8oXJ.jpg](/upload/2015/07/201507131436788453805554.jpg \"201507131436788453805554.jpg\")\n\n### 修改竖屏后所需调整\n\n    集成过程中，发现网文提到的修改竖屏，还是有点分散的，找起还是有点麻烦。故在<span style=\"color:#0000ff\">CameraConfigurationManager</span>加了一个标识方法：<span style=\"color:#0000ff\">isPortrait()</span>，返回<span style=\"color:#ff0000\">true</span>\n\n    例如，<span style=\"color:#0000ff\">DecodeHandler.java</span>的<span style=\"color:#0000ff\">decode</span>方法中需要调整，如下条件实现：\n\n![19115114_4eQr.jpg](/upload/2015/07/201507131436788496442797.jpg \"201507131436788496442797.jpg\")\n\n其他需要修改的地方，也如此使用<span style=\"color:#0000ff\">isPortrait()</span>条件，所以，只需要看下<span style=\"color:#0000ff\">isPortrait()</span>的<span style=\"color:#ccb400\">Call Hierarchy</span>，就比较清晰得看到所需修改。\n\n同时，返回<span style=\"color:#ff0000\">false</span>，就可以恢复到源码处理。\n\n### 绘制扫描框\n\n    根据项目需求，需要重新绘制扫描框框，主要在<span style=\"color:#0000ff\">ViewfinderView.java</span>实现绘制方法，同样条件控制，<span style=\"color:#0000ff\">drawScanFrame</span>局部如下：\n\n![19115116_xCkn.jpg](/upload/2015/07/201507131436788506598227.jpg \"201507131436788506598227.jpg\")\n\n### 灯光的设置\n\n    根据源码中，音量键对灯光的开关，添加了新接口，支持标题右上角对灯光的控制：\n\n<span style=\"color:#0000ff\">CameraManager.java</span>中：\n\n![19115116_gKwu.jpg](/upload/2015/07/201507131436788519124077.jpg \"201507131436788519124077.jpg\")\n\n以及<span style=\"color:#0000ff\">CameraConfigurationManager.java</span>中：\n\n![19115117_ue4m.jpg](/upload/2015/07/201507131436788593429629.jpg \"201507131436788593429629.jpg\")\n\n在Activity中进行必要的调用处理即可。\n\n### <span style=\"color:#0000ff\">QrCaptureActivity</span> 中扫描成功的处理\n\n   根据实际需求，扫描成功后，跳转并将数据传递给新页面，因此，只在<span style=\"color:#0000ff\">handleDecode</span>方法中，\n\n![19115119_Ehb6.jpg](/upload/2015/07/201507131436788571117265.jpg \"201507131436788571117265.jpg\")\n\n    在注释信息下面，将新页面的跳转就可以了。  \n\n如果有其他需求，也在这里自行处理，应该就没有问题了。\n\n另外，运行zxing源码，可以看到它有个设置页面，也可以根据需求，集成该设置页面，或修改<span style=\"color:#f79646\">R.xml.preferences</span>中的配置即可。","slug":"Adroid-zxing-二维码3-1集成（源码无删减）","published":1,"updated":"2016-03-18T07:25:01.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilxdrxxk0000tkub6wlfdkyb","content":"<h1 id=\"Adroid-zxing-二维码3-1集成\"><a href=\"#Adroid-zxing-二维码3-1集成\" class=\"headerlink\" title=\"Adroid zxing 二维码3.1集成\"></a>Adroid zxing 二维码3.1集成</h1><p><strong>文章转自：<a href=\"http://my.oschina.net/gluoyer/blog/315947\" target=\"_blank\" rel=\"external\">http://my.oschina.net/gluoyer/blog/315947</a></strong></p>\n<p><em>引子：最近项目中用到二维码，找到了最新的3.1版本</em><span style=\"color: rgb(255, 0, 0); font-size: 20px;\"> </span><a href=\"https://github.com/zxing/zxing/\" target=\"_blank\" rel=\"external\"><span style=\"color: rgb(255, 0, 0); font-size: 20px;\">zxing-GitHub</span></a><em>，进行了集成、调整，同时笔记以备忘。</em></p>\n<p><em><span style=\"color:#9b00d3\">    特此版本去掉了下载时需要积分的情况</span></em><br><a id=\"more\"></a><br>实现效果：</p>\n<pre><code>![19115112_23fw.png](/upload/2015/07/201507131436788417101357.png &quot;201507131436788417101357.png&quot;)\n\n相关博文很多，生成jar包，简化代码。度娘一下就有了。 感觉需要必要笔记，是发现：\n</code></pre><ul>\n<li><p>以1.6版本居多，据说3.1对4x支持更好些。</p>\n</li>\n<li><p>简化后，对扩展比较麻烦。</p>\n</li>\n<li><p>修改竖屏后，修改的地方找起来比较麻烦。</p>\n</li>\n</ul>\n<h3 id=\"未使用简化版本，直接引用zxing源码\"><a href=\"#未使用简化版本，直接引用zxing源码\" class=\"headerlink\" title=\"未使用简化版本，直接引用zxing源码\"></a>未使用简化版本，直接引用zxing源码</h3><pre><code>由于网上的简化版本，对功能扩展比较麻烦，因此，直接将zxing放到了工程目录下的extras/zxing下，只在项目中加入了目录，复制、修改了必要的文件，其他均引用源码文件\n</code></pre><p><img src=\"/upload/2015/07/201507131436788453805554.jpg\" alt=\"19115113_8oXJ.jpg\" title=\"201507131436788453805554.jpg\"></p>\n<h3 id=\"修改竖屏后所需调整\"><a href=\"#修改竖屏后所需调整\" class=\"headerlink\" title=\"修改竖屏后所需调整\"></a>修改竖屏后所需调整</h3><pre><code>集成过程中，发现网文提到的修改竖屏，还是有点分散的，找起还是有点麻烦。故在&lt;span style=&quot;color:#0000ff&quot;&gt;CameraConfigurationManager&lt;/span&gt;加了一个标识方法：&lt;span style=&quot;color:#0000ff&quot;&gt;isPortrait()&lt;/span&gt;，返回&lt;span style=&quot;color:#ff0000&quot;&gt;true&lt;/span&gt;\n\n例如，&lt;span style=&quot;color:#0000ff&quot;&gt;DecodeHandler.java&lt;/span&gt;的&lt;span style=&quot;color:#0000ff&quot;&gt;decode&lt;/span&gt;方法中需要调整，如下条件实现：\n</code></pre><p><img src=\"/upload/2015/07/201507131436788496442797.jpg\" alt=\"19115114_4eQr.jpg\" title=\"201507131436788496442797.jpg\"></p>\n<p>其他需要修改的地方，也如此使用<span style=\"color:#0000ff\">isPortrait()</span>条件，所以，只需要看下<span style=\"color:#0000ff\">isPortrait()</span>的<span style=\"color:#ccb400\">Call Hierarchy</span>，就比较清晰得看到所需修改。</p>\n<p>同时，返回<span style=\"color:#ff0000\">false</span>，就可以恢复到源码处理。</p>\n<h3 id=\"绘制扫描框\"><a href=\"#绘制扫描框\" class=\"headerlink\" title=\"绘制扫描框\"></a>绘制扫描框</h3><pre><code>根据项目需求，需要重新绘制扫描框框，主要在&lt;span style=&quot;color:#0000ff&quot;&gt;ViewfinderView.java&lt;/span&gt;实现绘制方法，同样条件控制，&lt;span style=&quot;color:#0000ff&quot;&gt;drawScanFrame&lt;/span&gt;局部如下：\n</code></pre><p><img src=\"/upload/2015/07/201507131436788506598227.jpg\" alt=\"19115116_xCkn.jpg\" title=\"201507131436788506598227.jpg\"></p>\n<h3 id=\"灯光的设置\"><a href=\"#灯光的设置\" class=\"headerlink\" title=\"灯光的设置\"></a>灯光的设置</h3><pre><code>根据源码中，音量键对灯光的开关，添加了新接口，支持标题右上角对灯光的控制：\n</code></pre><p><span style=\"color:#0000ff\">CameraManager.java</span>中：</p>\n<p><img src=\"/upload/2015/07/201507131436788519124077.jpg\" alt=\"19115116_gKwu.jpg\" title=\"201507131436788519124077.jpg\"></p>\n<p>以及<span style=\"color:#0000ff\">CameraConfigurationManager.java</span>中：</p>\n<p><img src=\"/upload/2015/07/201507131436788593429629.jpg\" alt=\"19115117_ue4m.jpg\" title=\"201507131436788593429629.jpg\"></p>\n<p>在Activity中进行必要的调用处理即可。</p>\n<h3 id=\"QrCaptureActivity-中扫描成功的处理\"><a href=\"#QrCaptureActivity-中扫描成功的处理\" class=\"headerlink\" title=\"QrCaptureActivity 中扫描成功的处理\"></a><span style=\"color:#0000ff\">QrCaptureActivity</span> 中扫描成功的处理</h3><p>   根据实际需求，扫描成功后，跳转并将数据传递给新页面，因此，只在<span style=\"color:#0000ff\">handleDecode</span>方法中，</p>\n<p><img src=\"/upload/2015/07/201507131436788571117265.jpg\" alt=\"19115119_Ehb6.jpg\" title=\"201507131436788571117265.jpg\"></p>\n<pre><code>在注释信息下面，将新页面的跳转就可以了。  \n</code></pre><p>如果有其他需求，也在这里自行处理，应该就没有问题了。</p>\n<p>另外，运行zxing源码，可以看到它有个设置页面，也可以根据需求，集成该设置页面，或修改<span style=\"color:#f79646\">R.xml.preferences</span>中的配置即可。</p>\n","excerpt":"<h1 id=\"Adroid-zxing-二维码3-1集成\"><a href=\"#Adroid-zxing-二维码3-1集成\" class=\"headerlink\" title=\"Adroid zxing 二维码3.1集成\"></a>Adroid zxing 二维码3.1集成</h1><p><strong>文章转自：<a href=\"http://my.oschina.net/gluoyer/blog/315947\">http://my.oschina.net/gluoyer/blog/315947</a></strong></p>\n<p><em>引子：最近项目中用到二维码，找到了最新的3.1版本</em><span style=\"color: rgb(255, 0, 0); font-size: 20px;\"> </span><a href=\"https://github.com/zxing/zxing/\"><span style=\"color: rgb(255, 0, 0); font-size: 20px;\">zxing-GitHub</span></a><em>，进行了集成、调整，同时笔记以备忘。</em></p>\n<p><em><span style=\"color:#9b00d3\">    特此版本去掉了下载时需要积分的情况</span></em><br>","more":"<br>实现效果：</p>\n<pre><code>![19115112_23fw.png](/upload/2015/07/201507131436788417101357.png &quot;201507131436788417101357.png&quot;)\n\n相关博文很多，生成jar包，简化代码。度娘一下就有了。 感觉需要必要笔记，是发现：\n</code></pre><ul>\n<li><p>以1.6版本居多，据说3.1对4x支持更好些。</p>\n</li>\n<li><p>简化后，对扩展比较麻烦。</p>\n</li>\n<li><p>修改竖屏后，修改的地方找起来比较麻烦。</p>\n</li>\n</ul>\n<h3 id=\"未使用简化版本，直接引用zxing源码\"><a href=\"#未使用简化版本，直接引用zxing源码\" class=\"headerlink\" title=\"未使用简化版本，直接引用zxing源码\"></a>未使用简化版本，直接引用zxing源码</h3><pre><code>由于网上的简化版本，对功能扩展比较麻烦，因此，直接将zxing放到了工程目录下的extras/zxing下，只在项目中加入了目录，复制、修改了必要的文件，其他均引用源码文件\n</code></pre><p><img src=\"/upload/2015/07/201507131436788453805554.jpg\" alt=\"19115113_8oXJ.jpg\" title=\"201507131436788453805554.jpg\"></p>\n<h3 id=\"修改竖屏后所需调整\"><a href=\"#修改竖屏后所需调整\" class=\"headerlink\" title=\"修改竖屏后所需调整\"></a>修改竖屏后所需调整</h3><pre><code>集成过程中，发现网文提到的修改竖屏，还是有点分散的，找起还是有点麻烦。故在&lt;span style=&quot;color:#0000ff&quot;&gt;CameraConfigurationManager&lt;/span&gt;加了一个标识方法：&lt;span style=&quot;color:#0000ff&quot;&gt;isPortrait()&lt;/span&gt;，返回&lt;span style=&quot;color:#ff0000&quot;&gt;true&lt;/span&gt;\n\n例如，&lt;span style=&quot;color:#0000ff&quot;&gt;DecodeHandler.java&lt;/span&gt;的&lt;span style=&quot;color:#0000ff&quot;&gt;decode&lt;/span&gt;方法中需要调整，如下条件实现：\n</code></pre><p><img src=\"/upload/2015/07/201507131436788496442797.jpg\" alt=\"19115114_4eQr.jpg\" title=\"201507131436788496442797.jpg\"></p>\n<p>其他需要修改的地方，也如此使用<span style=\"color:#0000ff\">isPortrait()</span>条件，所以，只需要看下<span style=\"color:#0000ff\">isPortrait()</span>的<span style=\"color:#ccb400\">Call Hierarchy</span>，就比较清晰得看到所需修改。</p>\n<p>同时，返回<span style=\"color:#ff0000\">false</span>，就可以恢复到源码处理。</p>\n<h3 id=\"绘制扫描框\"><a href=\"#绘制扫描框\" class=\"headerlink\" title=\"绘制扫描框\"></a>绘制扫描框</h3><pre><code>根据项目需求，需要重新绘制扫描框框，主要在&lt;span style=&quot;color:#0000ff&quot;&gt;ViewfinderView.java&lt;/span&gt;实现绘制方法，同样条件控制，&lt;span style=&quot;color:#0000ff&quot;&gt;drawScanFrame&lt;/span&gt;局部如下：\n</code></pre><p><img src=\"/upload/2015/07/201507131436788506598227.jpg\" alt=\"19115116_xCkn.jpg\" title=\"201507131436788506598227.jpg\"></p>\n<h3 id=\"灯光的设置\"><a href=\"#灯光的设置\" class=\"headerlink\" title=\"灯光的设置\"></a>灯光的设置</h3><pre><code>根据源码中，音量键对灯光的开关，添加了新接口，支持标题右上角对灯光的控制：\n</code></pre><p><span style=\"color:#0000ff\">CameraManager.java</span>中：</p>\n<p><img src=\"/upload/2015/07/201507131436788519124077.jpg\" alt=\"19115116_gKwu.jpg\" title=\"201507131436788519124077.jpg\"></p>\n<p>以及<span style=\"color:#0000ff\">CameraConfigurationManager.java</span>中：</p>\n<p><img src=\"/upload/2015/07/201507131436788593429629.jpg\" alt=\"19115117_ue4m.jpg\" title=\"201507131436788593429629.jpg\"></p>\n<p>在Activity中进行必要的调用处理即可。</p>\n<h3 id=\"QrCaptureActivity-中扫描成功的处理\"><a href=\"#QrCaptureActivity-中扫描成功的处理\" class=\"headerlink\" title=\"QrCaptureActivity 中扫描成功的处理\"></a><span style=\"color:#0000ff\">QrCaptureActivity</span> 中扫描成功的处理</h3><p>   根据实际需求，扫描成功后，跳转并将数据传递给新页面，因此，只在<span style=\"color:#0000ff\">handleDecode</span>方法中，</p>\n<p><img src=\"/upload/2015/07/201507131436788571117265.jpg\" alt=\"19115119_Ehb6.jpg\" title=\"201507131436788571117265.jpg\"></p>\n<pre><code>在注释信息下面，将新页面的跳转就可以了。  \n</code></pre><p>如果有其他需求，也在这里自行处理，应该就没有问题了。</p>\n<p>另外，运行zxing源码，可以看到它有个设置页面，也可以根据需求，集成该设置页面，或修改<span style=\"color:#f79646\">R.xml.preferences</span>中的配置即可。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cilxdmyll0008c4ube05j2rl0","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmylu000gc4ub3u2joti5"},{"post_id":"cilxdmykz0000c4ub41zyz69k","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmylv000kc4ub1oyi4f7v"},{"post_id":"cilxdmyls000fc4uby0d8dpy7","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmylw000nc4ub7xw7f4b4"},{"post_id":"cilxdmylb0002c4ub3bt4o65v","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyly000rc4ub1sqvqfyk"},{"post_id":"cilxdmylu000hc4ubbhb042y3","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmym0000uc4ubef64syhn"},{"post_id":"cilxdmylw000mc4ubni8z8ygv","category_id":"cilxdmylv000ic4ub76egp2jy","_id":"cilxdmym3000yc4ub5d6uppz1"},{"post_id":"cilxdmylh0006c4ublc5ot3n3","category_id":"cilxdmylv000ic4ub76egp2jy","_id":"cilxdmym40011c4ub7q0v2wo8"},{"post_id":"cilxdmylx000oc4ubcowto49u","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmym60014c4ubq353h288"},{"post_id":"cilxdmylp000bc4ubs1g9an0o","category_id":"cilxdmylv000ic4ub76egp2jy","_id":"cilxdmym90018c4ubj7l7lxck"},{"post_id":"cilxdmym3000zc4ub2k2av0d4","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymb001bc4ubva76sc43"},{"post_id":"cilxdmym50012c4ub8x7dgeo5","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymc001ec4ubcny7bqus"},{"post_id":"cilxdmyly000sc4ubjnte5hzi","category_id":"cilxdmym2000xc4ubgx7xdy5z","_id":"cilxdmyme001hc4ub8vfl2iuv"},{"post_id":"cilxdmym70016c4ubnfqk6g1f","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymg001lc4ub7kij5me6"},{"post_id":"cilxdmym90019c4ubef7tc542","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymh001oc4ubpd639m8l"},{"post_id":"cilxdmym0000vc4ub4g2k0cvm","category_id":"cilxdmym2000xc4ubgx7xdy5z","_id":"cilxdmymk001sc4ubg3rgqake"},{"post_id":"cilxdmymb001cc4ub3gontm92","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymn001vc4ubmde8pjg6"},{"post_id":"cilxdmymc001gc4ubxac9fy70","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymo001xc4uba3mmpbv6"},{"post_id":"cilxdmyme001jc4ub9zj4s9sb","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymq0021c4ub19egnvrd"},{"post_id":"cilxdmymg001nc4ub3o96v17u","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymr0023c4ubxwble0j1"},{"post_id":"cilxdmymi001qc4ubppmpfnkv","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymt0027c4ubp25em7kk"},{"post_id":"cilxdmyml001tc4ubjr9paosr","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmymu0029c4ubh2ofjbq5"},{"post_id":"cilxdmymn001wc4ubeuwbj5a9","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyn1002cc4ubmqnh13y6"},{"post_id":"cilxdmymp001zc4ubgzfg2d5v","category_id":"cilxdmylv000ic4ub76egp2jy","_id":"cilxdmyn4002gc4ubqymvpzzi"},{"post_id":"cilxdmymt0028c4ubohn3e151","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyn7002kc4ubj5eh2vxl"},{"post_id":"cilxdmymu002ac4ubzgyq7lgm","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyn8002mc4ubsp3plt3v"},{"post_id":"cilxdmymq0022c4uby90vxrub","category_id":"cilxdmyms0026c4ubru3jdawj","_id":"cilxdmyn9002oc4ubxsqk6r7q"},{"post_id":"cilxdmyn2002dc4ubwotlvud0","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyn9002rc4ubf404a4mk"},{"post_id":"cilxdmyn4002hc4ubg0eo04w2","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyna002tc4ubnz522qmc"},{"post_id":"cilxdmymr0024c4ub0msubdat","category_id":"cilxdmyms0026c4ubru3jdawj","_id":"cilxdmyna002vc4ub4j0exxzn"},{"post_id":"cilxdmyn7002lc4ubvph2zo1g","category_id":"cilxdmyms0026c4ubru3jdawj","_id":"cilxdmyna002xc4ubcawni6hi"},{"post_id":"cilxdmyn8002nc4ubljergozn","category_id":"cilxdmyms0026c4ubru3jdawj","_id":"cilxdmynb002zc4ubxvu4ieim"},{"post_id":"cilxdmynr003ic4ub2e9xb3qx","category_id":"cilxdmylg0005c4ub1tlrqnvf","_id":"cilxdmyns003jc4ub7nd7ss95"},{"post_id":"cilxdrxxk0000tkub6wlfdkyb","category_id":"cilxdmylv000ic4ub76egp2jy","_id":"cilxdrxxv0002tkubp9ffyocw"}],"PostTag":[{"post_id":"cilxdmykz0000c4ub41zyz69k","tag_id":"cilxdmyle0004c4ub9zxznoie","_id":"cilxdmyls000ec4ubakx6giy0"},{"post_id":"cilxdmylb0002c4ub3bt4o65v","tag_id":"cilxdmylo000ac4ubqa1404sf","_id":"cilxdmylw000lc4ubyz6xrn4z"},{"post_id":"cilxdmylx000oc4ubcowto49u","tag_id":"cilxdmyle0004c4ub9zxznoie","_id":"cilxdmylz000tc4ubc3pto72h"},{"post_id":"cilxdmyll0008c4ube05j2rl0","tag_id":"cilxdmylv000jc4ubcigms6vg","_id":"cilxdmym40010c4ubv6gbthr8"},{"post_id":"cilxdmyll0008c4ube05j2rl0","tag_id":"cilxdmylx000qc4ub22w50mvn","_id":"cilxdmym60013c4ub8cifscqy"},{"post_id":"cilxdmym70016c4ubnfqk6g1f","tag_id":"cilxdmylo000ac4ubqa1404sf","_id":"cilxdmyma001ac4ubzxyxr7ke"},{"post_id":"cilxdmylp000bc4ubs1g9an0o","tag_id":"cilxdmym2000wc4ub4uaqlla2","_id":"cilxdmymc001fc4ubmjsuvie9"},{"post_id":"cilxdmylp000bc4ubs1g9an0o","tag_id":"cilxdmym70015c4ubaugramiy","_id":"cilxdmyme001ic4uby7xtn61i"},{"post_id":"cilxdmymc001gc4ubxac9fy70","tag_id":"cilxdmylo000ac4ubqa1404sf","_id":"cilxdmymg001mc4ubleo1l559"},{"post_id":"cilxdmyly000sc4ubjnte5hzi","tag_id":"cilxdmymc001dc4ubq8zkx1n4","_id":"cilxdmymi001pc4ubx9rqaped"},{"post_id":"cilxdmym0000vc4ub4g2k0cvm","tag_id":"cilxdmymf001kc4ubgwts7lvh","_id":"cilxdmymm001uc4ubcva381kw"},{"post_id":"cilxdmym3000zc4ub2k2av0d4","tag_id":"cilxdmymj001rc4ubq5gikcui","_id":"cilxdmymq0020c4ubs1sczmh8"},{"post_id":"cilxdmym50012c4ub8x7dgeo5","tag_id":"cilxdmymo001yc4uby6lb3yhp","_id":"cilxdmyn3002fc4ubxdytquow"},{"post_id":"cilxdmym50012c4ub8x7dgeo5","tag_id":"cilxdmyms0025c4ub2vp1ipsd","_id":"cilxdmyn5002ic4ub2qiocqd4"},{"post_id":"cilxdmym90019c4ubef7tc542","tag_id":"cilxdmyn0002bc4ubkorg77tl","_id":"cilxdmyn9002qc4ubeb2if7gu"},{"post_id":"cilxdmym90019c4ubef7tc542","tag_id":"cilxdmyn6002jc4ubnpsmycga","_id":"cilxdmyn9002sc4ubpbzabpm6"},{"post_id":"cilxdmyml001tc4ubjr9paosr","tag_id":"cilxdmyn9002pc4ubmu9a3jjf","_id":"cilxdmyna002wc4ub9x3l10tv"},{"post_id":"cilxdmymn001wc4ubeuwbj5a9","tag_id":"cilxdmyna002uc4ub6ps6l70t","_id":"cilxdmynb0030c4ub6zim2cwb"},{"post_id":"cilxdmymq0022c4uby90vxrub","tag_id":"cilxdmyna002yc4ubbyc9xqzu","_id":"cilxdmynb0032c4ub239v3t3t"},{"post_id":"cilxdmymr0024c4ub0msubdat","tag_id":"cilxdmynb0031c4ub4jlz1vxl","_id":"cilxdmync0034c4ubgv6dzwdb"},{"post_id":"cilxdmymt0028c4ubohn3e151","tag_id":"cilxdmync0033c4ube7w1em1u","_id":"cilxdmynd0036c4ubuf3o5abr"},{"post_id":"cilxdmymu002ac4ubzgyq7lgm","tag_id":"cilxdmync0035c4ubi9rx6je7","_id":"cilxdmyne0039c4ubapltlvk2"},{"post_id":"cilxdmymu002ac4ubzgyq7lgm","tag_id":"cilxdmynd0037c4uby5b92o7h","_id":"cilxdmyne003ac4ubkpichlm2"},{"post_id":"cilxdmyn2002dc4ubwotlvud0","tag_id":"cilxdmynd0038c4ubp7dpfw3w","_id":"cilxdmyne003cc4ubd4m81uyy"},{"post_id":"cilxdmyn4002hc4ubg0eo04w2","tag_id":"cilxdmyne003bc4ubvghv77xk","_id":"cilxdmynf003fc4ub2tiznfu3"},{"post_id":"cilxdmyn4002hc4ubg0eo04w2","tag_id":"cilxdmynf003dc4ubn5bk4j7l","_id":"cilxdmyng003gc4ubhthqe2jr"},{"post_id":"cilxdmyn8002nc4ubljergozn","tag_id":"cilxdmynf003ec4ubpityqx61","_id":"cilxdmyng003hc4ub8c8px1x4"},{"post_id":"cilxdrxxk0000tkub6wlfdkyb","tag_id":"cilxdrxxp0001tkubame6quzp","_id":"cilxdrxxw0004tkubw2y2ntu5"},{"post_id":"cilxdrxxk0000tkub6wlfdkyb","tag_id":"cilxdrxxw0003tkub5vzh8e1l","_id":"cilxdrxxw0005tkubi0whk8rn"}],"Tag":[{"name":"设计模式","_id":"cilxdmyle0004c4ub9zxznoie"},{"name":"Adapter","_id":"cilxdmylo000ac4ubqa1404sf"},{"name":"AWS","_id":"cilxdmylv000jc4ubcigms6vg"},{"name":"ShadowScocks","_id":"cilxdmylx000qc4ub22w50mvn"},{"name":"ORM","_id":"cilxdmym2000wc4ub4uaqlla2"},{"name":"sqlite","_id":"cilxdmym70015c4ubaugramiy"},{"name":"EditSpinner","_id":"cilxdmymc001dc4ubq8zkx1n4"},{"name":"ListItemFold","_id":"cilxdmymf001kc4ubgwts7lvh"},{"name":"底部导航","_id":"cilxdmymj001rc4ubq5gikcui"},{"name":"ExpandableListView","_id":"cilxdmymo001yc4uby6lb3yhp"},{"name":"顶端不动","_id":"cilxdmyms0025c4ub2vp1ipsd"},{"name":"ViewHolder","_id":"cilxdmyn0002bc4ubkorg77tl"},{"name":"ListView","_id":"cilxdmyn6002jc4ubnpsmycga"},{"name":"jni","_id":"cilxdmyn9002pc4ubmu9a3jjf"},{"name":"解耦","_id":"cilxdmyna002uc4ub6ps6l70t"},{"name":"WIFI通信","_id":"cilxdmyna002yc4ubbyc9xqzu"},{"name":"你最美","_id":"cilxdmynb0031c4ub4jlz1vxl"},{"name":"ViewStub","_id":"cilxdmync0033c4ube7w1em1u"},{"name":"微信红包","_id":"cilxdmync0035c4ubi9rx6je7"},{"name":"算法","_id":"cilxdmynd0037c4uby5b92o7h"},{"name":"QQ上线下线","_id":"cilxdmynd0038c4ubp7dpfw3w"},{"name":"百度云","_id":"cilxdmyne003bc4ubvghv77xk"},{"name":"真实链接","_id":"cilxdmynf003dc4ubn5bk4j7l"},{"name":"哔哩哔哩","_id":"cilxdmynf003ec4ubpityqx61"},{"name":"二维码","_id":"cilxdrxxp0001tkubame6quzp"},{"name":"zxing","_id":"cilxdrxxw0003tkub5vzh8e1l"}]}}